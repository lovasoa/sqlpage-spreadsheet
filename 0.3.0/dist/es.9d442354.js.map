{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,E,Q,C,E,Q,S,C,C,C,MCesM,EAwMjJ,EA81B3B,EAAgS,EAA2xD,EAi9IhjE,E,E,E,O,C,oB,W,O,C,G,E,E,O,C,0B,W,O,C,G,E,E,O,C,4B,W,O,C,G,E,E,O,C,oB,W,O,C,G,E,E,O,C,+B,W,O,C,G,E,E,O,C,0B,W,O,C,G,E,E,O,C,oC,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,iB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,a,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,oC,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,qC,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,uC,W,O,E,G,E,E,O,C,qC,W,O,E,G,E,E,O,C,qC,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,iB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,2C,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,sC,W,O,E,G,E,E,O,C,oC,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,qC,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,a,W,O,E,G,E,E,O,C,iB,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,oB,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,wB,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,oC,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,6C,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,uC,W,O,E,G,E,E,O,C,sC,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,iB,W,O,E,G,E,E,O,C,iB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,mB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,4B,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,uB,W,O,E,G,E,E,O,C,gD,W,O,E,G,E,E,O,C,+D,W,O,E,G,E,E,O,C,sD,W,O,E,G,E,E,O,C,8D,W,O,E,G,E,E,O,C,kB,W,O,E,G,E,E,O,C,iC,W,O,E,G,E,E,O,C,+B,W,O,E,G,E,E,O,C,sB,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,kC,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,6B,W,O,E,G,E,E,O,C,yB,W,O,E,G,E,E,O,C,qB,W,O,E,G,E,E,O,C,mC,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,wC,W,O,E,G,E,E,O,C,wC,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,mC,W,O,E,G,E,E,O,C,yC,W,O,E,G,E,E,O,C,yC,W,O,E,G,E,E,O,C,0B,W,O,E,G,E,E,O,C,gC,W,O,E,G,E,E,O,C,2B,W,O,E,G,E,E,O,C,8B,W,O,E,G,E,E,O,C,mC,W,O,E,G,E,E,O,C,qC,W,O,E,G,E,E,O,C,oB,W,O,E,G,IA+7EjC,EAt7P+c,E,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SAf/c,EAAY,OAAO,cAAc,CACjC,EAAkB,CAAC,EAAK,EAAK,IAAU,KAAO,EAAM,EAAU,EAAK,EAAK,CAAE,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,SAAU,CAAC,EAAG,MAAA,CAAM,GAAK,CAAG,CAAC,EAAI,CAAG,EAChJ,EAAS,CAAC,EAAQ,IAAU,EAAU,EAAQ,OAAQ,CAAE,MAAA,EAAO,aAAc,CAAC,CAAE,GAChF,EAAgB,CAAC,EAAK,EAAK,IAAU,EAAgB,EAAK,AAAc,UAAd,OAAO,EAAkB,EAAM,GAAK,EAAK,GAQnG,EAAc,OAAO,cAAc,CAAE,EAAqB,OAAO,wBAAwB,CAAE,EAAoB,aAAa,EAAG,EAAO,CAAC,EAAY,EAAQ,EAAK,KAClK,IAAK,IAA6G,EAAzG,EAAS,EAAO,EAAI,KAAK,EAAI,EAAO,EAAmB,EAAQ,GAAO,EAAQ,EAAI,EAAW,MAAM,CAAG,EAAc,GAAK,EAAG,IACnI,AAAC,CAAA,EAAY,CAAU,CAAC,EAAE,AAAF,GAAQ,CAAA,EAAU,AAAA,CAAA,EAAO,EAAU,EAAQ,EAAK,GA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","sources":["<anon>","node_modules/@univerjs/sheets/lib/es/index.js","node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","node_modules/rxjs/src/internal/operators/switchMap.ts","node_modules/@univerjs/engine-numfmt/lib/es/index.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire26fc\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"ejawP\", function(module, exports) {\n\n$parcel$export(module.exports, \"SelectionMoveType\", function () { return $a6ab01cd18fda354$export$92a0623308d4909f; });\n$parcel$export(module.exports, \"SheetsSelectionsService\", function () { return $a6ab01cd18fda354$export$c93d00f3ceba73b5; });\n$parcel$export(module.exports, \"DISABLE_NORMAL_SELECTIONS\", function () { return $a6ab01cd18fda354$export$cfd9b1f2e3fa6690; });\n$parcel$export(module.exports, \"INTERCEPTOR_POINT\", function () { return $a6ab01cd18fda354$export$35a9432a9b2d0ac0; });\n$parcel$export(module.exports, \"InterceptCellContentPriority\", function () { return $a6ab01cd18fda354$export$68bffb1b2e2dd0aa; });\n$parcel$export(module.exports, \"SheetInterceptorService\", function () { return $a6ab01cd18fda354$export$80833ae4acf64dfd; });\n$parcel$export(module.exports, \"SetRangeValuesUndoMutationFactory\", function () { return $a6ab01cd18fda354$export$8414704275a3cbbf; });\n$parcel$export(module.exports, \"SetRangeValuesMutation\", function () { return $a6ab01cd18fda354$export$ce2b970bc67fd9bc; });\n$parcel$export(module.exports, \"generateNullCellValue\", function () { return $a6ab01cd18fda354$export$560d2d45d438b4e4; });\n$parcel$export(module.exports, \"ClearSelectionAllCommand\", function () { return $a6ab01cd18fda354$export$2f4ff18eff30d407; });\n$parcel$export(module.exports, \"ClearSelectionContentCommand\", function () { return $a6ab01cd18fda354$export$ab26cf116e0b60e6; });\n$parcel$export(module.exports, \"ClearSelectionFormatCommand\", function () { return $a6ab01cd18fda354$export$863f42bb4d58d9e4; });\n$parcel$export(module.exports, \"InsertSheetMutation\", function () { return $a6ab01cd18fda354$export$759ebfd45fe6d2e7; });\n$parcel$export(module.exports, \"getSheetCommandTarget\", function () { return $a6ab01cd18fda354$export$7172ac1f96d9c125; });\n$parcel$export(module.exports, \"RemoveSheetMutation\", function () { return $a6ab01cd18fda354$export$f14a5300764a7508; });\n$parcel$export(module.exports, \"CopySheetCommand\", function () { return $a6ab01cd18fda354$export$8c73367803b79193; });\n$parcel$export(module.exports, \"MoveRangeMutation\", function () { return $a6ab01cd18fda354$export$5535d7f795e5bded; });\n$parcel$export(module.exports, \"IRefSelectionsService\", function () { return $a6ab01cd18fda354$export$121f25ca6629b386; });\n$parcel$export(module.exports, \"RefSelectionsService\", function () { return $a6ab01cd18fda354$export$f5ec0ae35ff550d6; });\n$parcel$export(module.exports, \"getSelectionsService\", function () { return $a6ab01cd18fda354$export$15b225d040510155; });\n$parcel$export(module.exports, \"SetSelectionsOperation\", function () { return $a6ab01cd18fda354$export$9fe459fc1a6ecb2d; });\n$parcel$export(module.exports, \"alignToMergedCellsBorders\", function () { return $a6ab01cd18fda354$export$f2ae5969eaf8e0d4; });\n$parcel$export(module.exports, \"getCellAtRowCol\", function () { return $a6ab01cd18fda354$export$99c774ff550a0c6f; });\n$parcel$export(module.exports, \"setEndForRange\", function () { return $a6ab01cd18fda354$export$e15f5fa13f6603f9; });\n$parcel$export(module.exports, \"getPrimaryForRange\", function () { return $a6ab01cd18fda354$export$d262ae8015daf961; });\n$parcel$export(module.exports, \"isSingleCellSelection\", function () { return $a6ab01cd18fda354$export$d6cc45b9b04ea7df; });\n$parcel$export(module.exports, \"copyRangeStyles\", function () { return $a6ab01cd18fda354$export$e08f9f7e26e9aff5; });\n$parcel$export(module.exports, \"MoveRangeCommand\", function () { return $a6ab01cd18fda354$export$6d3ee8ffacf894af; });\n$parcel$export(module.exports, \"UnitObject\", function () { return $a6ab01cd18fda354$export$31f289fd4edee7cf; });\n$parcel$export(module.exports, \"WorksheetCopyPermission\", function () { return $a6ab01cd18fda354$export$dcca5189dd6ecd0d; });\n$parcel$export(module.exports, \"WorksheetSetCellStylePermission\", function () { return $a6ab01cd18fda354$export$697f71110b473051; });\n$parcel$export(module.exports, \"WorksheetSetCellValuePermission\", function () { return $a6ab01cd18fda354$export$62237981a6ddf9bf; });\n$parcel$export(module.exports, \"WorksheetViewPermission\", function () { return $a6ab01cd18fda354$export$4c018ba9f520a234; });\n$parcel$export(module.exports, \"WorksheetSetRowStylePermission\", function () { return $a6ab01cd18fda354$export$bfa2be4307a4639; });\n$parcel$export(module.exports, \"WorksheetSetColumnStylePermission\", function () { return $a6ab01cd18fda354$export$b0be44a318a01991; });\n$parcel$export(module.exports, \"WorksheetInsertRowPermission\", function () { return $a6ab01cd18fda354$export$eede24696cb63f83; });\n$parcel$export(module.exports, \"WorksheetInsertColumnPermission\", function () { return $a6ab01cd18fda354$export$2fc68d49285b9fd8; });\n$parcel$export(module.exports, \"WorksheetInsertHyperlinkPermission\", function () { return $a6ab01cd18fda354$export$fbfad14902d4c5bc; });\n$parcel$export(module.exports, \"WorksheetDeleteRowPermission\", function () { return $a6ab01cd18fda354$export$2994e7444a54b0e0; });\n$parcel$export(module.exports, \"WorksheetDeleteColumnPermission\", function () { return $a6ab01cd18fda354$export$85c23d61fb055e0b; });\n$parcel$export(module.exports, \"WorksheetFilterPermission\", function () { return $a6ab01cd18fda354$export$a0d4889d2ebb3dda; });\n$parcel$export(module.exports, \"WorksheetEditPermission\", function () { return $a6ab01cd18fda354$export$d9c4797b23318374; });\n$parcel$export(module.exports, \"WorkbookCommentPermission\", function () { return $a6ab01cd18fda354$export$e954801e3efd9751; });\n$parcel$export(module.exports, \"WorkbookEditablePermission\", function () { return $a6ab01cd18fda354$export$f9b2f3564b55cfea; });\n$parcel$export(module.exports, \"WorkbookMoveSheetPermission\", function () { return $a6ab01cd18fda354$export$1d2b8eef79a2c4b3; });\n$parcel$export(module.exports, \"WorkbookDeleteSheetPermission\", function () { return $a6ab01cd18fda354$export$fc69a7d19430eba1; });\n$parcel$export(module.exports, \"WorkbookHideSheetPermission\", function () { return $a6ab01cd18fda354$export$6598f0c4b2045039; });\n$parcel$export(module.exports, \"WorkbookRenameSheetPermission\", function () { return $a6ab01cd18fda354$export$59ee3b0f12f751e0; });\n$parcel$export(module.exports, \"WorkbookCreateSheetPermission\", function () { return $a6ab01cd18fda354$export$d9e9375ef577608a; });\n$parcel$export(module.exports, \"WorkbookViewPermission\", function () { return $a6ab01cd18fda354$export$e4dfc7ee612de8ae; });\n$parcel$export(module.exports, \"WorkbookCopyPermission\", function () { return $a6ab01cd18fda354$export$5f9719a2213742db; });\n$parcel$export(module.exports, \"WorkbookManageCollaboratorPermission\", function () { return $a6ab01cd18fda354$export$633ee836a7adfb56; });\n$parcel$export(module.exports, \"RangeProtectionPermissionEditPoint\", function () { return $a6ab01cd18fda354$export$71b84bcd22831dcf; });\n$parcel$export(module.exports, \"RangeProtectionPermissionViewPoint\", function () { return $a6ab01cd18fda354$export$3e56ea536ebb655d; });\n$parcel$export(module.exports, \"SetRangeValuesCommand\", function () { return $a6ab01cd18fda354$export$695df81ccb7da4eb; });\n$parcel$export(module.exports, \"DeleteRangeMoveLeftCommand\", function () { return $a6ab01cd18fda354$export$40e354a17cc79f7f; });\n$parcel$export(module.exports, \"DeleteRangeMoveUpCommand\", function () { return $a6ab01cd18fda354$export$d3997a5569b0810f; });\n$parcel$export(module.exports, \"InsertRowMutation\", function () { return $a6ab01cd18fda354$export$823dff2590c7c5ff; });\n$parcel$export(module.exports, \"InsertColMutation\", function () { return $a6ab01cd18fda354$export$2e1cbe0a40f11cd4; });\n$parcel$export(module.exports, \"RemoveRowMutation\", function () { return $a6ab01cd18fda354$export$9642f6b705de590b; });\n$parcel$export(module.exports, \"RemoveColMutation\", function () { return $a6ab01cd18fda354$export$1b784c21f081e76a; });\n$parcel$export(module.exports, \"InsertRangeMoveDownCommand\", function () { return $a6ab01cd18fda354$export$41564dd5272a2ef3; });\n$parcel$export(module.exports, \"InsertRangeMoveRightCommand\", function () { return $a6ab01cd18fda354$export$732636db5bcc0e5f; });\n$parcel$export(module.exports, \"InsertRowCommand\", function () { return $a6ab01cd18fda354$export$59824d5e29c20d3b; });\n$parcel$export(module.exports, \"InsertRowBeforeCommand\", function () { return $a6ab01cd18fda354$export$3681714e8ba8df82; });\n$parcel$export(module.exports, \"InsertRowAfterCommand\", function () { return $a6ab01cd18fda354$export$9faff810cbea30da; });\n$parcel$export(module.exports, \"InsertColCommand\", function () { return $a6ab01cd18fda354$export$e8353cee7bda512a; });\n$parcel$export(module.exports, \"InsertColBeforeCommand\", function () { return $a6ab01cd18fda354$export$7ddbe0547809d4f2; });\n$parcel$export(module.exports, \"InsertColAfterCommand\", function () { return $a6ab01cd18fda354$export$3c7a525148882f97; });\n$parcel$export(module.exports, \"InsertSheetCommand\", function () { return $a6ab01cd18fda354$export$c4bd043fecdc01b8; });\n$parcel$export(module.exports, \"MoveRowsMutation\", function () { return $a6ab01cd18fda354$export$63ddef9080d565c8; });\n$parcel$export(module.exports, \"MoveColsMutation\", function () { return $a6ab01cd18fda354$export$b98040a300ab6f6e; });\n$parcel$export(module.exports, \"MoveRowsCommand\", function () { return $a6ab01cd18fda354$export$a28b199505e3f35b; });\n$parcel$export(module.exports, \"MoveColsCommand\", function () { return $a6ab01cd18fda354$export$5effa9283a7d9d05; });\n$parcel$export(module.exports, \"RemoveRowCommand\", function () { return $a6ab01cd18fda354$export$d6b85d28467bc6ff; });\n$parcel$export(module.exports, \"RemoveColCommand\", function () { return $a6ab01cd18fda354$export$177b3716bfce6b2d; });\n$parcel$export(module.exports, \"RemoveSheetCommand\", function () { return $a6ab01cd18fda354$export$6fc693400eb160ca; });\n$parcel$export(module.exports, \"AddMergeUndoMutationFactory\", function () { return $a6ab01cd18fda354$export$28cf35492035648a; });\n$parcel$export(module.exports, \"AddWorksheetMergeMutation\", function () { return $a6ab01cd18fda354$export$2cd10fd9284040fa; });\n$parcel$export(module.exports, \"RemoveMergeUndoMutationFactory\", function () { return $a6ab01cd18fda354$export$328feb80d2f892b2; });\n$parcel$export(module.exports, \"RemoveWorksheetMergeMutation\", function () { return $a6ab01cd18fda354$export$9bbe8f9ee2bc5646; });\n$parcel$export(module.exports, \"RemoveWorksheetMergeCommand\", function () { return $a6ab01cd18fda354$export$d0aeb9f05b4c1c1b; });\n$parcel$export(module.exports, \"BorderStyleManagerService\", function () { return $a6ab01cd18fda354$export$3717d01cc8329f85; });\n$parcel$export(module.exports, \"SetBorderBasicCommand\", function () { return $a6ab01cd18fda354$export$48d954126b6d7141; });\n$parcel$export(module.exports, \"SetBorderCommand\", function () { return $a6ab01cd18fda354$export$87ae154ca64a9764; });\n$parcel$export(module.exports, \"SetColHiddenMutation\", function () { return $a6ab01cd18fda354$export$7257073ee36b52d2; });\n$parcel$export(module.exports, \"SetColVisibleMutation\", function () { return $a6ab01cd18fda354$export$e2c06a117868669c; });\n$parcel$export(module.exports, \"SetSpecificColsVisibleCommand\", function () { return $a6ab01cd18fda354$export$c9b3ccfe26533e7d; });\n$parcel$export(module.exports, \"SetSelectedColsVisibleCommand\", function () { return $a6ab01cd18fda354$export$588522b1d30ed11e; });\n$parcel$export(module.exports, \"SetColHiddenCommand\", function () { return $a6ab01cd18fda354$export$8c690f2688578a18; });\n$parcel$export(module.exports, \"SetFrozenMutationFactory\", function () { return $a6ab01cd18fda354$export$5322fc24b9ed099c; });\n$parcel$export(module.exports, \"SetFrozenMutation\", function () { return $a6ab01cd18fda354$export$53938c3f10334ebe; });\n$parcel$export(module.exports, \"SetFrozenCommand\", function () { return $a6ab01cd18fda354$export$5d48dadd73d65542; });\n$parcel$export(module.exports, \"SetRowVisibleMutation\", function () { return $a6ab01cd18fda354$export$cd9a5b2737870ea6; });\n$parcel$export(module.exports, \"SetRowHiddenMutation\", function () { return $a6ab01cd18fda354$export$3c29e82821fa0859; });\n$parcel$export(module.exports, \"SetSpecificRowsVisibleCommand\", function () { return $a6ab01cd18fda354$export$cd6eb72fd660fbe5; });\n$parcel$export(module.exports, \"SetSelectedRowsVisibleCommand\", function () { return $a6ab01cd18fda354$export$f9d8ad03a7b6f57d; });\n$parcel$export(module.exports, \"SetRowHiddenCommand\", function () { return $a6ab01cd18fda354$export$43c65aeb5025fc3d; });\n$parcel$export(module.exports, \"SetStyleCommand\", function () { return $a6ab01cd18fda354$export$9cffecb7e319b589; });\n$parcel$export(module.exports, \"SetBoldCommand\", function () { return $a6ab01cd18fda354$export$fcd4779b7d44992e; });\n$parcel$export(module.exports, \"SetItalicCommand\", function () { return $a6ab01cd18fda354$export$62cc81ebc1adf0c0; });\n$parcel$export(module.exports, \"SetUnderlineCommand\", function () { return $a6ab01cd18fda354$export$d73220315f6006b0; });\n$parcel$export(module.exports, \"SetStrikeThroughCommand\", function () { return $a6ab01cd18fda354$export$b47ba15c2325965; });\n$parcel$export(module.exports, \"SetFontFamilyCommand\", function () { return $a6ab01cd18fda354$export$ccba6435a44dd342; });\n$parcel$export(module.exports, \"SetFontSizeCommand\", function () { return $a6ab01cd18fda354$export$6c990a7fddcbc14; });\n$parcel$export(module.exports, \"SetTextColorCommand\", function () { return $a6ab01cd18fda354$export$c56b7ba3eac73a9a; });\n$parcel$export(module.exports, \"ResetTextColorCommand\", function () { return $a6ab01cd18fda354$export$505a7a28d0b2a05f; });\n$parcel$export(module.exports, \"SetBackgroundColorCommand\", function () { return $a6ab01cd18fda354$export$b9eaa6f3442e5c9; });\n$parcel$export(module.exports, \"ResetBackgroundColorCommand\", function () { return $a6ab01cd18fda354$export$ac505b0e9caa44ae; });\n$parcel$export(module.exports, \"SetVerticalTextAlignCommand\", function () { return $a6ab01cd18fda354$export$be9c36d6210442d6; });\n$parcel$export(module.exports, \"SetHorizontalTextAlignCommand\", function () { return $a6ab01cd18fda354$export$d38e4b7aa167ef86; });\n$parcel$export(module.exports, \"SetTextWrapCommand\", function () { return $a6ab01cd18fda354$export$e7dec73a8fd68842; });\n$parcel$export(module.exports, \"SetTextRotationCommand\", function () { return $a6ab01cd18fda354$export$4da426d8a922db92; });\n$parcel$export(module.exports, \"SetTabColorMutation\", function () { return $a6ab01cd18fda354$export$6960e50bd58ae80b; });\n$parcel$export(module.exports, \"SetTabColorCommand\", function () { return $a6ab01cd18fda354$export$f72721d432fc9567; });\n$parcel$export(module.exports, \"SetWorksheetActiveOperation\", function () { return $a6ab01cd18fda354$export$501905adef850859; });\n$parcel$export(module.exports, \"SetWorksheetActivateCommand\", function () { return $a6ab01cd18fda354$export$142e5a7a79066467; });\n$parcel$export(module.exports, \"SetWorksheetColWidthMutation\", function () { return $a6ab01cd18fda354$export$7067bfb95d30a5c3; });\n$parcel$export(module.exports, \"DeltaColumnWidthCommand\", function () { return $a6ab01cd18fda354$export$1cd66c761d533521; });\n$parcel$export(module.exports, \"SetColWidthCommand\", function () { return $a6ab01cd18fda354$export$9b7975fb84f597d5; });\n$parcel$export(module.exports, \"SetWorksheetHideMutation\", function () { return $a6ab01cd18fda354$export$b76d76b975841359; });\n$parcel$export(module.exports, \"SetWorksheetHideCommand\", function () { return $a6ab01cd18fda354$export$8d71c14db4ec832e; });\n$parcel$export(module.exports, \"SetWorksheetNameMutation\", function () { return $a6ab01cd18fda354$export$762d92ef19bd482a; });\n$parcel$export(module.exports, \"SetWorksheetNameCommand\", function () { return $a6ab01cd18fda354$export$e4b39c021c550afa; });\n$parcel$export(module.exports, \"SetWorksheetOrderMutation\", function () { return $a6ab01cd18fda354$export$a7f050925a81e492; });\n$parcel$export(module.exports, \"SetWorksheetOrderCommand\", function () { return $a6ab01cd18fda354$export$cd24df42925f927; });\n$parcel$export(module.exports, \"SetWorksheetRowAutoHeightMutationFactory\", function () { return $a6ab01cd18fda354$export$32c91805fe2ce11a; });\n$parcel$export(module.exports, \"SetWorksheetRowHeightMutation\", function () { return $a6ab01cd18fda354$export$d7b494254bbf476f; });\n$parcel$export(module.exports, \"SetWorksheetRowIsAutoHeightMutation\", function () { return $a6ab01cd18fda354$export$784e15c60e3adf6c; });\n$parcel$export(module.exports, \"SetWorksheetRowAutoHeightMutation\", function () { return $a6ab01cd18fda354$export$92a6672d4df31cfb; });\n$parcel$export(module.exports, \"DeltaRowHeightCommand\", function () { return $a6ab01cd18fda354$export$697e2e139da9fb66; });\n$parcel$export(module.exports, \"SetRowHeightCommand\", function () { return $a6ab01cd18fda354$export$64cc91dade2db478; });\n$parcel$export(module.exports, \"SetWorksheetRowIsAutoHeightCommand\", function () { return $a6ab01cd18fda354$export$dabde38fe174e661; });\n$parcel$export(module.exports, \"SetWorksheetShowCommand\", function () { return $a6ab01cd18fda354$export$5ff56b48d076a99; });\n$parcel$export(module.exports, \"rangeMerge\", function () { return $a6ab01cd18fda354$export$63533e2fd9408d74; });\n$parcel$export(module.exports, \"INumfmtService\", function () { return $a6ab01cd18fda354$export$6b26f3da37fc66b; });\n$parcel$export(module.exports, \"factorySetNumfmtUndoMutation\", function () { return $a6ab01cd18fda354$export$c3197ad17fb285b8; });\n$parcel$export(module.exports, \"transformCellsToRange\", function () { return $a6ab01cd18fda354$export$10465aad21b068c6; });\n$parcel$export(module.exports, \"SetNumfmtMutation\", function () { return $a6ab01cd18fda354$export$2c6679f6ed39715b; });\n$parcel$export(module.exports, \"RemoveNumfmtMutation\", function () { return $a6ab01cd18fda354$export$c64e537472e00620; });\n$parcel$export(module.exports, \"factoryRemoveNumfmtUndoMutation\", function () { return $a6ab01cd18fda354$export$ad722be3eb6dacf; });\n$parcel$export(module.exports, \"InsertDefinedNameCommand\", function () { return $a6ab01cd18fda354$export$61dcf9a1529f32fa; });\n$parcel$export(module.exports, \"RemoveDefinedNameCommand\", function () { return $a6ab01cd18fda354$export$e90d872a06962b4e; });\n$parcel$export(module.exports, \"SetDefinedNameCommand\", function () { return $a6ab01cd18fda354$export$6ed48c4ca74c384d; });\n$parcel$export(module.exports, \"ScrollToCellOperation\", function () { return $a6ab01cd18fda354$export$ee68545baad45289; });\n$parcel$export(module.exports, \"WorksheetProtectionRuleModel\", function () { return $a6ab01cd18fda354$export$e82d59a730eac89c; });\n$parcel$export(module.exports, \"AddWorksheetProtectionMutation\", function () { return $a6ab01cd18fda354$export$4cd4e23c2b7dde1d; });\n$parcel$export(module.exports, \"SetWorksheetProtectionMutation\", function () { return $a6ab01cd18fda354$export$629d2153b207af21; });\n$parcel$export(module.exports, \"DeleteWorksheetProtectionMutation\", function () { return $a6ab01cd18fda354$export$afd9d63d1a03ab75; });\n$parcel$export(module.exports, \"RangeProtectionRuleModel\", function () { return $a6ab01cd18fda354$export$9372059621b24e72; });\n$parcel$export(module.exports, \"getAllWorksheetPermissionPoint\", function () { return $a6ab01cd18fda354$export$a1277938b074bee3; });\n$parcel$export(module.exports, \"getAllWorksheetPermissionPointByPointPanel\", function () { return $a6ab01cd18fda354$export$40327ff0e60d0a4a; });\n$parcel$export(module.exports, \"defaultWorksheetPermissionPoint\", function () { return $a6ab01cd18fda354$export$b32db826e0669cf8; });\n$parcel$export(module.exports, \"WorksheetProtectionPointModel\", function () { return $a6ab01cd18fda354$export$5b8cbe97d6c75b92; });\n$parcel$export(module.exports, \"SetWorksheetPermissionPointsMutation\", function () { return $a6ab01cd18fda354$export$dfaa28bb509787c1; });\n$parcel$export(module.exports, \"SetWorksheetPermissionPointsCommand\", function () { return $a6ab01cd18fda354$export$a2a2a04437dd1e57; });\n$parcel$export(module.exports, \"AddRangeProtectionMutation\", function () { return $a6ab01cd18fda354$export$f2ad0bf0273e0229; });\n$parcel$export(module.exports, \"DeleteRangeProtectionMutation\", function () { return $a6ab01cd18fda354$export$b457d93c336efe6a; });\n$parcel$export(module.exports, \"AddRangeProtectionCommand\", function () { return $a6ab01cd18fda354$export$bb4004004a1431ff; });\n$parcel$export(module.exports, \"DeleteRangeProtectionCommand\", function () { return $a6ab01cd18fda354$export$2edc47174b2de509; });\n$parcel$export(module.exports, \"SetRangeProtectionMutation\", function () { return $a6ab01cd18fda354$export$154632b354a236eb; });\n$parcel$export(module.exports, \"ReorderRangeMutation\", function () { return $a6ab01cd18fda354$export$e583b3721377d199; });\n$parcel$export(module.exports, \"MAX_CELL_PER_SHEET_KEY\", function () { return $a6ab01cd18fda354$export$65ebcfb8bac77328; });\n$parcel$export(module.exports, \"EffectRefRangId\", function () { return $a6ab01cd18fda354$export$19a34a018dc3d795; });\n$parcel$export(module.exports, \"handleMoveRows\", function () { return $a6ab01cd18fda354$export$dfcf24e5214872cf; });\n$parcel$export(module.exports, \"handleMoveCols\", function () { return $a6ab01cd18fda354$export$c4fbbd897b45946d; });\n$parcel$export(module.exports, \"handleMoveRange\", function () { return $a6ab01cd18fda354$export$ecdf3f3bda4dc820; });\n$parcel$export(module.exports, \"handleIRemoveCol\", function () { return $a6ab01cd18fda354$export$fb42dcd01ff39140; });\n$parcel$export(module.exports, \"handleIRemoveRow\", function () { return $a6ab01cd18fda354$export$18cf6b538c63f0ed; });\n$parcel$export(module.exports, \"handleInsertRow\", function () { return $a6ab01cd18fda354$export$601c242ecf0fd772; });\n$parcel$export(module.exports, \"handleInsertCol\", function () { return $a6ab01cd18fda354$export$34feed632626a125; });\n$parcel$export(module.exports, \"handleInsertRangeMoveDown\", function () { return $a6ab01cd18fda354$export$a42813264eacd066; });\n$parcel$export(module.exports, \"handleInsertRangeMoveRight\", function () { return $a6ab01cd18fda354$export$f0b5efa122f7b5ec; });\n$parcel$export(module.exports, \"handleDeleteRangeMoveLeft\", function () { return $a6ab01cd18fda354$export$1611d9e0bc977436; });\n$parcel$export(module.exports, \"handleDeleteRangeMoveUp\", function () { return $a6ab01cd18fda354$export$fce8207daaebcfe4; });\n$parcel$export(module.exports, \"runRefRangeMutations\", function () { return $a6ab01cd18fda354$export$6e576466ae7d2afb; });\n$parcel$export(module.exports, \"handleDefaultRangeChangeWithEffectRefCommands\", function () { return $a6ab01cd18fda354$export$9580c9267dc89e66; });\n$parcel$export(module.exports, \"handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests\", function () { return $a6ab01cd18fda354$export$6d802dc783a8fe04; });\n$parcel$export(module.exports, \"handleCommonDefaultRangeChangeWithEffectRefCommands\", function () { return $a6ab01cd18fda354$export$3d1dddb133eee9fb; });\n$parcel$export(module.exports, \"handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests\", function () { return $a6ab01cd18fda354$export$e97bd40cc606f733; });\n$parcel$export(module.exports, \"RefRangeService\", function () { return $a6ab01cd18fda354$export$9c9d0dbacf6b589e; });\n$parcel$export(module.exports, \"getAddMergeMutationRangeByType\", function () { return $a6ab01cd18fda354$export$7dd3f8a552d30610; });\n$parcel$export(module.exports, \"MERGE_CELL_INTERCEPTOR_CHECK\", function () { return $a6ab01cd18fda354$export$905d574af45cae88; });\n$parcel$export(module.exports, \"MergeCellController\", function () { return $a6ab01cd18fda354$export$bef537c190ad4a94; });\n$parcel$export(module.exports, \"getAllWorkbookPermissionPoint\", function () { return $a6ab01cd18fda354$export$634975f236ef0829; });\n$parcel$export(module.exports, \"defaultWorkbookPermissionPoints\", function () { return $a6ab01cd18fda354$export$1d76bc5eb946e943; });\n$parcel$export(module.exports, \"getAllRangePermissionPoint\", function () { return $a6ab01cd18fda354$export$d78cad71acf986b9; });\n$parcel$export(module.exports, \"RangeProtectionRenderModel\", function () { return $a6ab01cd18fda354$export$ff6acb0e8081cbe3; });\n$parcel$export(module.exports, \"IExclusiveRangeService\", function () { return $a6ab01cd18fda354$export$6898a18180f3219; });\n$parcel$export(module.exports, \"UniverSheetsPlugin\", function () { return $a6ab01cd18fda354$export$e6fdaa2df602be0f; });\n$parcel$export(module.exports, \"COMMAND_LISTENER_SKELETON_CHANGE\", function () { return $a6ab01cd18fda354$export$9b1e05f88a2cd27b; });\n$parcel$export(module.exports, \"COMMAND_LISTENER_VALUE_CHANGE\", function () { return $a6ab01cd18fda354$export$30f0a6c2c92d64f5; });\n$parcel$export(module.exports, \"SELECTION_CONTROL_BORDER_BUFFER_WIDTH\", function () { return $a6ab01cd18fda354$export$b7a28ca33510185e; });\n$parcel$export(module.exports, \"SELECTION_CONTROL_BORDER_BUFFER_COLOR\", function () { return $a6ab01cd18fda354$export$1a55b7f08fc0eb8c; });\n$parcel$export(module.exports, \"getNormalSelectionStyle\", function () { return $a6ab01cd18fda354$export$f9f44c52c4a3c2aa; });\n$parcel$export(module.exports, \"convertSelectionDataToRange\", function () { return $a6ab01cd18fda354$export$fa3823819a78529f; });\n$parcel$export(module.exports, \"transformCellDataToSelectionData\", function () { return $a6ab01cd18fda354$export$6e0275a6f772a899; });\n$parcel$export(module.exports, \"AddMergeRedoSelectionsOperationFactory\", function () { return $a6ab01cd18fda354$export$3df564390c983961; });\n$parcel$export(module.exports, \"AddMergeUndoSelectionsOperationFactory\", function () { return $a6ab01cd18fda354$export$524a51095d4bc057; });\n$parcel$export(module.exports, \"expandToContinuousRange\", function () { return $a6ab01cd18fda354$export$195ef1b6b0ee9b53; });\n$parcel$export(module.exports, \"checkRangesEditablePermission\", function () { return $a6ab01cd18fda354$export$8513f6f00a6f17; });\n$parcel$export(module.exports, \"AddWorksheetMergeCommand\", function () { return $a6ab01cd18fda354$export$6308c73384741c53; });\n$parcel$export(module.exports, \"AddWorksheetMergeAllCommand\", function () { return $a6ab01cd18fda354$export$8c43ba6ae41f68ca; });\n$parcel$export(module.exports, \"AddWorksheetMergeVerticalCommand\", function () { return $a6ab01cd18fda354$export$43ee41af5024abda; });\n$parcel$export(module.exports, \"AddWorksheetMergeHorizontalCommand\", function () { return $a6ab01cd18fda354$export$d964723ec7a30fd7; });\n$parcel$export(module.exports, \"addMergeCellsUtil\", function () { return $a6ab01cd18fda354$export$b5b2c55d7bbb1a20; });\n\nvar $7yNYd = parcelRequire(\"7yNYd\");\n\nvar $86b1c = parcelRequire(\"86b1c\");\n\nvar $k2g5B = parcelRequire(\"k2g5B\");\n\nvar $5LPkb = parcelRequire(\"5LPkb\");\nvar $hciHF = parcelRequire(\"hciHF\");\nvar $i54iF = parcelRequire(\"i54iF\");\nvar $3yupB = parcelRequire(\"3yupB\");\nvar $c3hg1 = parcelRequire(\"c3hg1\");\nvar $1mjSk = parcelRequire(\"1mjSk\");\nvar $23cfA = parcelRequire(\"23cfA\");\nvar $2jrJe = parcelRequire(\"2jrJe\");\n\nvar $2BOVU = parcelRequire(\"2BOVU\");\n\nvar $lMvMU = parcelRequire(\"lMvMU\");\nvar $hciHF = parcelRequire(\"hciHF\");\nvar $2jrJe = parcelRequire(\"2jrJe\");\n\nvar $a6ab01cd18fda354$var$__defProp = Object.defineProperty;\nvar $a6ab01cd18fda354$var$__defNormalProp = (obj, key, value)=>key in obj ? $a6ab01cd18fda354$var$__defProp(obj, key, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: value\n    }) : obj[key] = value;\nvar $a6ab01cd18fda354$var$__name = (target, value)=>$a6ab01cd18fda354$var$__defProp(target, \"name\", {\n        value: value,\n        configurable: !0\n    });\nvar $a6ab01cd18fda354$var$__publicField = (obj, key, value)=>$a6ab01cd18fda354$var$__defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nvar $a6ab01cd18fda354$var$__defProp$i = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$i = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$i = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$i(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$i(target, key, result), result;\n}, \"__decorateClass$i\"), $a6ab01cd18fda354$var$__decorateParam$f = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$f\"), $a6ab01cd18fda354$export$92a0623308d4909f = /* @__PURE__ */ ((SelectionMoveType2)=>(SelectionMoveType2[SelectionMoveType2.MOVE_START = 0] = \"MOVE_START\", SelectionMoveType2[SelectionMoveType2.MOVING = 1] = \"MOVING\", SelectionMoveType2[SelectionMoveType2.MOVE_END = 2] = \"MOVE_END\", SelectionMoveType2))($a6ab01cd18fda354$export$92a0623308d4909f || {}), $a6ab01cd18fda354$var$_a;\nlet $a6ab01cd18fda354$export$c93d00f3ceba73b5 = ($a6ab01cd18fda354$var$_a = class extends (0, $7yNYd.RxDisposable) {\n    constructor(_instanceSrv){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoveStart$\");\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoving$\");\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoveEnd$\");\n        $a6ab01cd18fda354$var$__publicField(this, \"_workbookSelections\", /* @__PURE__ */ new Map());\n        this._instanceSrv = _instanceSrv, this._init();\n    }\n    get _currentSelectionPos() {\n        const workbook = this._instanceSrv.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return null;\n        const worksheet = workbook.getActiveSheet();\n        return {\n            unitId: workbook.getUnitId(),\n            sheetId: worksheet.getSheetId()\n        };\n    }\n    get currentSelectionParam() {\n        return this._currentSelectionPos;\n    }\n    _init() {\n        const c$ = this._instanceSrv.getCurrentTypeOfUnit$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).pipe((0, $c3hg1.shareReplay)(1), (0, $2jrJe.takeUntil)(this.dispose$));\n        this.selectionMoveStart$ = c$.pipe((0, $23cfA.switchMap)((workbook)=>workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoveStart$ : (0, $3yupB.of)())), this.selectionMoving$ = c$.pipe((0, $23cfA.switchMap)((workbook)=>workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoving$ : (0, $3yupB.of)())), this.selectionMoveEnd$ = c$.pipe((0, $23cfA.switchMap)((workbook)=>workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoveEnd$ : (0, $3yupB.of)([]))), this._instanceSrv.getTypeOfUnitDisposed$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).pipe((0, $2jrJe.takeUntil)(this.dispose$)).subscribe((workbook)=>{\n            this._removeWorkbookSelection(workbook.getUnitId());\n        });\n    }\n    /**\n   * Clear all selections in all workbooks.\n   * invoked by prompt.controller\n   */ clear() {\n        this._workbookSelections.forEach((wbSelection)=>wbSelection.clear());\n    }\n    getCurrentSelections() {\n        return this._getCurrentSelections();\n    }\n    getCurrentLastSelection() {\n        const selectionData = this._getCurrentSelections();\n        return selectionData == null ? void 0 : selectionData[selectionData.length - 1];\n    }\n    addSelections(unitIdOrSelections, worksheetId, selectionDatas) {\n        if (typeof unitIdOrSelections == \"string\") {\n            this._ensureWorkbookSelection(unitIdOrSelections).addSelections(worksheetId, selectionDatas);\n            return;\n        }\n        const current = this._currentSelectionPos;\n        if (!current) throw new Error(\"[SheetsSelectionsService]: cannot find current selection position!\");\n        const { unitId: unitId, sheetId: sheetId } = current;\n        this._ensureWorkbookSelection(unitId).addSelections(sheetId, unitIdOrSelections);\n    }\n    /**\n   * Set selection data to WorkbookSelections.\n   * If type is not specified, this method would clear all existing selections.\n   * @param unitIdOrSelections\n   * @param worksheetIdOrType\n   * @param selectionDatas\n   * @param type\n   */ setSelections(unitIdOrSelections, worksheetIdOrType, selectionDatas, type) {\n        if (typeof unitIdOrSelections == \"string\") {\n            this._ensureWorkbookSelection(unitIdOrSelections).setSelections(worksheetIdOrType, selectionDatas, type != null ? type : 2);\n            return;\n        }\n        const current = this._currentSelectionPos;\n        if (!current) throw new Error(\"[SheetsSelectionsService]: cannot find current selection position!\");\n        const { unitId: unitId, sheetId: sheetId } = current;\n        this._ensureWorkbookSelection(unitId).setSelections(sheetId, unitIdOrSelections != null ? unitIdOrSelections : selectionDatas, worksheetIdOrType != null ? worksheetIdOrType : 2);\n    }\n    clearCurrentSelections() {\n        this._getCurrentSelections().splice(0);\n    }\n    /**\n   * Determine whether multiple current selections overlap\n   *\n   * @deprecated this should be extracted to an pure function\n   */ isOverlapping() {\n        const selectionDataList = this.getCurrentSelections();\n        return selectionDataList == null ? !1 : selectionDataList.some(({ range: range }, index)=>selectionDataList.some(({ range: range2 }, index2)=>index === index2 ? !1 : range.startRow <= range2.endRow && range.endRow >= range2.startRow && range.startColumn <= range2.endColumn && range.endColumn >= range2.startColumn));\n    }\n    _getCurrentSelections() {\n        const current = this._currentSelectionPos;\n        if (!current) return [];\n        const { unitId: unitId, sheetId: sheetId } = current;\n        return this._ensureWorkbookSelection(unitId).getSelectionOfWorksheet(sheetId);\n    }\n    getWorkbookSelections(unitId) {\n        return this._ensureWorkbookSelection(unitId);\n    }\n    _ensureWorkbookSelection(unitId) {\n        let wbSelection = this._workbookSelections.get(unitId);\n        if (!wbSelection) {\n            const workbook = this._instanceSrv.getUnit(unitId);\n            if (!workbook) throw new Error(`[SheetsSelectionsService]: cannot resolve unit with id \"${unitId}\"!`);\n            wbSelection = new $a6ab01cd18fda354$export$fa5546bc990001f7(workbook), this._workbookSelections.set(unitId, wbSelection);\n        }\n        return wbSelection;\n    }\n    _removeWorkbookSelection(unitId) {\n        this._workbookSelections.delete(unitId);\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a, \"SheetsSelectionsService\"), $a6ab01cd18fda354$var$_a);\n$a6ab01cd18fda354$export$c93d00f3ceba73b5 = $a6ab01cd18fda354$var$__decorateClass$i([\n    $a6ab01cd18fda354$var$__decorateParam$f(0, (0, $7yNYd.IUniverInstanceService))\n], $a6ab01cd18fda354$export$c93d00f3ceba73b5);\nconst $a6ab01cd18fda354$var$_WorkbookSelections = class _WorkbookSelections extends (0, $7yNYd.Disposable) {\n    constructor(_workbook){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"_selectionMoveStart$\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoveStart$\", this._selectionMoveStart$.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_selectionMoving$\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoving$\", this._selectionMoving$.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_selectionMoveEnd$\", new (0, $5LPkb.BehaviorSubject)([]));\n        $a6ab01cd18fda354$var$__publicField(this, \"selectionMoveEnd$\", this._selectionMoveEnd$.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_beforeSelectionMoveEnd$\", new (0, $5LPkb.BehaviorSubject)([]));\n        $a6ab01cd18fda354$var$__publicField(this, \"beforeSelectionMoveEnd$\", this._beforeSelectionMoveEnd$.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_worksheetSelections\", /* @__PURE__ */ new Map());\n        this._workbook = _workbook;\n    }\n    dispose() {\n        super.dispose(), this._beforeSelectionMoveEnd$.complete(), this._selectionMoveEnd$.complete(), this._selectionMoving$.complete(), this._selectionMoveStart$.complete();\n    }\n    /** Clear all selections in this workbook. */ clear() {\n        this._worksheetSelections.clear(), this._emitOnEnd([]);\n    }\n    addSelections(sheetId, selectionDatas) {\n        const selections = this._ensureSheetSelection(sheetId);\n        selections.push(...selectionDatas), this._emitOnEnd(selections);\n    }\n    /**\n   * Set selectionDatas to _worksheetSelections, and emit selectionDatas by type.\n   * If type is not specfied, this method would clear all existing selections.\n   * @param sheetId\n   * @param selectionDatas\n   * @param type\n   */ setSelections(sheetId, selectionDatas = [], type) {\n        switch(this._ensureSheetSelection(sheetId).length = 0, this._ensureSheetSelection(sheetId).push(...selectionDatas), type){\n            case 0:\n                this._selectionMoveStart$.next(selectionDatas);\n                break;\n            case 1:\n                this._selectionMoving$.next(selectionDatas);\n                break;\n            case 2:\n                this._emitOnEnd(selectionDatas);\n                break;\n            default:\n                this._emitOnEnd(selectionDatas);\n                break;\n        }\n    }\n    getCurrentSelections() {\n        return this._getCurrentSelections();\n    }\n    getSelectionOfWorksheet(sheetId) {\n        return this._worksheetSelections.has(sheetId) ? this._worksheetSelections.get(sheetId) : [];\n    }\n    _getCurrentSelections() {\n        return this.getSelectionOfWorksheet(this._workbook.getActiveSheet().getSheetId());\n    }\n    getCurrentLastSelection() {\n        const selectionData = this._getCurrentSelections();\n        return selectionData[selectionData.length - 1];\n    }\n    /**\n   * Same as _getCurrentSelections(which return this._worksheetSelections), but this method would set [] if no selection.\n   * @param sheetId\n   * @returns this._worksheetSelections\n   */ _ensureSheetSelection(sheetId) {\n        let worksheetSelection = this._worksheetSelections.get(sheetId);\n        return worksheetSelection || (worksheetSelection = [], this._worksheetSelections.set(sheetId, worksheetSelection)), worksheetSelection;\n    }\n    _emitOnEnd(selections) {\n        this._beforeSelectionMoveEnd$.next(selections), this._selectionMoveEnd$.next(selections);\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookSelections, \"WorkbookSelections\");\nlet $a6ab01cd18fda354$export$fa5546bc990001f7 = $a6ab01cd18fda354$var$_WorkbookSelections;\nconst $a6ab01cd18fda354$export$cfd9b1f2e3fa6690 = \"DISABLE_NORMAL_SELECTIONS\", $a6ab01cd18fda354$var$CELL_CONTENT = (0, $7yNYd.createInterceptorKey)(\"CELL_CONTENT\"), $a6ab01cd18fda354$var$ROW_FILTERED = (0, $7yNYd.createInterceptorKey)(\"ROW_FILTERED\"), $a6ab01cd18fda354$export$35a9432a9b2d0ac0 = {\n    CELL_CONTENT: $a6ab01cd18fda354$var$CELL_CONTENT,\n    ROW_FILTERED: $a6ab01cd18fda354$var$ROW_FILTERED\n};\nvar $a6ab01cd18fda354$export$68bffb1b2e2dd0aa = /* @__PURE__ */ ((InterceptCellContentPriority2)=>(InterceptCellContentPriority2[InterceptCellContentPriority2.DATA_VALIDATION = 9] = \"DATA_VALIDATION\", InterceptCellContentPriority2[InterceptCellContentPriority2.NUMFMT = 10] = \"NUMFMT\", InterceptCellContentPriority2))($a6ab01cd18fda354$export$68bffb1b2e2dd0aa || {}), $a6ab01cd18fda354$var$__defProp$h = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$h = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$h = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$h(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$h(target, key, result), result;\n}, \"__decorateClass$h\"), $a6ab01cd18fda354$var$__decorateParam$e = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$e\"), $a6ab01cd18fda354$var$_a2;\nlet $a6ab01cd18fda354$export$80833ae4acf64dfd = ($a6ab01cd18fda354$var$_a2 = class extends (0, $7yNYd.Disposable) {\n    /** @ignore */ constructor(_univerInstanceService){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"_interceptorsByName\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_commandInterceptors\", []);\n        $a6ab01cd18fda354$var$__publicField(this, \"_rangeInterceptors\", []);\n        $a6ab01cd18fda354$var$__publicField(this, \"_beforeCommandInterceptor\", []);\n        $a6ab01cd18fda354$var$__publicField(this, \"_workbookDisposables\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_worksheetDisposables\", /* @__PURE__ */ new Map());\n        this._univerInstanceService = _univerInstanceService, this.disposeWithMe(this._univerInstanceService.getTypeOfUnitAdded$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>{\n            this._interceptWorkbook(workbook);\n        })), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitDisposed$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>this._disposeWorkbookInterceptor(workbook))), this.intercept($a6ab01cd18fda354$export$35a9432a9b2d0ac0.CELL_CONTENT, {\n            priority: -1,\n            handler (value, context) {\n                const rawData = context.worksheet.getCellRaw(context.row, context.col);\n                return value ? {\n                    ...rawData,\n                    ...value\n                } : rawData;\n            }\n        });\n    }\n    dispose() {\n        super.dispose(), this._workbookDisposables.forEach((disposable)=>disposable.dispose()), this._workbookDisposables.clear(), this._worksheetDisposables.clear();\n    }\n    interceptCommand(interceptor) {\n        if (this._commandInterceptors.includes(interceptor)) throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n        return this._commandInterceptors.push(interceptor), this._commandInterceptors.sort((a, b)=>{\n            var _a20, _b;\n            return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n        }), this.disposeWithMe((0, $7yNYd.toDisposable)(()=>(0, $7yNYd.remove)(this._commandInterceptors, interceptor)));\n    }\n    // Add a listener function to the command, which will be run before the command is run to get whether it can be executed the command\n    interceptBeforeCommand(interceptor) {\n        if (this._beforeCommandInterceptor.includes(interceptor)) throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n        return this._beforeCommandInterceptor.push(interceptor), this._beforeCommandInterceptor.sort((a, b)=>{\n            var _a20, _b;\n            return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n        }), this.disposeWithMe((0, $7yNYd.toDisposable)(()=>(0, $7yNYd.remove)(this._beforeCommandInterceptor, interceptor)));\n    }\n    /**\n   * before command execute, call this method to get the flag of whether it can be executed the command，\n   * @param info ICommandInfo\n   * @returns Promise<boolean>\n   */ async beforeCommandExecute(info) {\n        return (await Promise.all(this._beforeCommandInterceptor.map((i)=>i.performCheck(info)))).every((perform)=>perform);\n    }\n    /**\n   * By adding callbacks to some Ranges can get some additional mutations, such as clearing all plugin data in a certain area.\n   * @param interceptor IRangeInterceptors\n   * @returns IDisposable\n   */ interceptRanges(interceptor) {\n        if (this._rangeInterceptors.includes(interceptor)) throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n        return this._rangeInterceptors.push(interceptor), this._rangeInterceptors.sort((a, b)=>{\n            var _a20, _b;\n            return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n        }), this.disposeWithMe((0, $7yNYd.toDisposable)(()=>(0, $7yNYd.remove)(this._rangeInterceptors, interceptor)));\n    }\n    /**\n   * When command is executing, call this method to gether undo redo mutations from upper features.\n   * @param command\n   * @returns\n   */ onCommandExecute(info) {\n        const infos = this._commandInterceptors.map((i)=>i.getMutations(info));\n        return {\n            preUndos: infos.map((i)=>{\n                var _a20;\n                return (_a20 = i.preUndos) != null ? _a20 : [];\n            }).flat(),\n            undos: infos.map((i)=>i.undos).flat(),\n            preRedos: infos.map((i)=>{\n                var _a20;\n                return (_a20 = i.preRedos) != null ? _a20 : [];\n            }).flat(),\n            redos: infos.map((i)=>i.redos).flat()\n        };\n    }\n    generateMutationsByRanges(info) {\n        const infos = this._rangeInterceptors.map((i)=>i.getMutations(info));\n        return {\n            preUndos: infos.map((i)=>{\n                var _a20;\n                return (_a20 = i.preUndos) != null ? _a20 : [];\n            }).flat(),\n            undos: infos.map((i)=>i.undos).flat(),\n            preRedos: infos.map((i)=>{\n                var _a20;\n                return (_a20 = i.preRedos) != null ? _a20 : [];\n            }).flat(),\n            redos: infos.map((i)=>i.redos).flat()\n        };\n    }\n    intercept(name, interceptor) {\n        const key = name;\n        this._interceptorsByName.has(key) || this._interceptorsByName.set(key, []);\n        const interceptors = this._interceptorsByName.get(key);\n        return interceptors.push(interceptor), this._interceptorsByName.set(key, interceptors.sort((a, b)=>{\n            var _a20, _b;\n            return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n        })), this.disposeWithMe((0, $7yNYd.toDisposable)(()=>(0, $7yNYd.remove)(this._interceptorsByName.get(key), interceptor)));\n    }\n    fetchThroughInterceptors(name) {\n        const key = name, interceptors = this._interceptorsByName.get(key);\n        return (0, $7yNYd.composeInterceptors)(interceptors || []);\n    }\n    _interceptWorkbook(workbook) {\n        const disposables = new (0, $7yNYd.DisposableCollection)(), unitId = workbook.getUnitId(), sheetInterceptorService = this, interceptViewModel = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((worksheet)=>{\n            const subUnitId = worksheet.getSheetId();\n            worksheet.__interceptViewModel((viewModel)=>{\n                const sheetDisposables = new (0, $7yNYd.DisposableCollection)();\n                sheetInterceptorService._worksheetDisposables.set($a6ab01cd18fda354$var$getWorksheetDisposableID(unitId, worksheet), sheetDisposables), sheetDisposables.add(viewModel.registerCellContentInterceptor({\n                    getCell (row, col) {\n                        return sheetInterceptorService.fetchThroughInterceptors($a6ab01cd18fda354$export$35a9432a9b2d0ac0.CELL_CONTENT)(worksheet.getCellRaw(row, col), {\n                            unitId: unitId,\n                            subUnitId: subUnitId,\n                            row: row,\n                            col: col,\n                            worksheet: worksheet,\n                            workbook: workbook\n                        });\n                    }\n                })), sheetDisposables.add(viewModel.registerRowFilteredInterceptor({\n                    getRowFiltered (row) {\n                        return !!sheetInterceptorService.fetchThroughInterceptors($a6ab01cd18fda354$export$35a9432a9b2d0ac0.ROW_FILTERED)(!1, {\n                            unitId: unitId,\n                            subUnitId: subUnitId,\n                            row: row,\n                            workbook: workbook,\n                            worksheet: worksheet\n                        });\n                    }\n                }));\n            });\n        }, \"interceptViewModel\");\n        workbook.getSheets().forEach((worksheet)=>interceptViewModel(worksheet)), disposables.add(workbook.sheetCreated$.subscribe((worksheet)=>interceptViewModel(worksheet))), disposables.add((0, $7yNYd.toDisposable)(()=>workbook.getSheets().forEach((worksheet)=>this._disposeSheetInterceptor(unitId, worksheet)))), disposables.add(workbook.sheetDisposed$.subscribe((worksheet)=>this._disposeSheetInterceptor(unitId, worksheet))), this._workbookDisposables.set(unitId, disposables);\n    }\n    _disposeWorkbookInterceptor(workbook) {\n        const unitId = workbook.getUnitId(), disposable = this._workbookDisposables.get(unitId);\n        disposable && (disposable.dispose(), this._workbookDisposables.delete(unitId));\n    }\n    _disposeSheetInterceptor(unitId, worksheet) {\n        const disposableId = $a6ab01cd18fda354$var$getWorksheetDisposableID(unitId, worksheet), disposable = this._worksheetDisposables.get(disposableId);\n        disposable && (disposable.dispose(), this._worksheetDisposables.delete(disposableId));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a2, \"SheetInterceptorService\"), $a6ab01cd18fda354$var$_a2);\n$a6ab01cd18fda354$export$80833ae4acf64dfd = $a6ab01cd18fda354$var$__decorateClass$h([\n    $a6ab01cd18fda354$var$__decorateParam$e(0, (0, $7yNYd.IUniverInstanceService))\n], $a6ab01cd18fda354$export$80833ae4acf64dfd);\nfunction $a6ab01cd18fda354$var$getWorksheetDisposableID(unitId, worksheet) {\n    return `${unitId}|${worksheet.getSheetId()}`;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getWorksheetDisposableID, \"getWorksheetDisposableID\");\nfunction $a6ab01cd18fda354$var$handleStyle(styles, oldVal, newVal) {\n    var _a20;\n    const oldStyle = styles.getStyleByCell(oldVal);\n    oldStyle == null && delete oldVal.s, typeof newVal.s == \"string\" && (newVal.s = styles.get(newVal.s));\n    const merge2 = $a6ab01cd18fda354$var$mergeStyle(oldStyle, newVal.s ? newVal.s : null);\n    merge2 && (0, $7yNYd.Tools).removeNull(merge2), (0, $7yNYd.Tools).isEmptyObject(merge2) ? delete oldVal.s : oldVal.s = styles.setValue(merge2);\n    const newValueStream = newVal.v ? `${newVal.v}\\r\n` : \"\";\n    !newVal.p && oldVal.p && (newValueStream && newValueStream !== ((_a20 = oldVal.p.body) == null ? void 0 : _a20.dataStream) ? delete oldVal.p : $a6ab01cd18fda354$var$mergeRichTextStyle(oldVal.p, newVal.s ? newVal.s : null));\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$handleStyle, \"handleStyle\");\nfunction $a6ab01cd18fda354$var$transformStyle(oldStyle, newStyle) {\n    if (!newStyle || !Object.keys(newStyle).length) return oldStyle;\n    const backupStyle = oldStyle || {};\n    for(const k in newStyle)k === \"bd\" ? backupStyle[k] = $a6ab01cd18fda354$var$transformBorders(backupStyle[k] || {}, newStyle[k]) : k in backupStyle || (backupStyle[k] = null);\n    return backupStyle;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$transformStyle, \"transformStyle\");\nfunction $a6ab01cd18fda354$var$transformBorders(oldBorders, newBorders) {\n    if (!newBorders || !Object.keys(newBorders).length) return oldBorders;\n    for(const k in newBorders)k in oldBorders || (oldBorders[k] = null);\n    return oldBorders;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$transformBorders, \"transformBorders\");\nfunction $a6ab01cd18fda354$var$mergeStyle(oldStyle, newStyle, isRichText = !1) {\n    if (newStyle === null) return newStyle;\n    if (newStyle === void 0) return oldStyle;\n    const backupStyle = (0, $7yNYd.Tools).deepClone(oldStyle) || {};\n    for(const k in newStyle)isRichText && [\n        \"bd\",\n        \"tr\",\n        \"td\",\n        \"ht\",\n        \"vt\",\n        \"tb\",\n        \"pd\",\n        \"bg\"\n    ].includes(k) || (k in backupStyle && k === \"bd\" ? backupStyle[k] = Object.assign(backupStyle[k], newStyle[k]) : backupStyle[k] = newStyle[k]);\n    return \"cl\" in backupStyle && (\"ul\" in backupStyle && backupStyle.ul && (backupStyle.ul.cl = backupStyle.cl), \"ol\" in backupStyle && backupStyle.ol && (backupStyle.ol.cl = backupStyle.cl), \"st\" in backupStyle && backupStyle.st && (backupStyle.st.cl = backupStyle.cl)), backupStyle;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$mergeStyle, \"mergeStyle\");\nfunction $a6ab01cd18fda354$var$skipParagraphs(paragraphs, offset) {\n    return paragraphs.some((p)=>p.startIndex === offset) ? $a6ab01cd18fda354$var$skipParagraphs(paragraphs, offset + 1) : offset;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$skipParagraphs, \"skipParagraphs\");\nfunction $a6ab01cd18fda354$var$mergeRichTextStyle(p, newStyle) {\n    var _a20;\n    if (p.body == null) return;\n    Array.isArray(p.body.textRuns) || (p.body.textRuns = []);\n    let index = 0;\n    const newTextRuns = [], paragraphs = ((_a20 = p.body) == null ? void 0 : _a20.paragraphs) || [];\n    for (const textRun of p.body.textRuns){\n        const { st: st, ed: ed, ts: ts = {} } = textRun;\n        if (index < st) {\n            const tr = {\n                st: index,\n                ed: st\n            }, merge22 = $a6ab01cd18fda354$var$mergeStyle({}, newStyle, !0);\n            merge22 && (0, $7yNYd.Tools).removeNull(merge22), (0, $7yNYd.Tools).isEmptyObject(merge22) || (tr.ts = merge22), newTextRuns.push(tr);\n        }\n        const merge2 = $a6ab01cd18fda354$var$mergeStyle(ts, newStyle, !0);\n        merge2 && (0, $7yNYd.Tools).removeNull(merge2), (0, $7yNYd.Tools).isEmptyObject(merge2) ? delete textRun.ts : textRun.ts = merge2, newTextRuns.push(textRun), index = $a6ab01cd18fda354$var$skipParagraphs(paragraphs, ed);\n    }\n    const endIndex = p.body.dataStream.endsWith(`\\r\n`) ? p.body.dataStream.length - 2 : p.body.dataStream.length;\n    if (index < endIndex) {\n        const tr = {\n            st: index,\n            ed: endIndex\n        }, merge2 = $a6ab01cd18fda354$var$mergeStyle({}, newStyle, !0);\n        merge2 && (0, $7yNYd.Tools).removeNull(merge2), (0, $7yNYd.Tools).isEmptyObject(merge2) || (tr.ts = merge2), newTextRuns.push(tr);\n    }\n    p.body.textRuns = (0, $7yNYd.normalizeTextRuns)(newTextRuns);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$mergeRichTextStyle, \"mergeRichTextStyle\");\nfunction $a6ab01cd18fda354$var$getCellType(styles, newVal, oldVal) {\n    if (newVal.t) return newVal.t;\n    if (newVal.v === null) return null;\n    const newStyle = styles.getStyleByCell(newVal), oldStyle = styles.getStyleByCell(oldVal);\n    if (oldVal.t === (0, $7yNYd.CellValueType).FORCE_STRING) {\n        if (!$a6ab01cd18fda354$var$isTextFormat(oldStyle) && newVal.v !== void 0) {\n            if ((0, $7yNYd.isRealNum)(newVal.v)) return (0, $7yNYd.CellValueType).NUMBER;\n            if ((0, $7yNYd.isBooleanString)(`${newVal.v}`)) return (0, $7yNYd.CellValueType).BOOLEAN;\n        }\n        return (0, $7yNYd.CellValueType).FORCE_STRING;\n    }\n    return $a6ab01cd18fda354$var$hasNumberFormat(newStyle) ? $a6ab01cd18fda354$var$isTextFormat(newStyle) ? (0, $7yNYd.CellValueType).STRING : $a6ab01cd18fda354$var$checkCellValueTypeByValue(newVal, oldVal) : $a6ab01cd18fda354$var$isTextFormat(oldStyle) ? (0, $7yNYd.CellValueType).STRING : $a6ab01cd18fda354$var$checkCellValueTypeByValue(newVal, oldVal);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getCellType, \"getCellType\");\nfunction $a6ab01cd18fda354$var$checkCellValueTypeByValue(newVal, oldVal) {\n    return newVal.v !== void 0 ? $a6ab01cd18fda354$var$checkCellValueType(newVal.v, newVal.t) : $a6ab01cd18fda354$var$checkCellValueType(oldVal.v, oldVal.t);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$checkCellValueTypeByValue, \"checkCellValueTypeByValue\");\nfunction $a6ab01cd18fda354$var$hasNumberFormat(style) {\n    var _a20;\n    return !!((_a20 = style == null ? void 0 : style.n) != null && _a20.pattern);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$hasNumberFormat, \"hasNumberFormat\");\nfunction $a6ab01cd18fda354$var$isTextFormat(style) {\n    var _a20;\n    return ((_a20 = style == null ? void 0 : style.n) == null ? void 0 : _a20.pattern) === (0, $2BOVU.DEFAULT_TEXT_FORMAT);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$isTextFormat, \"isTextFormat\");\nfunction $a6ab01cd18fda354$var$checkCellValueType(v, type) {\n    return v === null ? null : typeof v == \"string\" ? (0, $7yNYd.isRealNum)(v) ? (+v == 0 || +v == 1) && type === (0, $7yNYd.CellValueType).BOOLEAN ? (0, $7yNYd.CellValueType).BOOLEAN : (0, $7yNYd.CellValueType).NUMBER : (0, $7yNYd.isBooleanString)(v) ? (0, $7yNYd.CellValueType).BOOLEAN : (0, $7yNYd.CellValueType).STRING : typeof v == \"number\" ? (v === 0 || v === 1) && type === (0, $7yNYd.CellValueType).BOOLEAN ? (0, $7yNYd.CellValueType).BOOLEAN : (0, $7yNYd.CellValueType).NUMBER : typeof v == \"boolean\" ? (0, $7yNYd.CellValueType).BOOLEAN : (0, $7yNYd.CellValueType).FORCE_STRING;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$checkCellValueType, \"checkCellValueType\");\nfunction $a6ab01cd18fda354$var$getCellTypeByPattern(cell, pattern) {\n    return cell.t === (0, $7yNYd.CellValueType).FORCE_STRING ? (0, $7yNYd.CellValueType).FORCE_STRING : pattern === (0, $2BOVU.DEFAULT_TEXT_FORMAT) ? (0, $7yNYd.CellValueType).STRING : $a6ab01cd18fda354$var$checkCellValueType(cell.v, cell.t);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getCellTypeByPattern, \"getCellTypeByPattern\");\nfunction $a6ab01cd18fda354$var$getCellValue(type, cell) {\n    return type === (0, $7yNYd.CellValueType).NUMBER ? Number(cell.v) : type === (0, $7yNYd.CellValueType).BOOLEAN ? $a6ab01cd18fda354$var$extractBooleanValue(cell.v) ? 1 : 0 : type === (0, $7yNYd.CellValueType).STRING || type === (0, $7yNYd.CellValueType).FORCE_STRING ? `${cell.v}` : cell.v;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getCellValue, \"getCellValue\");\nfunction $a6ab01cd18fda354$var$extractBooleanValue(value) {\n    if (typeof value == \"string\") {\n        if (value.toUpperCase() === \"TRUE\") return !0;\n        if (value.toUpperCase() === \"FALSE\") return !1;\n        if ((0, $7yNYd.isSafeNumeric)(value)) {\n            if (Number(value) === 0) return !1;\n            if (Number(value) === 1) return !0;\n        }\n    }\n    if (typeof value == \"number\") {\n        if (value === 0) return !1;\n        if (value === 1) return !0;\n    }\n    return typeof value == \"boolean\" ? value : null;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$extractBooleanValue, \"extractBooleanValue\");\nfunction $a6ab01cd18fda354$var$setNull(value) {\n    return value == null ? null : (value.f === void 0 && (value.f = null), value.si === void 0 && (value.si = null), value.p === void 0 && (value.p = null), value.v === void 0 && (value.v = null), value.t === void 0 && (value.t = null), value.s === void 0 && (value.s = null), value.custom === void 0 && (value.custom = null), value);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$setNull, \"setNull\");\nconst $a6ab01cd18fda354$export$8414704275a3cbbf = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const { unitId: unitId, subUnitId: subUnitId, cellValue: cellValue } = params, workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(unitId);\n    if (workbook == null) throw new Error(\"workbook is null error!\");\n    const worksheet = workbook.getSheetBySheetId(subUnitId);\n    if (worksheet == null) throw new Error(\"worksheet is null error!\");\n    const cellMatrix = worksheet.getCellMatrix(), styles = workbook.getStyles(), undoData = new (0, $7yNYd.ObjectMatrix)();\n    return new (0, $7yNYd.ObjectMatrix)(cellValue).forValue((row, col, newVal)=>{\n        const cell = (0, $7yNYd.Tools).deepClone(cellMatrix == null ? void 0 : cellMatrix.getValue(row, col)) || {}, oldStyle = styles.getStyleByCell(cell), newStyle = styles.getStyleByCell(newVal);\n        cell.s = $a6ab01cd18fda354$var$transformStyle(oldStyle, newStyle), undoData.setValue(row, col, $a6ab01cd18fda354$var$setNull(cell));\n    }), {\n        ...params,\n        options: {},\n        cellValue: undoData.getMatrix()\n    };\n}, \"SetRangeValuesUndoMutationFactory\"), $a6ab01cd18fda354$export$ce2b970bc67fd9bc = {\n    id: \"sheet.mutation.set-range-values\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { cellValue: cellValue, subUnitId: subUnitId, unitId: unitId } = params, workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUnit(unitId);\n        if (!workbook) return !1;\n        const worksheet = workbook.getSheetBySheetId(subUnitId);\n        if (!worksheet) return !1;\n        const cellMatrix = worksheet.getCellMatrix(), styles = workbook.getStyles();\n        return new (0, $7yNYd.ObjectMatrix)(cellValue).forValue((row, col, newVal)=>{\n            if (!newVal) cellMatrix == null || cellMatrix.setValue(row, col, {});\n            else {\n                const oldVal = cellMatrix.getValue(row, col) || {}, type = $a6ab01cd18fda354$var$getCellType(styles, newVal, oldVal);\n                newVal.f !== void 0 && (oldVal.f = newVal.f), newVal.si !== void 0 && (oldVal.si = newVal.si), newVal.p !== void 0 && (oldVal.p = newVal.p), newVal.v !== void 0 && (oldVal.v = $a6ab01cd18fda354$var$getCellValue(type, newVal)), oldVal.v !== void 0 && (oldVal.t = type, oldVal.v = $a6ab01cd18fda354$var$getCellValue(type, oldVal)), newVal.s !== void 0 && $a6ab01cd18fda354$var$handleStyle(styles, oldVal, newVal), newVal.custom !== void 0 && (oldVal.custom = newVal.custom), cellMatrix.setValue(row, col, (0, $7yNYd.Tools).removeNull(oldVal));\n            }\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$groupByKey = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((arr, key, blankKey = \"\")=>arr.reduce((result, current)=>{\n        const value = current && current[key];\n        return typeof value != \"string\" ? (console.warn(current, `${key} is not string`), result) : (value ? (result[value] || (result[value] = []), result[value].push(current)) : result[blankKey].push(current), result);\n    }, {}), \"groupByKey\"), $a6ab01cd18fda354$var$createUniqueKey = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((initValue = 0)=>{\n    let _initValue = initValue;\n    return /* @__PURE__ */ $a6ab01cd18fda354$var$__name(function() {\n        return _initValue++;\n    }, \"getKey\");\n}, \"createUniqueKey\");\nfunction $a6ab01cd18fda354$export$125e36a5e3690dd2(range) {\n    const cellValue = new (0, $7yNYd.ObjectMatrix)();\n    return range.forEach((range2)=>{\n        const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = range2;\n        for(let i = startRow; i <= endRow; i++)for(let j = startColumn; j <= endColumn; j++)cellValue.setValue(i, j, null);\n    }), cellValue.clone();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$125e36a5e3690dd2, \"generateNullCell\");\nfunction $a6ab01cd18fda354$export$560d2d45d438b4e4(range) {\n    const cellValue = new (0, $7yNYd.ObjectMatrix)();\n    return range.forEach((range2)=>{\n        const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = range2;\n        for(let i = startRow; i <= endRow; i++)for(let j = startColumn; j <= endColumn; j++)cellValue.setValue(i, j, {\n            v: null,\n            p: null,\n            f: null,\n            si: null,\n            custom: null\n        });\n    }), cellValue.clone();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$560d2d45d438b4e4, \"generateNullCellValue\");\nfunction $a6ab01cd18fda354$var$generateNullCellStyle(ranges) {\n    const cellValue = new (0, $7yNYd.ObjectMatrix)();\n    return ranges.forEach((range)=>{\n        const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = range;\n        for(let i = startRow; i <= endRow; i++)for(let j = startColumn; j <= endColumn; j++)cellValue.setValue(i, j, {\n            s: null\n        });\n    }), cellValue.clone();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$generateNullCellStyle, \"generateNullCellStyle\");\nconst $a6ab01cd18fda354$export$2f4ff18eff30d407 = {\n    id: \"sheet.command.clear-selection-all\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), commandService = accessor.get((0, $7yNYd.ICommandService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const sequenceExecuteList = [], sequenceExecuteUndoList = [], clearMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: $a6ab01cd18fda354$export$125e36a5e3690dd2(selections)\n        }, undoClearMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, clearMutationParams);\n        sequenceExecuteList.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: clearMutationParams\n        }), sequenceExecuteUndoList.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: undoClearMutationParams\n        });\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$2f4ff18eff30d407.id\n        });\n        return sequenceExecuteList.push(...intercepted.redos), sequenceExecuteUndoList.unshift(...intercepted.undos), (0, $7yNYd.sequenceExecute)(sequenceExecuteList, commandService) ? (undoRedoService.pushUndoRedo({\n            // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n            // Hooks can be used to hook the code of external controllers to add new actions.\n            unitID: unitId,\n            undoMutations: sequenceExecuteUndoList,\n            redoMutations: sequenceExecuteList\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$ab26cf116e0b60e6 = {\n    id: \"sheet.command.clear-selection-content\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), commandService = accessor.get((0, $7yNYd.ICommandService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const clearMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: $a6ab01cd18fda354$export$560d2d45d438b4e4(selections)\n        }, undoClearMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, clearMutationParams), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$ab26cf116e0b60e6.id\n        }), redos = [\n            {\n                id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                params: clearMutationParams\n            },\n            ...intercepted.redos\n        ], undos = [\n            ...intercepted.undos,\n            {\n                id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                params: undoClearMutationParams\n            }\n        ];\n        return (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n            // Hooks can be used to hook the code of external controllers to add new actions.\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$863f42bb4d58d9e4 = {\n    id: \"sheet.command.clear-selection-format\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), commandService = accessor.get((0, $7yNYd.ICommandService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const sequenceExecuteList = [], sequenceExecuteUndoList = [], clearMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: $a6ab01cd18fda354$var$generateNullCellStyle(selections)\n        }, undoClearMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, clearMutationParams);\n        sequenceExecuteList.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: clearMutationParams\n        }), sequenceExecuteUndoList.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: undoClearMutationParams\n        });\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$863f42bb4d58d9e4.id\n        });\n        return sequenceExecuteList.push(...intercepted.redos), sequenceExecuteUndoList.unshift(...intercepted.undos), (0, $7yNYd.sequenceExecute)(sequenceExecuteList, commandService) ? (undoRedoService.pushUndoRedo({\n            // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n            // Hooks can be used to hook the code of external controllers to add new actions.\n            unitID: unitId,\n            undoMutations: sequenceExecuteUndoList,\n            redoMutations: sequenceExecuteList\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d74793cdb77aea60 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((_accessor, params)=>({\n        subUnitId: params.sheet.id,\n        unitId: params.unitId,\n        subUnitName: params.sheet.name\n    }), \"InsertSheetUndoMutationFactory\"), $a6ab01cd18fda354$export$759ebfd45fe6d2e7 = {\n    id: \"sheet.mutation.insert-sheet\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), { sheet: sheet, index: index, unitId: unitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n        return workbook ? workbook.addWorksheet(sheet.id, index, sheet) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$59d57457bf2b83c0(univerInstanceService, params) {\n    const { unitId: unitId } = params, workbook = unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n    return workbook ? {\n        workbook: workbook,\n        unitId: workbook.getUnitId()\n    } : null;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$59d57457bf2b83c0, \"getSheetCommandTargetWorkbook\");\nfunction $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params = {}) {\n    const { unitId: unitId, subUnitId: subUnitId } = params, workbook = unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n    if (!workbook) return null;\n    const worksheet = subUnitId ? workbook.getSheetBySheetId(subUnitId) : workbook.getActiveSheet(!0);\n    return worksheet ? {\n        worksheet: worksheet,\n        workbook: workbook,\n        unitId: workbook.getUnitId(),\n        subUnitId: worksheet.getSheetId()\n    } : null;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$7172ac1f96d9c125, \"getSheetCommandTarget\");\nfunction $a6ab01cd18fda354$export$2d3c286eac9e190d(univerInstanceService, params) {\n    const { unitId: unitId, subUnitId: subUnitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n    if (!workbook) return null;\n    const worksheet = workbook.getSheetBySheetId(subUnitId);\n    return worksheet ? {\n        worksheet: worksheet,\n        workbook: workbook\n    } : null;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$2d3c286eac9e190d, \"getSheetMutationTarget\");\nconst $a6ab01cd18fda354$export$99c49b2d1c0ac200 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), { subUnitId: subUnitId, unitId: unitId } = params, target = $a6ab01cd18fda354$export$2d3c286eac9e190d(univerInstanceService, params);\n    if (!target) throw new Error(\"[RemoveSheetUndoMutationFactory]: Worksheet is null error!\");\n    const { workbook: workbook, worksheet: worksheet } = target, sheet = worksheet.getConfig();\n    return {\n        index: workbook.getConfig().sheetOrder.findIndex((id)=>id === subUnitId),\n        sheet: sheet,\n        unitId: unitId\n    };\n}, \"RemoveSheetUndoMutationFactory\"), $a6ab01cd18fda354$export$f14a5300764a7508 = {\n    id: \"sheet.mutation.remove-sheet\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), { subUnitId: subUnitId, unitId: unitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n        return workbook ? workbook.removeSheet(subUnitId) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$8c73367803b79193 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.copy-sheet\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), localeService = accessor.get((0, $7yNYd.LocaleService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet, unitId: unitId } = target, config = (0, $7yNYd.Tools).deepClone(worksheet.getConfig());\n        config.name = $a6ab01cd18fda354$var$getCopyUniqueSheetName(workbook, localeService, config.name), config.id = (0, $7yNYd.Tools).generateRandomId();\n        const insertSheetMutationParams = {\n            index: workbook.getSheetIndex(worksheet) + 1,\n            sheet: config,\n            unitId: unitId\n        }, removeSheetMutationParams = $a6ab01cd18fda354$export$d74793cdb77aea60(accessor, insertSheetMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$759ebfd45fe6d2e7.id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$f14a5300764a7508.id,\n                    params: removeSheetMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$759ebfd45fe6d2e7.id,\n                    params: insertSheetMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$getCopyUniqueSheetName(workbook, localeService, name) {\n    let output = name + localeService.t(\"sheets.tabs.sheetCopy\", \"\"), count = 2;\n    for(; workbook.checkSheetName(output);)output = name + localeService.t(\"sheets.tabs.sheetCopy\", `${count}`), count++;\n    return output;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getCopyUniqueSheetName, \"getCopyUniqueSheetName\");\nconst $a6ab01cd18fda354$export$5535d7f795e5bded = {\n    id: \"sheet.mutation.move-range\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { from: from, to: to } = params;\n        if (!from || !to) return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const fromWorksheet = workbook.getSheetBySheetId(params.from.subUnitId), toWorksheet = workbook.getSheetBySheetId(params.to.subUnitId);\n        if (!fromWorksheet || !toWorksheet) return !1;\n        const fromCellMatrix = fromWorksheet.getCellMatrix(), toCellMatrix = toWorksheet.getCellMatrix();\n        return new (0, $7yNYd.ObjectMatrix)(from.value).forValue((row, col, newVal)=>{\n            fromCellMatrix.setValue(row, col, newVal);\n        }), new (0, $7yNYd.ObjectMatrix)(to.value).forValue((row, col, newVal)=>{\n            toCellMatrix.setValue(row, col, newVal);\n        }), !0;\n    }, \"handler\")\n};\nvar $a6ab01cd18fda354$var$__defProp$g = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$g = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$g = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$g(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$g(target, key, result), result;\n}, \"__decorateClass$g\"), $a6ab01cd18fda354$var$__decorateParam$d = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$d\");\nconst $a6ab01cd18fda354$export$121f25ca6629b386 = (0, $7yNYd.createIdentifier)(\"sheets-formula.ref-selections.service\");\nvar $a6ab01cd18fda354$var$_a3;\nlet $a6ab01cd18fda354$export$f5ec0ae35ff550d6 = ($a6ab01cd18fda354$var$_a3 = class extends $a6ab01cd18fda354$export$c93d00f3ceba73b5 {\n    constructor(_instanceSrv){\n        super(_instanceSrv);\n    }\n    _init() {\n        const $ = this._getAliveWorkbooks$().pipe((0, $2jrJe.takeUntil)(this.dispose$));\n        this.selectionMoveStart$ = $.pipe((0, $23cfA.switchMap)((ss)=>(0, $i54iF.merge)(...ss.map((s)=>s.selectionMoveStart$)))), this.selectionMoving$ = $.pipe((0, $23cfA.switchMap)((ss)=>(0, $i54iF.merge)(...ss.map((s)=>s.selectionMoving$)))), this.selectionMoveEnd$ = $.pipe((0, $23cfA.switchMap)((ss)=>(0, $i54iF.merge)(...ss.map((s)=>s.selectionMoveEnd$))));\n    }\n    _getAliveWorkbooks$() {\n        const aliveWorkbooks = this._instanceSrv.getAllUnitsForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        aliveWorkbooks.forEach((workbook)=>this._ensureWorkbookSelection(workbook.getUnitId()));\n        const workbooks$ = new (0, $5LPkb.BehaviorSubject)(aliveWorkbooks);\n        return this.disposeWithMe(this._instanceSrv.getTypeOfUnitAdded$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>{\n            this._ensureWorkbookSelection(workbook.getUnitId()), workbooks$.next([\n                ...workbooks$.getValue(),\n                workbook\n            ]);\n        })), this.disposeWithMe(this._instanceSrv.getTypeOfUnitDisposed$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>{\n            this._removeWorkbookSelection(workbook.getUnitId()), workbooks$.next(workbooks$.getValue().filter((unit)=>unit !== workbook));\n        })), workbooks$.pipe((0, $hciHF.map)((workbooks)=>workbooks.map((w)=>this._ensureWorkbookSelection(w.getUnitId()))));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a3, \"RefSelectionsService\"), $a6ab01cd18fda354$var$_a3);\n$a6ab01cd18fda354$export$f5ec0ae35ff550d6 = $a6ab01cd18fda354$var$__decorateClass$g([\n    $a6ab01cd18fda354$var$__decorateParam$d(0, (0, $7yNYd.IUniverInstanceService))\n], $a6ab01cd18fda354$export$f5ec0ae35ff550d6);\nfunction $a6ab01cd18fda354$export$15b225d040510155(accessor) {\n    const disabledNormalSelections = accessor.get((0, $7yNYd.IContextService)).getContextValue($a6ab01cd18fda354$export$cfd9b1f2e3fa6690);\n    return accessor.get(disabledNormalSelections ? $a6ab01cd18fda354$export$121f25ca6629b386 : $a6ab01cd18fda354$export$c93d00f3ceba73b5);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$15b225d040510155, \"getSelectionsService\");\nconst $a6ab01cd18fda354$export$9fe459fc1a6ecb2d = {\n    id: \"sheet.operation.set-selections\",\n    type: (0, $7yNYd.CommandType).OPERATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        if (!params) return !1;\n        const { selections: selections, type: type, unitId: unitId, subUnitId: subUnitId } = params;\n        return $a6ab01cd18fda354$export$15b225d040510155(accessor).setSelections(unitId, subUnitId, [\n            ...selections\n        ], type), !0;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$f2ae5969eaf8e0d4(startRange, worksheet, shouldRecursive = !0) {\n    const coveredMergedCells = worksheet.getMatrixWithMergedCells(...(0, $7yNYd.selectionToArray)(startRange)), exceededMergedCells = [];\n    if (coveredMergedCells.forValue((row, col, value)=>{\n        if (value.colSpan !== void 0 && value.rowSpan !== void 0) {\n            const mergedCellRange = {\n                startRow: row,\n                startColumn: col,\n                endRow: row + value.rowSpan - 1,\n                endColumn: col + value.colSpan - 1\n            };\n            (0, $7yNYd.Rectangle).contains(startRange, mergedCellRange) || exceededMergedCells.push(mergedCellRange);\n        }\n    }), exceededMergedCells.length === 0) return startRange;\n    const union = (0, $7yNYd.Rectangle).union(startRange, ...exceededMergedCells);\n    return shouldRecursive ? $a6ab01cd18fda354$export$f2ae5969eaf8e0d4(union, worksheet, shouldRecursive) : union;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$f2ae5969eaf8e0d4, \"alignToMergedCellsBorders\");\nfunction $a6ab01cd18fda354$export$99c774ff550a0c6f(row, col, worksheet) {\n    let destRange = null;\n    return worksheet.getMatrixWithMergedCells(row, col, row, col).forValue((row2, col2, value)=>(destRange = {\n            actualRow: row2,\n            actualColumn: col2,\n            startRow: row2,\n            startColumn: col2,\n            isMerged: value.rowSpan !== void 0 || value.colSpan !== void 0,\n            isMergedMainCell: value.rowSpan !== void 0 && value.colSpan !== void 0,\n            endRow: row2 + (value.rowSpan !== void 0 ? value.rowSpan - 1 : 0),\n            endColumn: col2 + (value.colSpan !== void 0 ? value.colSpan - 1 : 0),\n            rangeType: (0, $7yNYd.RANGE_TYPE).NORMAL\n        }, !1)), destRange || {\n        actualColumn: col,\n        actualRow: row,\n        startRow: row,\n        startColumn: col,\n        endRow: row,\n        endColumn: col,\n        isMerged: !1,\n        isMergedMainCell: !1,\n        rangeType: (0, $7yNYd.RANGE_TYPE).NORMAL\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$99c774ff550a0c6f, \"getCellAtRowCol\");\nfunction $a6ab01cd18fda354$export$e15f5fa13f6603f9(range, rowCount, columnCount) {\n    const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = range;\n    return Number.isNaN(startRow) && (range.startRow = 0), Number.isNaN(endRow) && (range.endRow = rowCount - 1), Number.isNaN(startColumn) && (range.startColumn = 0), Number.isNaN(endColumn) && (range.endColumn = columnCount - 1), range;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$e15f5fa13f6603f9, \"setEndForRange\");\nfunction $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet) {\n    const startRow = Number.isNaN(range.startRow) ? 0 : range.startRow, startColumn = Number.isNaN(range.startColumn) ? 0 : range.startColumn, mergedRange = worksheet.getMergedCell(startRow, startColumn);\n    return mergedRange ? {\n        ...mergedRange,\n        actualRow: startRow,\n        actualColumn: startColumn,\n        rangeType: (0, $7yNYd.RANGE_TYPE).NORMAL,\n        isMerged: !0,\n        isMergedMainCell: !0\n    } : {\n        startRow: startRow,\n        startColumn: startColumn,\n        endRow: range.startRow,\n        endColumn: range.startColumn,\n        actualRow: startRow,\n        actualColumn: startColumn,\n        rangeType: (0, $7yNYd.RANGE_TYPE).NORMAL,\n        isMerged: !1,\n        isMergedMainCell: !1\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$d262ae8015daf961, \"getPrimaryForRange\");\nconst $a6ab01cd18fda354$export$487f185ae1bde256 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, workbook, worksheet)=>({\n        id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n        params: {\n            unitId: workbook.getUnitId(),\n            subUnitId: worksheet.getSheetId(),\n            selections: [\n                {\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet)\n                }\n            ]\n        }\n    }), \"followSelectionOperation\");\nfunction $a6ab01cd18fda354$export$d6cc45b9b04ea7df(selection) {\n    if (!selection) return !1;\n    const { range: range, primary: primary } = selection;\n    return (0, $7yNYd.Rectangle).equals(range, primary);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$d6cc45b9b04ea7df, \"isSingleCellSelection\");\nfunction $a6ab01cd18fda354$var$createRangeIteratorWithSkipFilteredRows(sheet) {\n    function forOperableEach(ranges, operator) {\n        function iterate(range) {\n            for(let r = range.startRow; r <= range.endRow; r++)if (!sheet.getRowFiltered(r)) for(let c = range.startColumn; c <= range.endColumn; c++)operator(r, c, range);\n        }\n        $a6ab01cd18fda354$var$__name(iterate, \"iterate\"), iterate(ranges);\n    }\n    return $a6ab01cd18fda354$var$__name(forOperableEach, \"forOperableEach\"), {\n        forOperableEach: forOperableEach\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$createRangeIteratorWithSkipFilteredRows, \"createRangeIteratorWithSkipFilteredRows\");\nfunction $a6ab01cd18fda354$export$e08f9f7e26e9aff5(worksheet, startRow, endRow, startColumn, endColumn, isRow, styleRowOrColumn) {\n    const cellValue = {};\n    for(let row = startRow; row <= endRow; row++)for(let column = startColumn; column <= endColumn; column++){\n        const cell = isRow ? worksheet.getCell(styleRowOrColumn, column) : worksheet.getCell(row, styleRowOrColumn);\n        !cell || !cell.s || (cellValue[row] || (cellValue[row] = {}), cellValue[row][column] = {\n            s: cell.s\n        });\n    }\n    return cellValue;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$e08f9f7e26e9aff5, \"copyRangeStyles\");\nconst $a6ab01cd18fda354$var$MoveRangeCommandId = \"sheet.command.move-range\", $a6ab01cd18fda354$export$6d3ee8ffacf894af = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$MoveRangeCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target || !await sheetInterceptorService.beforeCommandExecute({\n            id: $a6ab01cd18fda354$export$6d3ee8ffacf894af.id,\n            params: params\n        })) return !1;\n        const { worksheet: worksheet, subUnitId: subUnitId, unitId: unitId } = target, moveRangeMutations = $a6ab01cd18fda354$export$f32df911e9cdbdd0(accessor, {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            range: params.fromRange\n        }, {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            range: params.toRange\n        });\n        if (moveRangeMutations === null) return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n        const interceptorCommands = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$6d3ee8ffacf894af.id,\n            params: {\n                ...params\n            }\n        }), redos = [\n            ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n            ...moveRangeMutations.redos,\n            ...interceptorCommands.redos,\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    selections: [\n                        {\n                            range: params.toRange,\n                            primary: $a6ab01cd18fda354$export$d262ae8015daf961(params.toRange, worksheet)\n                        }\n                    ]\n                }\n            }\n        ], undos = [\n            ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n            ...moveRangeMutations.undos,\n            ...interceptorCommands.undos,\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    selections: [\n                        {\n                            range: params.fromRange,\n                            primary: $a6ab01cd18fda354$export$d262ae8015daf961(params.fromRange, worksheet)\n                        }\n                    ]\n                }\n            }\n        ];\n        return (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$f32df911e9cdbdd0(accessor, from, to, ignoreMerge = !1) {\n    const redos = [], undos = [], { range: fromRange, subUnitId: fromSubUnitId, unitId: unitId } = from, { range: toRange, subUnitId: toSubUnitId } = to, workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(unitId), toWorksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(toSubUnitId), fromWorksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(fromSubUnitId), toCellMatrix = toWorksheet == null ? void 0 : toWorksheet.getCellMatrix(), fromCellMatrix = fromWorksheet == null ? void 0 : fromWorksheet.getCellMatrix();\n    if (toWorksheet && fromWorksheet && toCellMatrix && fromCellMatrix) {\n        const alignedRangeWithToRange = $a6ab01cd18fda354$export$f2ae5969eaf8e0d4(toRange, toWorksheet, !1);\n        if (!(0, $7yNYd.Rectangle).equals(toRange, alignedRangeWithToRange) && !ignoreMerge) return null;\n        const fromCellValue = new (0, $7yNYd.ObjectMatrix)(), newFromCellValue = new (0, $7yNYd.ObjectMatrix)();\n        (0, $7yNYd.Range).foreach(fromRange, (row, col)=>{\n            fromCellValue.setValue(row, col, (0, $7yNYd.Tools).deepClone(fromCellMatrix.getValue(row, col))), newFromCellValue.setValue(row, col, null);\n        });\n        const toCellValue = new (0, $7yNYd.ObjectMatrix)(), newToCellValue = new (0, $7yNYd.ObjectMatrix)();\n        (0, $7yNYd.Range).foreach(toRange, (row, col)=>{\n            toCellValue.setValue(row, col, (0, $7yNYd.Tools).deepClone(toCellMatrix.getValue(row, col)));\n        }), (0, $7yNYd.Range).foreach(fromRange, (row, col)=>{\n            const cellRange = (0, $7yNYd.cellToRange)(row, col), relativeRange = (0, $7yNYd.Rectangle).getRelativeRange(cellRange, fromRange), range = (0, $7yNYd.Rectangle).getPositionRange(relativeRange, toRange);\n            newToCellValue.setValue(range.startRow, range.startColumn, (0, $7yNYd.Tools).deepClone(fromCellMatrix.getValue(row, col)));\n        });\n        const doMoveRangeMutation = {\n            fromRange: from.range,\n            toRange: to.range,\n            from: {\n                value: newFromCellValue.getMatrix(),\n                subUnitId: fromSubUnitId\n            },\n            to: {\n                value: newToCellValue.getMatrix(),\n                subUnitId: toSubUnitId\n            },\n            unitId: unitId\n        }, undoMoveRangeMutation = {\n            fromRange: to.range,\n            toRange: from.range,\n            from: {\n                value: fromCellValue.getMatrix(),\n                subUnitId: fromSubUnitId\n            },\n            to: {\n                value: toCellValue.getMatrix(),\n                subUnitId: toSubUnitId\n            },\n            unitId: unitId\n        };\n        redos.push({\n            id: $a6ab01cd18fda354$export$5535d7f795e5bded.id,\n            params: doMoveRangeMutation\n        }), undos.push({\n            id: $a6ab01cd18fda354$export$5535d7f795e5bded.id,\n            params: undoMoveRangeMutation\n        });\n    }\n    return {\n        redos: redos,\n        undos: undos\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$f32df911e9cdbdd0, \"getMoveRangeUndoRedoMutations\");\nvar $a6ab01cd18fda354$var$I = /* @__PURE__ */ ((E)=>(E[E.UNIVER_UNKNOWN = 0] = \"UNIVER_UNKNOWN\", E[E.UNIVER_DOC = 1] = \"UNIVER_DOC\", E[E.UNIVER_SHEET = 2] = \"UNIVER_SHEET\", E[E.UNIVER_SLIDE = 3] = \"UNIVER_SLIDE\", E[E.UNIVER_PROJECT = 4] = \"UNIVER_PROJECT\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))($a6ab01cd18fda354$var$I || {}), $a6ab01cd18fda354$var$P = /* @__PURE__ */ ((E)=>(E[E.View = 0] = \"View\", E[E.Edit = 1] = \"Edit\", E[E.ManageCollaborator = 2] = \"ManageCollaborator\", E[E.Print = 3] = \"Print\", E[E.Duplicate = 4] = \"Duplicate\", E[E.Comment = 5] = \"Comment\", E[E.Copy = 6] = \"Copy\", E[E.Share = 7] = \"Share\", E[E.Export = 8] = \"Export\", E[E.MoveWorksheet = 9] = \"MoveWorksheet\", E[E.DeleteWorksheet = 10] = \"DeleteWorksheet\", E[E.HideWorksheet = 11] = \"HideWorksheet\", E[E.RenameWorksheet = 12] = \"RenameWorksheet\", E[E.CreateWorksheet = 13] = \"CreateWorksheet\", E[E.SetWorksheetStyle = 14] = \"SetWorksheetStyle\", E[E.EditWorksheetCell = 15] = \"EditWorksheetCell\", E[E.InsertHyperlink = 16] = \"InsertHyperlink\", E[E.Sort = 17] = \"Sort\", E[E.Filter = 18] = \"Filter\", E[E.PivotTable = 19] = \"PivotTable\", E[E.FloatImg = 20] = \"FloatImg\", E[E.History = 21] = \"History\", E[E.RwHgtClWdt = 22] = \"RwHgtClWdt\", E[E.ViemRwHgtClWdt = 23] = \"ViemRwHgtClWdt\", E[E.ViewFilter = 24] = \"ViewFilter\", E[E.MoveSheet = 25] = \"MoveSheet\", E[E.DeleteSheet = 26] = \"DeleteSheet\", E[E.HideSheet = 27] = \"HideSheet\", E[E.CopySheet = 28] = \"CopySheet\", E[E.RenameSheet = 29] = \"RenameSheet\", E[E.CreateSheet = 30] = \"CreateSheet\", E[E.SelectProtectedCells = 31] = \"SelectProtectedCells\", E[E.SelectUnProtectedCells = 32] = \"SelectUnProtectedCells\", E[E.SetCellStyle = 33] = \"SetCellStyle\", E[E.SetCellValue = 34] = \"SetCellValue\", E[E.SetRowStyle = 35] = \"SetRowStyle\", E[E.SetColumnStyle = 36] = \"SetColumnStyle\", E[E.InsertRow = 37] = \"InsertRow\", E[E.InsertColumn = 38] = \"InsertColumn\", E[E.DeleteRow = 39] = \"DeleteRow\", E[E.DeleteColumn = 40] = \"DeleteColumn\", E[E.EditExtraObject = 41] = \"EditExtraObject\", E[E.Delete = 42] = \"Delete\", E[E.RecoverHistory = 43] = \"RecoverHistory\", E[E.ViewHistory = 44] = \"ViewHistory\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))($a6ab01cd18fda354$var$P || {}), $a6ab01cd18fda354$export$31f289fd4edee7cf = /* @__PURE__ */ ((E)=>(E[E.Unkonwn = 0] = \"Unkonwn\", E[E.Workbook = 1] = \"Workbook\", E[E.Worksheet = 2] = \"Worksheet\", E[E.SelectRange = 3] = \"SelectRange\", E[E.Document = 4] = \"Document\", E[E.Slide = 5] = \"Slide\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))($a6ab01cd18fda354$export$31f289fd4edee7cf || {});\nconst $a6ab01cd18fda354$var$_WorksheetCopyPermission = class _WorksheetCopyPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Copy);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Copy}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetCopyPermission, \"WorksheetCopyPermission\");\nlet $a6ab01cd18fda354$export$dcca5189dd6ecd0d = $a6ab01cd18fda354$var$_WorksheetCopyPermission;\nconst $a6ab01cd18fda354$var$_WorksheetSelectProtectedCellsPermission = class _WorksheetSelectProtectedCellsPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SelectProtectedCells);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SelectProtectedCells}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSelectProtectedCellsPermission, \"WorksheetSelectProtectedCellsPermission\");\nlet $a6ab01cd18fda354$export$2b47c80b4e77981b = $a6ab01cd18fda354$var$_WorksheetSelectProtectedCellsPermission;\nconst $a6ab01cd18fda354$var$_WorksheetSelectUnProtectedCellsPermission = class _WorksheetSelectUnProtectedCellsPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SelectUnProtectedCells);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SelectUnProtectedCells}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSelectUnProtectedCellsPermission, \"WorksheetSelectUnProtectedCellsPermission\");\nlet $a6ab01cd18fda354$export$f26bd19553175665 = $a6ab01cd18fda354$var$_WorksheetSelectUnProtectedCellsPermission;\nconst $a6ab01cd18fda354$var$_WorksheetSetCellStylePermission = class _WorksheetSetCellStylePermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SetCellStyle);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SetCellStyle}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSetCellStylePermission, \"WorksheetSetCellStylePermission\");\nlet $a6ab01cd18fda354$export$697f71110b473051 = $a6ab01cd18fda354$var$_WorksheetSetCellStylePermission;\nconst $a6ab01cd18fda354$var$_WorksheetSetCellValuePermission = class _WorksheetSetCellValuePermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SetCellValue);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SetCellValue}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSetCellValuePermission, \"WorksheetSetCellValuePermission\");\nlet $a6ab01cd18fda354$export$62237981a6ddf9bf = $a6ab01cd18fda354$var$_WorksheetSetCellValuePermission;\nconst $a6ab01cd18fda354$var$_WorksheetViewPermission = class _WorksheetViewPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.View);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.View}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetViewPermission, \"WorksheetViewPermission\");\nlet $a6ab01cd18fda354$export$4c018ba9f520a234 = $a6ab01cd18fda354$var$_WorksheetViewPermission;\nconst $a6ab01cd18fda354$var$_WorksheetSetRowStylePermission = class _WorksheetSetRowStylePermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SetRowStyle);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SetRowStyle}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSetRowStylePermission, \"WorksheetSetRowStylePermission\");\nlet $a6ab01cd18fda354$export$bfa2be4307a4639 = $a6ab01cd18fda354$var$_WorksheetSetRowStylePermission;\nconst $a6ab01cd18fda354$var$_WorksheetSetColumnStylePermission = class _WorksheetSetColumnStylePermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.SetColumnStyle);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.SetColumnStyle}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSetColumnStylePermission, \"WorksheetSetColumnStylePermission\");\nlet $a6ab01cd18fda354$export$b0be44a318a01991 = $a6ab01cd18fda354$var$_WorksheetSetColumnStylePermission;\nconst $a6ab01cd18fda354$var$_WorksheetInsertRowPermission = class _WorksheetInsertRowPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.InsertRow);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.InsertRow}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetInsertRowPermission, \"WorksheetInsertRowPermission\");\nlet $a6ab01cd18fda354$export$eede24696cb63f83 = $a6ab01cd18fda354$var$_WorksheetInsertRowPermission;\nconst $a6ab01cd18fda354$var$_WorksheetInsertColumnPermission = class _WorksheetInsertColumnPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.InsertColumn);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.InsertColumn}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetInsertColumnPermission, \"WorksheetInsertColumnPermission\");\nlet $a6ab01cd18fda354$export$2fc68d49285b9fd8 = $a6ab01cd18fda354$var$_WorksheetInsertColumnPermission;\nconst $a6ab01cd18fda354$var$_WorksheetInsertHyperlinkPermission = class _WorksheetInsertHyperlinkPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.InsertHyperlink);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.InsertHyperlink}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetInsertHyperlinkPermission, \"WorksheetInsertHyperlinkPermission\");\nlet $a6ab01cd18fda354$export$fbfad14902d4c5bc = $a6ab01cd18fda354$var$_WorksheetInsertHyperlinkPermission;\nconst $a6ab01cd18fda354$var$_WorksheetDeleteRowPermission = class _WorksheetDeleteRowPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.DeleteRow);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.DeleteRow}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetDeleteRowPermission, \"WorksheetDeleteRowPermission\");\nlet $a6ab01cd18fda354$export$2994e7444a54b0e0 = $a6ab01cd18fda354$var$_WorksheetDeleteRowPermission;\nconst $a6ab01cd18fda354$var$_WorksheetDeleteColumnPermission = class _WorksheetDeleteColumnPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.DeleteColumn);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.DeleteColumn}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetDeleteColumnPermission, \"WorksheetDeleteColumnPermission\");\nlet $a6ab01cd18fda354$export$85c23d61fb055e0b = $a6ab01cd18fda354$var$_WorksheetDeleteColumnPermission;\nconst $a6ab01cd18fda354$var$_WorksheetSortPermission = class _WorksheetSortPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Sort);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Sort}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetSortPermission, \"WorksheetSortPermission\");\nlet $a6ab01cd18fda354$export$ccf49d95862c51c = $a6ab01cd18fda354$var$_WorksheetSortPermission;\nconst $a6ab01cd18fda354$var$_WorksheetFilterPermission = class _WorksheetFilterPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Filter);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Filter}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetFilterPermission, \"WorksheetFilterPermission\");\nlet $a6ab01cd18fda354$export$a0d4889d2ebb3dda = $a6ab01cd18fda354$var$_WorksheetFilterPermission;\nconst $a6ab01cd18fda354$var$_WorksheetPivotTablePermission = class _WorksheetPivotTablePermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.PivotTable);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.PivotTable}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetPivotTablePermission, \"WorksheetPivotTablePermission\");\nlet $a6ab01cd18fda354$export$363b0724d405f30c = $a6ab01cd18fda354$var$_WorksheetPivotTablePermission;\nconst $a6ab01cd18fda354$var$_WorksheetEditExtraObjectPermission = class _WorksheetEditExtraObjectPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.EditExtraObject);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.EditExtraObject}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetEditExtraObjectPermission, \"WorksheetEditExtraObjectPermission\");\nlet $a6ab01cd18fda354$export$a71e1724e4a317c = $a6ab01cd18fda354$var$_WorksheetEditExtraObjectPermission;\nconst $a6ab01cd18fda354$var$_WorksheetManageCollaboratorPermission = class _WorksheetManageCollaboratorPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.ManageCollaborator);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.ManageCollaborator}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetManageCollaboratorPermission, \"WorksheetManageCollaboratorPermission\");\nlet $a6ab01cd18fda354$export$f2ea970242c4a176 = $a6ab01cd18fda354$var$_WorksheetManageCollaboratorPermission;\nconst $a6ab01cd18fda354$var$_WorksheetEditPermission = class _WorksheetEditPermission {\n    constructor(unitId, subUnitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Worksheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Edit);\n        this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Edit}_${unitId}_${subUnitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorksheetEditPermission, \"WorksheetEditPermission\");\nlet $a6ab01cd18fda354$export$d9c4797b23318374 = $a6ab01cd18fda354$var$_WorksheetEditPermission;\nconst $a6ab01cd18fda354$var$_WorkbookCommentPermission = class _WorkbookCommentPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Comment);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Comment}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookCommentPermission, \"WorkbookCommentPermission\");\nlet $a6ab01cd18fda354$export$e954801e3efd9751 = $a6ab01cd18fda354$var$_WorkbookCommentPermission;\nconst $a6ab01cd18fda354$var$_WorkbookEditablePermission = class _WorkbookEditablePermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Edit);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Edit}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookEditablePermission, \"WorkbookEditablePermission\");\nlet $a6ab01cd18fda354$export$f9b2f3564b55cfea = $a6ab01cd18fda354$var$_WorkbookEditablePermission;\nconst $a6ab01cd18fda354$var$_WorkbookDuplicatePermission = class _WorkbookDuplicatePermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Duplicate);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Duplicate}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookDuplicatePermission, \"WorkbookDuplicatePermission\");\nlet $a6ab01cd18fda354$export$d15f9d533030e94 = $a6ab01cd18fda354$var$_WorkbookDuplicatePermission;\nconst $a6ab01cd18fda354$var$_WorkbookPrintPermission = class _WorkbookPrintPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Print);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Print}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookPrintPermission, \"WorkbookPrintPermission\");\nlet $a6ab01cd18fda354$export$43e77b32507eab8a = $a6ab01cd18fda354$var$_WorkbookPrintPermission;\nconst $a6ab01cd18fda354$var$_WorkbookExportPermission = class _WorkbookExportPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Export);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Export}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookExportPermission, \"WorkbookExportPermission\");\nlet $a6ab01cd18fda354$export$caea44377896d45b = $a6ab01cd18fda354$var$_WorkbookExportPermission;\nconst $a6ab01cd18fda354$var$_WorkbookMoveSheetPermission = class _WorkbookMoveSheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.MoveSheet);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.MoveSheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookMoveSheetPermission, \"WorkbookMoveSheetPermission\");\nlet $a6ab01cd18fda354$export$1d2b8eef79a2c4b3 = $a6ab01cd18fda354$var$_WorkbookMoveSheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookDeleteSheetPermission = class _WorkbookDeleteSheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.DeleteSheet);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.DeleteSheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookDeleteSheetPermission, \"WorkbookDeleteSheetPermission\");\nlet $a6ab01cd18fda354$export$fc69a7d19430eba1 = $a6ab01cd18fda354$var$_WorkbookDeleteSheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookHideSheetPermission = class _WorkbookHideSheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.HideSheet);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.HideSheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookHideSheetPermission, \"WorkbookHideSheetPermission\");\nlet $a6ab01cd18fda354$export$6598f0c4b2045039 = $a6ab01cd18fda354$var$_WorkbookHideSheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookRenameSheetPermission = class _WorkbookRenameSheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.RenameSheet);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.RenameSheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookRenameSheetPermission, \"WorkbookRenameSheetPermission\");\nlet $a6ab01cd18fda354$export$59ee3b0f12f751e0 = $a6ab01cd18fda354$var$_WorkbookRenameSheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookCreateSheetPermission = class _WorkbookCreateSheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.CreateSheet);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.CreateSheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookCreateSheetPermission, \"WorkbookCreateSheetPermission\");\nlet $a6ab01cd18fda354$export$d9e9375ef577608a = $a6ab01cd18fda354$var$_WorkbookCreateSheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookHistoryPermission = class _WorkbookHistoryPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.History);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.History}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookHistoryPermission, \"WorkbookHistoryPermission\");\nlet $a6ab01cd18fda354$export$9a3aa6fa9e4a81cd = $a6ab01cd18fda354$var$_WorkbookHistoryPermission;\nconst $a6ab01cd18fda354$var$_WorkbookViewPermission = class _WorkbookViewPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.View);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.View}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookViewPermission, \"WorkbookViewPermission\");\nlet $a6ab01cd18fda354$export$e4dfc7ee612de8ae = $a6ab01cd18fda354$var$_WorkbookViewPermission;\nconst $a6ab01cd18fda354$var$_WorkbookSharePermission = class _WorkbookSharePermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Share);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Share}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookSharePermission, \"WorkbookSharePermission\");\nlet $a6ab01cd18fda354$export$41977b635cb41e8 = $a6ab01cd18fda354$var$_WorkbookSharePermission;\nconst $a6ab01cd18fda354$var$_WorkbookCopyPermission = class _WorkbookCopyPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Copy);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.Copy}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookCopyPermission, \"WorkbookCopyPermission\");\nlet $a6ab01cd18fda354$export$5f9719a2213742db = $a6ab01cd18fda354$var$_WorkbookCopyPermission;\nconst $a6ab01cd18fda354$var$_WorkbookCopySheetPermission = class _WorkbookCopySheetPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.CopySheet);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.CopySheet}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookCopySheetPermission, \"WorkbookCopySheetPermission\");\nlet $a6ab01cd18fda354$export$28b6cce327843522 = $a6ab01cd18fda354$var$_WorkbookCopySheetPermission;\nconst $a6ab01cd18fda354$var$_WorkbookManageCollaboratorPermission = class _WorkbookManageCollaboratorPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.ManageCollaborator);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.ManageCollaborator}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookManageCollaboratorPermission, \"WorkbookManageCollaboratorPermission\");\nlet $a6ab01cd18fda354$export$633ee836a7adfb56 = $a6ab01cd18fda354$var$_WorkbookManageCollaboratorPermission;\nconst $a6ab01cd18fda354$var$_WorkbookViewHistoryPermission = class _WorkbookViewHistoryPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.ViewHistory);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.ViewHistory}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookViewHistoryPermission, \"WorkbookViewHistoryPermission\");\nlet $a6ab01cd18fda354$export$cf10336f63bb5b3e = $a6ab01cd18fda354$var$_WorkbookViewHistoryPermission;\nconst $a6ab01cd18fda354$var$_WorkbookRecoverHistoryPermission = class _WorkbookRecoverHistoryPermission {\n    constructor(unitId){\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.Workbook);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.RecoverHistory);\n        this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${$a6ab01cd18fda354$var$P.RecoverHistory}_${unitId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WorkbookRecoverHistoryPermission, \"WorkbookRecoverHistoryPermission\");\nlet $a6ab01cd18fda354$export$747f182153c2d1a2 = $a6ab01cd18fda354$var$_WorkbookRecoverHistoryPermission;\nconst $a6ab01cd18fda354$var$_RangeProtectionPermissionEditPoint = class _RangeProtectionPermissionEditPoint {\n    constructor(unitId, subUnitId, permissionId){\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.Edit);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"unitId\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subUnitId\");\n        $a6ab01cd18fda354$var$__publicField(this, \"permissionId\");\n        this.unitId = unitId, this.subUnitId = subUnitId, this.permissionId = permissionId, this.id = `${$a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange}.${$a6ab01cd18fda354$var$P.Edit}.${permissionId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_RangeProtectionPermissionEditPoint, \"RangeProtectionPermissionEditPoint\");\nlet $a6ab01cd18fda354$export$71b84bcd22831dcf = $a6ab01cd18fda354$var$_RangeProtectionPermissionEditPoint;\nconst $a6ab01cd18fda354$var$_RangeProtectionPermissionViewPoint = class _RangeProtectionPermissionViewPoint {\n    constructor(unitId, subUnitId, permissionId){\n        $a6ab01cd18fda354$var$__publicField(this, \"type\", $a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange);\n        $a6ab01cd18fda354$var$__publicField(this, \"subType\", $a6ab01cd18fda354$var$P.View);\n        $a6ab01cd18fda354$var$__publicField(this, \"status\", (0, $7yNYd.PermissionStatus).INIT);\n        $a6ab01cd18fda354$var$__publicField(this, \"value\", !0);\n        $a6ab01cd18fda354$var$__publicField(this, \"id\");\n        $a6ab01cd18fda354$var$__publicField(this, \"unitId\");\n        $a6ab01cd18fda354$var$__publicField(this, \"subUnitId\");\n        $a6ab01cd18fda354$var$__publicField(this, \"permissionId\");\n        this.unitId = unitId, this.subUnitId = subUnitId, this.permissionId = permissionId, this.id = `${$a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange}.${$a6ab01cd18fda354$var$P.View}.${permissionId}`;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_RangeProtectionPermissionViewPoint, \"RangeProtectionPermissionViewPoint\");\nlet $a6ab01cd18fda354$export$3e56ea536ebb655d = $a6ab01cd18fda354$var$_RangeProtectionPermissionViewPoint;\nconst $a6ab01cd18fda354$export$695df81ccb7da4eb = {\n    id: \"sheet.command.set-range-values\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), permissionService = accessor.get((0, $7yNYd.IPermissionService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, {\n            subUnitId: params.subUnitId,\n            unitId: params.unitId\n        });\n        if (!target) return !1;\n        const { subUnitId: subUnitId, unitId: unitId } = target, { value: value, range: range } = params, currentSelections = range ? [\n            range\n        ] : (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!currentSelections || !currentSelections.length || !permissionService.getPermissionPoint(new $a6ab01cd18fda354$export$d9c4797b23318374(unitId, subUnitId).id)) return !1;\n        const cellValue = new (0, $7yNYd.ObjectMatrix)();\n        let realCellValue;\n        if ((0, $7yNYd.Tools).isArray(value)) for(let i = 0; i < currentSelections.length; i++){\n            const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = currentSelections[i];\n            for(let r = 0; r <= endRow - startRow; r++)for(let c = 0; c <= endColumn - startColumn; c++)cellValue.setValue(r + startRow, c + startColumn, value[r][c]);\n        }\n        else if ((0, $7yNYd.isICellData)(value)) for(let i = 0; i < currentSelections.length; i++){\n            const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = currentSelections[i];\n            for(let r = startRow; r <= endRow; r++)for(let c = startColumn; c <= endColumn; c++)cellValue.setValue(r, c, value);\n        }\n        else realCellValue = value;\n        const setRangeValuesMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: realCellValue != null ? realCellValue : cellValue.getMatrix()\n        }, undoSetRangeValuesMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, setRangeValuesMutationParams), setValueMutationResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$ce2b970bc67fd9bc.id, setRangeValuesMutationParams), { undos: undos, redos: redos } = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$695df81ccb7da4eb.id,\n            params: {\n                ...setRangeValuesMutationParams,\n                range: currentSelections\n            }\n        }), result = (0, $7yNYd.sequenceExecute)([\n            ...redos\n        ], commandService);\n        return setValueMutationResult && result.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: undoSetRangeValuesMutationParams\n                },\n                ...undos\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: setRangeValuesMutationParams\n                },\n                ...redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$674c6acc9012e72b(accessor, params) {\n    const redo = [], undo = [], { unitId: unitId, subUnitId: subUnitId, range: range, shiftDimension: shiftDimension, cellValue: cellValue = {} } = params, instanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = instanceService.getUniverSheetInstance(unitId), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n    if (worksheet) {\n        const cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange();\n        if (range.startColumn <= dataRange.endColumn || range.startRow <= dataRange.endRow) {\n            let moveFromRange, moveToRange;\n            if (shiftDimension === (0, $7yNYd.Dimension).COLUMNS) {\n                const endRow = Math.min(range.endRow, dataRange.endRow);\n                let endColumn = 0;\n                for(let row = range.startRow; row <= endRow; row++){\n                    const rowData = cellMatrix.getRow(row), rowLength = rowData ? (0, $7yNYd.getArrayLength)(rowData) - 1 : 0;\n                    endColumn = Math.max(endColumn, rowLength);\n                }\n                moveFromRange = {\n                    startRow: range.startRow,\n                    startColumn: range.startColumn,\n                    endRow: endRow,\n                    endColumn: endColumn\n                };\n                const shift = range.endColumn - range.startColumn + 1;\n                moveToRange = {\n                    startRow: range.startRow,\n                    startColumn: moveFromRange.startColumn + shift,\n                    endRow: endRow,\n                    endColumn: moveFromRange.endColumn + shift\n                };\n            } else {\n                const endColumn = Math.min(range.endColumn, dataRange.endColumn), endRow = dataRange.endRow;\n                moveFromRange = {\n                    startRow: range.startRow,\n                    startColumn: range.startColumn,\n                    endRow: endRow,\n                    endColumn: endColumn\n                };\n                const shift = range.endRow - range.startRow + 1;\n                moveToRange = {\n                    startRow: moveFromRange.startRow + shift,\n                    startColumn: range.startColumn,\n                    endRow: moveFromRange.endRow + shift,\n                    endColumn: endColumn\n                };\n            }\n            const moveRangeMutations = $a6ab01cd18fda354$export$f32df911e9cdbdd0(accessor, {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                range: moveFromRange\n            }, {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                range: moveToRange\n            }, !0);\n            moveRangeMutations && (redo.push(...moveRangeMutations.redos), undo.push(...moveRangeMutations.undos));\n        }\n        if (Object.entries(cellValue).length === 0) for(let row = range.startRow; row <= range.endRow; row++){\n            cellValue[row] || (cellValue[row] = {});\n            for(let column = range.startColumn; column <= range.endColumn; column++)cellValue[row][column] = null;\n        }\n        const setRangeValuesMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: cellValue\n        }, undoSetRangeValuesMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, setRangeValuesMutationParams), { undos: interceptorUndos, redos: interceptorRedos } = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$695df81ccb7da4eb.id,\n            params: {\n                ...setRangeValuesMutationParams,\n                range: range\n            }\n        });\n        redo.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: setRangeValuesMutationParams\n        }, ...interceptorRedos), undo.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: undoSetRangeValuesMutationParams\n        }, ...interceptorUndos);\n    }\n    return {\n        redo: redo,\n        undo: undo\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$674c6acc9012e72b, \"getInsertRangeMutations\");\nfunction $a6ab01cd18fda354$export$c489da2cdb7bdf82(accessor, params) {\n    const redo = [], undo = [], { unitId: unitId, subUnitId: subUnitId, range: range, shiftDimension: shiftDimension } = params, instanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = instanceService.getUniverSheetInstance(unitId), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n    if (worksheet) {\n        const cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), setRangeValuesMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: $a6ab01cd18fda354$export$125e36a5e3690dd2([\n                range\n            ])\n        }, undoSetRangeValuesMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, setRangeValuesMutationParams), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$695df81ccb7da4eb.id,\n            params: setRangeValuesMutationParams\n        });\n        if (redo.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: setRangeValuesMutationParams\n        }, ...intercepted.redos), undo.push(...intercepted.undos, {\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: undoSetRangeValuesMutationParams\n        }), range.startColumn <= dataRange.endColumn || range.startRow <= dataRange.endRow) {\n            let moveFromRange = null, moveToRange = null;\n            if (shiftDimension === (0, $7yNYd.Dimension).COLUMNS && range.endColumn < dataRange.endColumn) {\n                const endRow = Math.min(range.endRow, dataRange.endRow);\n                let endColumn = 0;\n                for(let row = range.startRow; row <= endRow; row++){\n                    const rowData = cellMatrix.getRow(row), rowLength = rowData ? (0, $7yNYd.getArrayLength)(rowData) - 1 : 0;\n                    endColumn = Math.max(endColumn, rowLength);\n                }\n                moveFromRange = {\n                    startRow: range.startRow,\n                    startColumn: range.endColumn + 1,\n                    endRow: endRow,\n                    endColumn: endColumn\n                };\n                const shift = range.endColumn - range.startColumn + 1;\n                moveToRange = {\n                    startRow: range.startRow,\n                    startColumn: moveFromRange.startColumn - shift,\n                    endRow: endRow,\n                    endColumn: moveFromRange.endColumn - shift\n                };\n            }\n            if (shiftDimension === (0, $7yNYd.Dimension).ROWS && range.endRow < dataRange.endRow) {\n                const endColumn = Math.min(range.endColumn, dataRange.endColumn), endRow = dataRange.endRow;\n                moveFromRange = {\n                    startRow: range.endRow + 1,\n                    startColumn: range.startColumn,\n                    endRow: endRow,\n                    endColumn: endColumn\n                };\n                const shift = range.endRow - range.startRow + 1;\n                moveToRange = {\n                    startRow: moveFromRange.startRow - shift,\n                    startColumn: range.startColumn,\n                    endRow: moveFromRange.endRow - shift,\n                    endColumn: endColumn\n                };\n            }\n            if (moveFromRange && moveToRange) {\n                const moveRangeMutations = $a6ab01cd18fda354$export$f32df911e9cdbdd0(accessor, {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    range: moveFromRange\n                }, {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    range: moveToRange\n                }, !0);\n                moveRangeMutations && (redo.push(...moveRangeMutations.redos), undo.push(...moveRangeMutations.undos));\n            }\n        }\n    }\n    return {\n        redo: redo,\n        undo: undo\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$c489da2cdb7bdf82, \"getRemoveRangeMutations\");\nfunction $a6ab01cd18fda354$export$af982cf74a8f81a1(cellMatrix, range, lastEndRow, lastEndColumn, shiftDimension, cellValue) {\n    const { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range;\n    if (shiftDimension === (0, $7yNYd.Dimension).ROWS) {\n        const rows = endRow - startRow + 1;\n        for(let r = lastEndRow; r >= startRow; r--)for(let c = startColumn; c <= endColumn; c++){\n            const value = cellMatrix.getValue(r, c);\n            value == null ? cellMatrix.realDeleteValue(r + rows, c) : cellMatrix.setValue(r + rows, c, value);\n        }\n        for(let r = endRow; r >= startRow; r--)for(let c = startColumn; c <= endColumn; c++)cellValue && cellValue[r] && cellValue[r][c] ? cellMatrix.setValue(r, c, cellValue[r][c]) : cellMatrix.realDeleteValue(r, c);\n    } else if (shiftDimension === (0, $7yNYd.Dimension).COLUMNS) {\n        const columns = endColumn - startColumn + 1;\n        for(let r = startRow; r <= endRow; r++)for(let c = lastEndColumn; c >= startColumn; c--){\n            const value = cellMatrix.getValue(r, c);\n            value == null ? cellMatrix.realDeleteValue(r, c + columns) : cellMatrix.setValue(r, c + columns, value);\n        }\n        for(let r = startRow; r <= endRow; r++)for(let c = endColumn; c >= startColumn; c--)cellValue && cellValue[r] && cellValue[r][c] ? cellMatrix.setValue(r, c, cellValue[r][c]) : cellMatrix.realDeleteValue(r, c);\n    }\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$af982cf74a8f81a1, \"handleInsertRangeMutation\");\nfunction $a6ab01cd18fda354$export$ad31c3830d3791f3(cellMatrix, range, lastEndRow, lastEndColumn, shiftDimension) {\n    const { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range, rows = endRow - startRow + 1, columns = endColumn - startColumn + 1;\n    if (shiftDimension === (0, $7yNYd.Dimension).ROWS) for(let r = startRow; r <= lastEndRow; r++)for(let c = startColumn; c <= endColumn; c++){\n        const value = cellMatrix.getValue(r + rows, c);\n        value == null ? cellMatrix.realDeleteValue(r, c) : cellMatrix.setValue(r, c, value);\n    }\n    else if (shiftDimension === (0, $7yNYd.Dimension).COLUMNS) for(let r = startRow; r <= endRow; r++)for(let c = startColumn; c <= lastEndColumn; c++){\n        const value = cellMatrix.getValue(r, c + columns);\n        value == null ? cellMatrix.realDeleteValue(r, c) : cellMatrix.setValue(r, c, value);\n    }\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$ad31c3830d3791f3, \"handleDeleteRangeMutation\");\nconst $a6ab01cd18fda354$var$DeleteRangeMoveLeftCommandId = \"sheet.command.delete-range-move-left\", $a6ab01cd18fda354$export$40e354a17cc79f7f = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$DeleteRangeMoveLeftCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { worksheet: worksheet, workbook: workbook, subUnitId: subUnitId, unitId: unitId } = target;\n        let range = params == null ? void 0 : params.range;\n        if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n        const deleteRangeMutationParams = {\n            range: range,\n            subUnitId: subUnitId,\n            unitId: unitId,\n            shiftDimension: (0, $7yNYd.Dimension).COLUMNS\n        }, sheetInterceptor = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$40e354a17cc79f7f.id,\n            params: {\n                range: range\n            }\n        }), { redo: removeRangeRedo, undo: removeRangeUndo } = $a6ab01cd18fda354$export$c489da2cdb7bdf82(accessor, deleteRangeMutationParams), redos = [\n            ...(_b = sheetInterceptor.preRedos) != null ? _b : [],\n            ...removeRangeRedo\n        ], undos = [\n            ...sheetInterceptor.undos,\n            ...removeRangeUndo\n        ];\n        return redos.push(...sheetInterceptor.redos), redos.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undos.push(...(_c = sheetInterceptor.preUndos) != null ? _c : []), (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos.reverse(),\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$DeleteRangeMoveUpCommandId = \"sheet.command.delete-range-move-up\", $a6ab01cd18fda354$export$d3997a5569b0810f = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$DeleteRangeMoveUpCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, workbook: workbook, worksheet: worksheet } = target;\n        let range = params == null ? void 0 : params.range;\n        if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n        const deleteRangeMutationParams = {\n            range: range,\n            subUnitId: subUnitId,\n            unitId: unitId,\n            shiftDimension: (0, $7yNYd.Dimension).ROWS\n        }, sheetInterceptor = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$d3997a5569b0810f.id,\n            params: {\n                range: range\n            }\n        }), { redo: removeRangeRedo, undo: removeRangeUndo } = $a6ab01cd18fda354$export$c489da2cdb7bdf82(accessor, deleteRangeMutationParams), redos = [\n            ...(_b = sheetInterceptor.preRedos) != null ? _b : [],\n            ...removeRangeRedo\n        ], undos = [\n            ...sheetInterceptor.undos,\n            ...removeRangeUndo\n        ];\n        return redos.push(...sheetInterceptor.redos), redos.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undos.push(...(_c = sheetInterceptor.preUndos) != null ? _c : []), (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos.reverse(),\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$592ddab41edb4587 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        range: params.range\n    };\n}, \"InsertRowMutationUndoFactory\"), $a6ab01cd18fda354$export$823dff2590c7c5ff = {\n    id: \"sheet.mutation.insert-row\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const { unitId: unitId, subUnitId: subUnitId, range: range, rowInfo: rowInfo } = params, universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(subUnitId);\n        if (worksheet == null) throw new Error(\"worksheet is null error!\");\n        const rowWrapper = worksheet.getRowManager().getRowData(), defaultRowInfo = {\n            h: worksheet.getConfig().defaultRowHeight,\n            hd: 0\n        }, rowIndex = range.startRow, rowCount = range.endRow - range.startRow + 1;\n        for(let j = rowIndex; j < rowIndex + rowCount; j++)rowInfo ? (0, $7yNYd.insertMatrixArray)(j, (_a20 = rowInfo[j - range.startRow]) != null ? _a20 : defaultRowInfo, rowWrapper) : (0, $7yNYd.insertMatrixArray)(j, defaultRowInfo, rowWrapper);\n        return worksheet.setRowCount(worksheet.getRowCount() + range.endRow - range.startRow + 1), worksheet.getCellMatrix().insertRows(range.startRow, rowCount), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$87756881d16abcd = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        range: params.range\n    };\n}, \"InsertColMutationUndoFactory\"), $a6ab01cd18fda354$export$2e1cbe0a40f11cd4 = {\n    id: \"sheet.mutation.insert-col\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const manager = worksheet.getColumnManager(), { range: range, colInfo: colInfo } = params, columnWrapper = manager.getColumnData(), colIndex = range.startColumn, colCount = range.endColumn - range.startColumn + 1, defaultColWidth = worksheet.getConfig().defaultColumnWidth;\n        for(let j = colIndex; j < colIndex + colCount; j++){\n            const defaultColInfo = {\n                w: defaultColWidth,\n                hd: 0\n            };\n            colInfo ? (0, $7yNYd.insertMatrixArray)(j, (_a20 = colInfo[j - range.startColumn]) != null ? _a20 : defaultColInfo, columnWrapper) : (0, $7yNYd.insertMatrixArray)(j, defaultColInfo, columnWrapper);\n        }\n        return worksheet.setColumnCount(worksheet.getColumnCount() + range.endColumn - range.startColumn + 1), worksheet.getCellMatrix().insertColumns(range.startColumn, colCount), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$RemoveRowsUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, worksheet)=>{\n    const rowWrapper = worksheet.getRowManager().getRowData(), rowInfo = {}, range = params.range, slice = (0, $7yNYd.sliceMatrixArray)(range.startRow, range.endRow, rowWrapper), _rowInfo = (0, $7yNYd.concatMatrixArray)(rowInfo, slice);\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        range: params.range,\n        rowInfo: _rowInfo\n    };\n}, \"RemoveRowsUndoMutationFactory\"), $a6ab01cd18fda354$export$9642f6b705de590b = {\n    id: \"sheet.mutation.remove-rows\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const range = params.range, rowPrimitive = worksheet.getRowManager().getRowData();\n        for(let i = range.startRow; i <= range.endRow; i++)worksheet.getRowFiltered(i);\n        const rowCount = range.endRow - range.startRow + 1;\n        return (0, $7yNYd.spliceArray)(range.startRow, rowCount, rowPrimitive), worksheet.getCellMatrix().removeRows(range.startRow, rowCount), worksheet.setRowCount(worksheet.getRowCount() - rowCount), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$RemoveColMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n    if (universheet == null) throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (worksheet == null) throw new Error(\"worksheet is null error!\");\n    const columnWrapper = worksheet.getColumnManager().getColumnData(), colInfo = {}, range = params.range, slice = (0, $7yNYd.sliceMatrixArray)(range.startColumn, range.endColumn, columnWrapper), _colInfo = (0, $7yNYd.concatMatrixArray)(colInfo, slice);\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        range: params.range,\n        colInfo: _colInfo\n    };\n}, \"RemoveColMutationFactory\"), $a6ab01cd18fda354$export$1b784c21f081e76a = {\n    id: \"sheet.mutation.remove-col\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const range = params.range, colPrimitive = worksheet.getColumnManager().getColumnData(), colCount = range.endColumn - range.startColumn + 1;\n        return (0, $7yNYd.spliceArray)(range.startColumn, colCount, colPrimitive), worksheet.setColumnCount(worksheet.getColumnCount() - colCount), worksheet.getCellMatrix().removeColumns(range.startColumn, colCount), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$InsertRangeMoveDownCommandId = \"sheet.command.insert-range-move-down\", $a6ab01cd18fda354$export$41564dd5272a2ef3 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.insert-range-move-down\",\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService));\n        if (selectionManagerService.isOverlapping()) return errorService.emit(localeService.t(\"sheets.info.overlappingSelections\")), !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet, workbook: workbook } = target;\n        let range = params == null ? void 0 : params.range;\n        if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n        const redoMutations = [], undoMutations = [], cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), sliceMaxRow = cellMatrix.getSlice(dataRange.startRow, dataRange.endRow, range.startColumn, range.endColumn).getDataRange().endRow, insertRowCount = Math.max(sliceMaxRow + (range.endRow - range.startRow + 1) - dataRange.endRow, 0);\n        if (insertRowCount > 0) {\n            const anchorRow = range.startRow - 1, height = worksheet.getRowHeight(anchorRow), insertRowParams = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                range: {\n                    startRow: dataRange.endRow + 1,\n                    endRow: dataRange.endRow + insertRowCount,\n                    startColumn: dataRange.startColumn,\n                    endColumn: dataRange.endColumn\n                },\n                rowInfo: new Array(insertRowCount).fill(void 0).map(()=>({\n                        h: height,\n                        hd: (0, $7yNYd.BooleanNumber).FALSE\n                    }))\n            };\n            redoMutations.push({\n                id: $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n                params: insertRowParams\n            });\n            const undoRowInsertionParams = $a6ab01cd18fda354$export$592ddab41edb4587(accessor, insertRowParams);\n            undoMutations.push({\n                id: $a6ab01cd18fda354$export$9642f6b705de590b.id,\n                params: undoRowInsertionParams\n            });\n        }\n        const cellValue = {};\n        (0, $7yNYd.Range).foreach(range, (row, col)=>{\n            const cell = worksheet.getCell(row, col);\n            cell && (cellValue[row] || (cellValue[row] = {}), cellValue[row][col] = {\n                s: cell.s\n            });\n        });\n        const insertRangeMutationParams = {\n            range: range,\n            subUnitId: subUnitId,\n            unitId: unitId,\n            shiftDimension: (0, $7yNYd.Dimension).ROWS,\n            cellValue: cellValue\n        }, { redo: insertRangeRedo, undo: insertRangeUndo } = $a6ab01cd18fda354$export$674c6acc9012e72b(accessor, insertRangeMutationParams);\n        redoMutations.push(...insertRangeRedo), undoMutations.push(...insertRangeUndo);\n        const sheetInterceptor = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$41564dd5272a2ef3.id,\n            params: {\n                range: range\n            }\n        });\n        return redoMutations.push(...sheetInterceptor.redos), redoMutations.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undoMutations.push(...(_b = sheetInterceptor.preUndos) != null ? _b : []), redoMutations.unshift(...(_c = sheetInterceptor.preRedos) != null ? _c : []), undoMutations.unshift(...sheetInterceptor.undos), (0, $7yNYd.sequenceExecute)(redoMutations, commandService) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undoMutations.reverse(),\n            redoMutations: redoMutations\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$InsertRangeMoveRightCommandId = \"sheet.command.insert-range-move-right\", $a6ab01cd18fda354$export$732636db5bcc0e5f = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$InsertRangeMoveRightCommandId,\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService));\n        if (selectionManagerService.isOverlapping()) return errorService.emit(localeService.t(\"sheets.info.overlappingSelections\")), !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target;\n        let range = params == null ? void 0 : params.range;\n        if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n        const redoMutations = [], undoMutations = [], cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), sliceMaxCol = cellMatrix.getSlice(range.startRow, range.endRow, dataRange.startColumn, dataRange.endColumn).getDataRange().endColumn, insertColCount = Math.max(sliceMaxCol + (range.endColumn - range.startColumn + 1) - dataRange.endColumn, 0);\n        if (insertColCount > 0) {\n            const anchorCol = range.startColumn - 1, width = worksheet.getColumnWidth(anchorCol), insertColParams = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                range: {\n                    startRow: dataRange.startRow + 1,\n                    endRow: dataRange.endRow,\n                    startColumn: dataRange.endColumn + 1,\n                    endColumn: dataRange.endColumn + insertColCount\n                },\n                colInfo: new Array(insertColCount).fill(void 0).map(()=>({\n                        w: width,\n                        hd: (0, $7yNYd.BooleanNumber).FALSE\n                    }))\n            };\n            redoMutations.push({\n                id: $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n                params: insertColParams\n            });\n            const undoColInsertionParams = $a6ab01cd18fda354$export$87756881d16abcd(accessor, insertColParams);\n            undoMutations.push({\n                id: $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n                params: undoColInsertionParams\n            });\n        }\n        const cellValue = {};\n        (0, $7yNYd.Range).foreach(range, (row, col)=>{\n            const cell = worksheet.getCell(row, col);\n            !cell || !cell.s || (cellValue[row] || (cellValue[row] = {}), cellValue[row][col] = {\n                s: cell.s\n            });\n        });\n        const insertRangeMutationParams = {\n            range: range,\n            subUnitId: subUnitId,\n            unitId: unitId,\n            shiftDimension: (0, $7yNYd.Dimension).COLUMNS,\n            cellValue: cellValue\n        }, { redo: insertRangeRedo, undo: insertRangeUndo } = $a6ab01cd18fda354$export$674c6acc9012e72b(accessor, insertRangeMutationParams);\n        redoMutations.push(...insertRangeRedo), undoMutations.push(...insertRangeUndo);\n        const sheetInterceptor = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$732636db5bcc0e5f.id,\n            params: {\n                range: range\n            }\n        });\n        return redoMutations.push(...sheetInterceptor.redos), redoMutations.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undoMutations.push(...(_b = sheetInterceptor.preUndos) != null ? _b : []), redoMutations.unshift(...(_c = sheetInterceptor.preRedos) != null ? _c : []), undoMutations.unshift(...sheetInterceptor.undos), (0, $7yNYd.sequenceExecute)(redoMutations, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undoMutations.reverse(),\n            redoMutations: redoMutations\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$InsertRowCommandId = \"sheet.command.insert-row\", $a6ab01cd18fda354$export$59824d5e29c20d3b = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$InsertRowCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), workbook = univerInstanceService.getUniverSheetInstance(params.unitId), worksheet = workbook.getSheetBySheetId(params.subUnitId), { range: range, direction: direction, unitId: unitId, subUnitId: subUnitId, cellValue: cellValue } = params, { startRow: startRow, endRow: endRow } = range, anchorRow = direction === (0, $7yNYd.Direction).UP ? startRow : startRow - 1, height = worksheet.getRowHeight(anchorRow), insertRowParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            range: range,\n            rowInfo: new Array(endRow - startRow + 1).fill(void 0).map(()=>({\n                    h: height,\n                    hd: (0, $7yNYd.BooleanNumber).FALSE\n                }))\n        }, undoRowInsertionParams = $a6ab01cd18fda354$export$592ddab41edb4587(accessor, insertRowParams);\n        if (!await sheetInterceptorService.beforeCommandExecute({\n            id: $a6ab01cd18fda354$export$59824d5e29c20d3b.id,\n            params: insertRowParams\n        })) return !1;\n        const redos = [\n            {\n                id: $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n                params: insertRowParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$9642f6b705de590b.id,\n                params: undoRowInsertionParams\n            }\n        ];\n        cellValue && redos.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                cellValue: cellValue\n            }\n        });\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$59824d5e29c20d3b.id,\n            params: params\n        });\n        return redos.unshift(...(_a20 = intercepted.preRedos) != null ? _a20 : []), redos.push(...(_b = intercepted.redos) != null ? _b : []), redos.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undos.unshift(...(_c = intercepted.preUndos) != null ? _c : []), undos.push(...(_d = intercepted.undos) != null ? _d : []), (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: params.unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$3681714e8ba8df82 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.insert-row-before\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const selections = (_a20 = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        let range;\n        if ((selections == null ? void 0 : selections.length) === 1) range = selections[0];\n        else return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), { startRow: startRow, endRow: endRow } = range, startColumn = 0, endColumn = worksheet.getColumnCount() - 1, cellValue = $a6ab01cd18fda354$export$e08f9f7e26e9aff5(worksheet, startRow, endRow, startColumn, endColumn, !0, startRow - 1), insertRowParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            direction: (0, $7yNYd.Direction).UP,\n            range: {\n                startRow: startRow,\n                endRow: endRow,\n                startColumn: startColumn,\n                endColumn: endColumn\n            },\n            cellValue: cellValue\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$59824d5e29c20d3b.id, insertRowParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$9faff810cbea30da = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.insert-row-after\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const selections = (_a20 = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        let range;\n        if ((selections == null ? void 0 : selections.length) === 1) range = selections[0];\n        else return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), count = range.endRow - range.startRow + 1, startRow = range.endRow + 1, endRow = range.endRow + count, startColumn = 0, endColumn = worksheet.getColumnCount() - 1, cellValue = $a6ab01cd18fda354$export$e08f9f7e26e9aff5(worksheet, startRow, endRow, startColumn, endColumn, !0, range.endRow), insertRowParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            direction: (0, $7yNYd.Direction).DOWN,\n            range: {\n                startRow: startRow,\n                endRow: endRow,\n                startColumn: startColumn,\n                endColumn: endColumn,\n                rangeType: (0, $7yNYd.RANGE_TYPE).ROW\n            },\n            cellValue: cellValue\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$59824d5e29c20d3b.id, insertRowParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$InsertColCommandId = \"sheet.command.insert-col\", $a6ab01cd18fda354$export$e8353cee7bda512a = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$InsertColCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), { range: range, direction: direction, subUnitId: subUnitId, unitId: unitId, cellValue: cellValue } = params, { startColumn: startColumn, endColumn: endColumn } = params.range, workbook = univerInstanceService.getUniverSheetInstance(params.unitId), worksheet = workbook.getSheetBySheetId(params.subUnitId), anchorCol = direction === (0, $7yNYd.Direction).LEFT ? startColumn : startColumn - 1, width = worksheet.getColumnWidth(anchorCol), insertColParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            range: range,\n            colInfo: new Array(endColumn - startColumn + 1).fill(void 0).map(()=>({\n                    w: width,\n                    hd: (0, $7yNYd.BooleanNumber).FALSE\n                }))\n        }, undoColInsertionParams = $a6ab01cd18fda354$export$87756881d16abcd(accessor, insertColParams);\n        if (!await sheetInterceptorService.beforeCommandExecute({\n            id: $a6ab01cd18fda354$export$e8353cee7bda512a.id,\n            params: insertColParams\n        })) return !1;\n        const redos = [\n            {\n                id: $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n                params: insertColParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n                params: undoColInsertionParams\n            }\n        ];\n        cellValue && redos.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                cellValue: cellValue\n            }\n        });\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$e8353cee7bda512a.id,\n            params: params\n        });\n        return redos.unshift(...(_a20 = intercepted.preRedos) != null ? _a20 : []), redos.push(...(_b = intercepted.redos) != null ? _b : []), redos.push($a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)), undos.unshift(...(_c = intercepted.preUndos) != null ? _c : []), undos.push(...(_d = intercepted.undos) != null ? _d : []), (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: params.unitId,\n            undoMutations: undos.filter(Boolean),\n            redoMutations: redos.filter(Boolean)\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$7ddbe0547809d4f2 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.insert-col-before\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selections = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections();\n        let range;\n        if ((selections == null ? void 0 : selections.length) === 1) range = selections[0].range;\n        else return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), { startColumn: startColumn, endColumn: endColumn } = range, startRow = 0, endRow = worksheet.getRowCount() - 1, cellValue = $a6ab01cd18fda354$export$e08f9f7e26e9aff5(worksheet, startRow, endRow, startColumn, endColumn, !1, startColumn - 1), insertColParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            direction: (0, $7yNYd.Direction).LEFT,\n            range: {\n                startColumn: startColumn,\n                endColumn: endColumn,\n                startRow: startRow,\n                endRow: endRow,\n                rangeType: (0, $7yNYd.RANGE_TYPE).COLUMN\n            },\n            cellValue: cellValue\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$e8353cee7bda512a.id, insertColParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$3c7a525148882f97 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.insert-col-after\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selections = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections();\n        let range;\n        if ((selections == null ? void 0 : selections.length) === 1) range = selections[0].range;\n        else return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), count = range.endColumn - range.startColumn + 1, startColumn = range.endColumn + 1, endColumn = range.endColumn + count, startRow = 0, endRow = worksheet.getRowCount() - 1, cellValue = $a6ab01cd18fda354$export$e08f9f7e26e9aff5(worksheet, startRow, endRow, startColumn, endColumn, !1, range.endColumn), insertColParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            direction: (0, $7yNYd.Direction).RIGHT,\n            range: {\n                startColumn: startColumn,\n                endColumn: endColumn,\n                startRow: startRow,\n                endRow: endRow\n            },\n            cellValue: cellValue\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$e8353cee7bda512a.id, insertColParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$c4bd043fecdc01b8 = {\n    id: \"sheet.command.insert-sheet\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), localeService = accessor.get((0, $7yNYd.LocaleService)), target = $a6ab01cd18fda354$export$59d57457bf2b83c0(univerInstanceService, {\n            unitId: params == null ? void 0 : params.unitId\n        });\n        if (!target) return !1;\n        const { unitId: unitId, workbook: workbook } = target;\n        let index = workbook.getSheets().length;\n        const sheet = params == null ? void 0 : params.sheet, sheetId = sheet == null ? void 0 : sheet.id, sheetConfig = (0, $7yNYd.mergeWorksheetSnapshotWithDefault)(sheet || {});\n        params ? (index = (_a20 = params.index) != null ? _a20 : index, sheetConfig.id = sheetId || (0, $7yNYd.Tools).generateRandomId(), sheetConfig.name = (sheet == null ? void 0 : sheet.name) || workbook.generateNewSheetName(`${localeService.t(\"sheets.tabs.sheet\")}`)) : (sheetConfig.id = (0, $7yNYd.Tools).generateRandomId(), sheetConfig.name = workbook.generateNewSheetName(`${localeService.t(\"sheets.tabs.sheet\")}`));\n        const insertSheetMutationParams = {\n            index: index,\n            sheet: sheetConfig,\n            unitId: unitId\n        }, removeSheetMutationParams = $a6ab01cd18fda354$export$d74793cdb77aea60(accessor, insertSheetMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$759ebfd45fe6d2e7.id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$f14a5300764a7508.id,\n                    params: removeSheetMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$759ebfd45fe6d2e7.id,\n                    params: insertSheetMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$2049e3375a7bc621(_accessor, params) {\n    const { unitId: unitId, subUnitId: subUnitId, sourceRange: sourceRange, targetRange: targetRange } = params, movingBackward = sourceRange.startRow > targetRange.startRow, count = sourceRange.endRow - sourceRange.startRow + 1;\n    return movingBackward ? {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        sourceRange: (0, $7yNYd.Rectangle).clone(targetRange),\n        targetRange: {\n            ...sourceRange,\n            endRow: sourceRange.endRow + count,\n            startRow: sourceRange.startRow + count\n        }\n    } : {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        targetRange: (0, $7yNYd.Rectangle).clone(sourceRange),\n        sourceRange: {\n            ...targetRange,\n            endRow: targetRange.endRow - count,\n            startRow: targetRange.startRow - count\n        }\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$2049e3375a7bc621, \"MoveRowsMutationUndoFactory\");\nconst $a6ab01cd18fda354$export$63ddef9080d565c8 = {\n    id: \"sheet.mutation.move-rows\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, sourceRange: sourceRange, targetRange: targetRange } = params, univerSheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(unitId);\n        if (!univerSheet) throw new Error(\"[MoveRowMutation] univerSheet is null!\");\n        const worksheet = univerSheet.getSheetBySheetId(subUnitId);\n        if (!worksheet) throw new Error(\"[MoveRowMutation] worksheet is null!\");\n        const fromRow = sourceRange.startRow, count = sourceRange.endRow - sourceRange.startRow + 1, toRow = targetRange.startRow, rowWrapper = worksheet.getRowManager().getRowData();\n        return (0, $7yNYd.moveMatrixArray)(fromRow, count, toRow, rowWrapper), worksheet.getCellMatrix().moveRows(fromRow, count, toRow), !0;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$export$32a98797666e66a0(_accessor, params) {\n    const { unitId: unitId, subUnitId: subUnitId, sourceRange: sourceRange, targetRange: targetRange } = params, movingBackward = sourceRange.startColumn > targetRange.startColumn, count = sourceRange.endColumn - sourceRange.startColumn + 1;\n    return movingBackward ? {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        sourceRange: (0, $7yNYd.Rectangle).clone(targetRange),\n        targetRange: {\n            ...sourceRange,\n            endColumn: sourceRange.endColumn + count,\n            startColumn: sourceRange.startColumn + count\n        }\n    } : {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        targetRange: (0, $7yNYd.Rectangle).clone(sourceRange),\n        sourceRange: {\n            ...targetRange,\n            startColumn: targetRange.startColumn - count,\n            endColumn: targetRange.endColumn - count\n        }\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$32a98797666e66a0, \"MoveColsMutationUndoFactory\");\nconst $a6ab01cd18fda354$export$b98040a300ab6f6e = {\n    id: \"sheet.mutation.move-columns\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, sourceRange: sourceRange, targetRange: targetRange } = params, univerSheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(unitId);\n        if (!univerSheet) throw new Error(\"[MoveColumnMutation] univerSheet is null!\");\n        const worksheet = univerSheet.getSheetBySheetId(subUnitId);\n        if (!worksheet) throw new Error(\"[MoveColumnMutation] worksheet is null!\");\n        const fromCol = sourceRange.startColumn, count = sourceRange.endColumn - sourceRange.startColumn + 1, toCol = targetRange.startColumn, columnWrapper = worksheet.getColumnManager().getColumnData();\n        return (0, $7yNYd.moveMatrixArray)(fromCol, count, toCol, columnWrapper), worksheet.getCellMatrix().moveColumns(fromCol, count, toCol), !0;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$rowAcrossMergedCell(row, worksheet) {\n    return worksheet.getMergeData().some((mergedCell)=>mergedCell.startRow < row && row <= mergedCell.endRow);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$rowAcrossMergedCell, \"rowAcrossMergedCell\");\nfunction $a6ab01cd18fda354$var$columnAcrossMergedCell(col, worksheet) {\n    return worksheet.getMergeData().some((mergedCell)=>mergedCell.startColumn < col && col <= mergedCell.endColumn);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$columnAcrossMergedCell, \"columnAcrossMergedCell\");\nconst $a6ab01cd18fda354$var$MoveRowsCommandId = \"sheet.command.move-rows\", $a6ab01cd18fda354$export$a28b199505e3f35b = {\n    id: $a6ab01cd18fda354$var$MoveRowsCommandId,\n    type: (0, $7yNYd.CommandType).COMMAND,\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), { fromRange: { startRow: fromRow }, toRange: { startRow: toRow }, range: range } = params, selections = range ? [\n            $a6ab01cd18fda354$var$covertRangeToSelection(range)\n        ] : selectionManagerService.getCurrentSelections(), filteredSelections = selections == null ? void 0 : selections.filter((selection)=>selection.range.rangeType === (0, $7yNYd.RANGE_TYPE).ROW && selection.range.startRow <= fromRow && fromRow <= selection.range.endRow);\n        if ((filteredSelections == null ? void 0 : filteredSelections.length) !== 1) return !1;\n        const sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet } = target, unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService)), rangeToMove = filteredSelections[0].range, beforePrimary = filteredSelections[0].primary, alignedRange = $a6ab01cd18fda354$export$f2ae5969eaf8e0d4(rangeToMove, worksheet, !1);\n        if (!(0, $7yNYd.Rectangle).equals(rangeToMove, alignedRange)) return errorService.emit(localeService.t(\"sheets.info.partOfCell\")), !1;\n        if ($a6ab01cd18fda354$var$rowAcrossMergedCell(toRow, worksheet)) return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n        const destinationRange = {\n            ...rangeToMove,\n            startRow: toRow,\n            endRow: toRow + rangeToMove.endRow - rangeToMove.startRow\n        }, moveRowsParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            sourceRange: rangeToMove,\n            targetRange: destinationRange\n        }, undoMoveRowsParams = $a6ab01cd18fda354$export$2049e3375a7bc621(accessor, moveRowsParams), commandService = accessor.get((0, $7yNYd.ICommandService)), interceptorCommands = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$a28b199505e3f35b.id,\n            params: params\n        }), redos = [\n            ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n            {\n                id: $a6ab01cd18fda354$export$63ddef9080d565c8.id,\n                params: moveRowsParams\n            }\n        ], undos = [\n            ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n            {\n                id: $a6ab01cd18fda354$export$63ddef9080d565c8.id,\n                params: undoMoveRowsParams\n            }\n        ];\n        if (beforePrimary) {\n            const moveBackward = toRow - fromRow < 0, count = rangeToMove.endRow - rangeToMove.startRow + 1, destSelection = moveBackward ? destinationRange : {\n                ...destinationRange,\n                startRow: destinationRange.startRow - count,\n                endRow: destinationRange.endRow - count\n            }, setSelectionsParam = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                selections: [\n                    {\n                        range: destSelection,\n                        primary: $a6ab01cd18fda354$export$d262ae8015daf961(destSelection, worksheet),\n                        style: null\n                    }\n                ]\n            }, undoSetSelectionsParam = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                selections: [\n                    {\n                        range: rangeToMove,\n                        primary: beforePrimary,\n                        style: null\n                    }\n                ]\n            };\n            redos.push({\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionsParam\n            }), undos.push({\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: undoSetSelectionsParam\n            });\n        }\n        return redos.push(...interceptorCommands.redos), undos.push(...interceptorCommands.undos), (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$MoveColsCommandId = \"sheet.command.move-cols\", $a6ab01cd18fda354$export$5effa9283a7d9d05 = {\n    id: $a6ab01cd18fda354$var$MoveColsCommandId,\n    type: (0, $7yNYd.CommandType).COMMAND,\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), { fromRange: { startColumn: fromCol }, toRange: { startColumn: toCol }, range: range } = params, selections = range ? [\n            $a6ab01cd18fda354$var$covertRangeToSelection(range)\n        ] : selectionManagerService.getCurrentSelections(), filteredSelections = selections == null ? void 0 : selections.filter((selection)=>selection.range.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN && selection.range.startColumn <= fromCol && fromCol <= selection.range.endColumn);\n        if ((filteredSelections == null ? void 0 : filteredSelections.length) !== 1) return !1;\n        const sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet } = target, unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService)), rangeToMove = filteredSelections[0].range, beforePrimary = filteredSelections[0].primary, alignedRange = $a6ab01cd18fda354$export$f2ae5969eaf8e0d4(rangeToMove, worksheet, !1);\n        if (!(0, $7yNYd.Rectangle).equals(rangeToMove, alignedRange)) return errorService.emit(localeService.t(\"sheets.info.partOfCell\")), !1;\n        if ($a6ab01cd18fda354$var$columnAcrossMergedCell(toCol, worksheet)) return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n        const destinationRange = {\n            ...rangeToMove,\n            startColumn: toCol,\n            endColumn: toCol + rangeToMove.endColumn - rangeToMove.startColumn\n        }, moveColsParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            sourceRange: rangeToMove,\n            targetRange: destinationRange\n        }, undoMoveColsParams = $a6ab01cd18fda354$export$32a98797666e66a0(accessor, moveColsParams), commandService = accessor.get((0, $7yNYd.ICommandService)), interceptorCommands = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$5effa9283a7d9d05.id,\n            params: params\n        }), redos = [\n            ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n            {\n                id: $a6ab01cd18fda354$export$b98040a300ab6f6e.id,\n                params: moveColsParams\n            }\n        ], undos = [\n            ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n            {\n                id: $a6ab01cd18fda354$export$b98040a300ab6f6e.id,\n                params: undoMoveColsParams\n            }\n        ];\n        if (beforePrimary) {\n            const count = rangeToMove.endColumn - rangeToMove.startColumn + 1, destSelection = toCol - fromCol < 0 ? destinationRange : {\n                ...destinationRange,\n                startColumn: destinationRange.startColumn - count,\n                endColumn: destinationRange.endColumn - count\n            }, setSelectionsParam = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                selections: [\n                    {\n                        range: destSelection,\n                        primary: $a6ab01cd18fda354$export$d262ae8015daf961(destSelection, worksheet),\n                        style: null\n                    }\n                ]\n            }, undoSetSelectionsParam = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                selections: [\n                    {\n                        range: rangeToMove,\n                        primary: beforePrimary,\n                        style: null\n                    }\n                ]\n            };\n            redos.push({\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionsParam\n            }), undos.push({\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: undoSetSelectionsParam\n            });\n        }\n        return redos.push(...interceptorCommands.redos), undos.push(...interceptorCommands.undos), (0, $7yNYd.sequenceExecute)(redos, commandService).result && accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$covertRangeToSelection(range) {\n    return {\n        range: range,\n        primary: null,\n        style: null\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$covertRangeToSelection, \"covertRangeToSelection\");\nconst $a6ab01cd18fda354$var$RemoveRowCommandId = \"sheet.command.remove-row\", $a6ab01cd18fda354$export$d6b85d28467bc6ff = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$RemoveRowCommandId,\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd);\n        let totalRange = params == null ? void 0 : params.range;\n        if (totalRange || (totalRange = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !totalRange) return !1;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet, subUnitId: subUnitId, unitId: unitId } = target;\n        totalRange = {\n            ...totalRange,\n            startColumn: 0,\n            endColumn: Math.max(worksheet.getMaxColumns() - 1, 0)\n        };\n        const filterOutRowsInRemove = [];\n        for(let i = totalRange.startRow; i <= totalRange.endRow; i++)worksheet.getRowFiltered(i) && filterOutRowsInRemove.push(i);\n        const ranges = [];\n        if (filterOutRowsInRemove.length) {\n            const starts = [\n                totalRange.startRow,\n                ...filterOutRowsInRemove.map((r)=>r + 1)\n            ], ends = [\n                ...filterOutRowsInRemove.map((r)=>r - 1),\n                totalRange.endRow\n            ];\n            for(let i = starts.length - 1; i >= 0; i--)starts[i] <= ends[i] && ranges.push({\n                startRow: starts[i],\n                endRow: ends[i],\n                startColumn: totalRange.startColumn,\n                endColumn: totalRange.endColumn\n            });\n        } else ranges.push(totalRange);\n        if (!await sheetInterceptorService.beforeCommandExecute({\n            id: $a6ab01cd18fda354$export$d6b85d28467bc6ff.id,\n            params: {\n                range: totalRange,\n                ranges: ranges\n            }\n        })) return !1;\n        const redos = [], undos = [];\n        ranges.forEach((range)=>{\n            const removeRowsParams = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                range: range\n            }, removedRows = worksheet.getCellMatrix().getSlice(range.startRow, range.endRow, 0, worksheet.getColumnCount() - 1), undoSetRangeValuesParams = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                cellValue: removedRows.getMatrix()\n            }, undoRemoveRowsParams = $a6ab01cd18fda354$var$RemoveRowsUndoMutationFactory(removeRowsParams, worksheet);\n            redos.push({\n                id: $a6ab01cd18fda354$export$9642f6b705de590b.id,\n                params: removeRowsParams\n            }), undos.unshift({\n                id: $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n                params: undoRemoveRowsParams\n            }, {\n                id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                params: undoSetRangeValuesParams\n            });\n        });\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$d6b85d28467bc6ff.id,\n            params: {\n                range: totalRange,\n                ranges: ranges\n            }\n        }), commandService = accessor.get((0, $7yNYd.ICommandService));\n        return (0, $7yNYd.sequenceExecute)([\n            ...(_b = intercepted.preRedos) != null ? _b : [],\n            ...redos,\n            ...intercepted.redos,\n            $a6ab01cd18fda354$export$487f185ae1bde256(totalRange, workbook, worksheet)\n        ], commandService).result ? (accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_c = intercepted.preUndos) != null ? _c : [],\n                ...undos,\n                ...intercepted.undos\n            ],\n            redoMutations: [\n                ...(_d = intercepted.preRedos) != null ? _d : [],\n                ...redos,\n                ...intercepted.redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$RemoveColCommandId = \"sheet.command.remove-col\", $a6ab01cd18fda354$export$177b3716bfce6b2d = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: $a6ab01cd18fda354$var$RemoveColCommandId,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd);\n        let range = params == null ? void 0 : params.range;\n        if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet, subUnitId: subUnitId, unitId: unitId } = target;\n        range = {\n            ...range,\n            startRow: 0,\n            endRow: Math.max(worksheet.getMaxRows() - 1, 0)\n        };\n        const removeColParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            range: range\n        }, undoRemoveColParams = $a6ab01cd18fda354$var$RemoveColMutationFactory(accessor, removeColParams), removedCols = worksheet.getCellMatrix().getSlice(0, worksheet.getRowCount() - 1, range.startColumn, range.endColumn), undoSetRangeValuesParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            cellValue: removedCols.getMatrix()\n        };\n        if (!await sheetInterceptorService.beforeCommandExecute({\n            id: $a6ab01cd18fda354$export$177b3716bfce6b2d.id,\n            params: {\n                range: range\n            }\n        })) return !1;\n        const intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$177b3716bfce6b2d.id,\n            params: {\n                range: range\n            }\n        }), commandService = accessor.get((0, $7yNYd.ICommandService));\n        return (0, $7yNYd.sequenceExecute)([\n            ...(_b = intercepted.preRedos) != null ? _b : [],\n            {\n                id: $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n                params: removeColParams\n            },\n            ...intercepted.redos,\n            $a6ab01cd18fda354$export$487f185ae1bde256(range, workbook, worksheet)\n        ], commandService).result ? (accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_c = intercepted.preUndos) != null ? _c : [],\n                {\n                    id: $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n                    params: undoRemoveColParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: undoSetRangeValuesParams\n                },\n                ...intercepted.undos\n            ],\n            redoMutations: [\n                ...(_d = intercepted.preRedos) != null ? _d : [],\n                {\n                    id: $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n                    params: removeColParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$6fc693400eb160ca = {\n    id: \"sheet.command.remove-sheet\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, workbook: workbook, worksheet: worksheet } = target;\n        if (workbook.getSheets().length <= 1) return !1;\n        const RemoveSheetMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            subUnitName: worksheet.getName()\n        }, InsertSheetMutationParams = $a6ab01cd18fda354$export$99c49b2d1c0ac200(accessor, RemoveSheetMutationParams), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$6fc693400eb160ca.id,\n            params: {\n                unitId: unitId,\n                subUnitId: subUnitId\n            }\n        }), redos = [\n            ...(_a20 = intercepted.preRedos) != null ? _a20 : [],\n            {\n                id: $a6ab01cd18fda354$export$f14a5300764a7508.id,\n                params: RemoveSheetMutationParams\n            },\n            ...intercepted.redos\n        ], undos = [\n            ...(_b = intercepted.preUndos) != null ? _b : [],\n            {\n                id: $a6ab01cd18fda354$export$759ebfd45fe6d2e7.id,\n                params: InsertSheetMutationParams\n            },\n            ...intercepted.undos\n        ];\n        return (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$28cf35492035648a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: params.ranges\n    };\n}, \"AddMergeUndoMutationFactory\"), $a6ab01cd18fda354$export$2cd10fd9284040fa = {\n    id: \"sheet.mutation.add-worksheet-merge\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const mergeConfigData = worksheet.getConfig().mergeData, mergeAppendData = params.ranges;\n        for(let i = 0; i < mergeAppendData.length; i++)mergeConfigData.push(mergeAppendData[i]);\n        return worksheet.getSpanModel().rebuild(mergeConfigData), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$328feb80d2f892b2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n    if (universheet == null) throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (worksheet == null) throw new Error(\"worksheet is null error!\");\n    const mergeConfigData = worksheet.getConfig().mergeData, mergeRemoveData = params.ranges, ranges = [];\n    for(let j = 0; j < mergeRemoveData.length; j++)for(let i = mergeConfigData.length - 1; i >= 0; i--){\n        const configMerge = mergeConfigData[i], removeMerge = mergeRemoveData[j];\n        (0, $7yNYd.Rectangle).intersects(configMerge, removeMerge) && ranges.push(mergeConfigData[i]);\n    }\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: ranges\n    };\n}, \"RemoveMergeUndoMutationFactory\"), $a6ab01cd18fda354$export$9bbe8f9ee2bc5646 = {\n    id: \"sheet.mutation.remove-worksheet-merge\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const mergeConfigData = worksheet.getConfig().mergeData, mergeRemoveData = params.ranges;\n        for(let j = 0; j < mergeRemoveData.length; j++)for(let i = mergeConfigData.length - 1; i >= 0; i--){\n            const configMerge = mergeConfigData[i], removeMerge = mergeRemoveData[j];\n            (0, $7yNYd.Rectangle).intersects(configMerge, removeMerge) && mergeConfigData.splice(i, 1);\n        }\n        return worksheet.getSpanModel().rebuild(mergeConfigData), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d0aeb9f05b4c1c1b = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.remove-worksheet-merge\",\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selections = (params == null ? void 0 : params.ranges) || ((_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range));\n        if (!(selections != null && selections.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { subUnitId: subUnitId, unitId: unitId, worksheet: worksheet } = target, removeMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: selections\n        }, intersectsMerges = worksheet.getConfig().mergeData.filter((merge2)=>selections.some((selection)=>(0, $7yNYd.Rectangle).intersects(selection, merge2)));\n        if (!intersectsMerges.length) return !1;\n        const undoredoMutationParams = $a6ab01cd18fda354$export$328feb80d2f892b2(accessor, removeMergeMutationParams), nowSelections = selectionManagerService.getCurrentSelections();\n        if (!(nowSelections != null && nowSelections.length)) return !1;\n        const undoSelections = (0, $7yNYd.Tools).deepClone(nowSelections), redoSelections = (0, $7yNYd.Tools).deepClone(nowSelections), redoLastSelection = redoSelections[redoSelections.length - 1], { startRow: startRow, startColumn: startColumn } = redoLastSelection.range;\n        redoLastSelection.primary = {\n            startRow: startRow,\n            startColumn: startColumn,\n            endRow: startRow,\n            endColumn: startColumn,\n            actualRow: startRow,\n            actualColumn: startColumn,\n            isMerged: !1,\n            isMergedMainCell: !1\n        };\n        const getSetRangeValuesParams = $a6ab01cd18fda354$var$getSetRangeStyleParamsForRemoveMerge(worksheet, intersectsMerges), redoSetRangeValueParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            cellValue: getSetRangeValuesParams.redoParams.getMatrix()\n        }, undoSetRangeValueParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            cellValue: getSetRangeValuesParams.undoParams.getMatrix()\n        }, redoMutations = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoredoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                params: redoSetRangeValueParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: {\n                    selections: redoSelections\n                }\n            }\n        ], undoMutations = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoredoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                params: undoSetRangeValueParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: {\n                    selections: undoSelections\n                }\n            }\n        ];\n        return (0, $7yNYd.sequenceExecute)(redoMutations, commandService) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undoMutations,\n            redoMutations: redoMutations\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$getSetRangeStyleParamsForRemoveMerge(worksheet, ranges) {\n    const styleRedoMatrix = new (0, $7yNYd.ObjectMatrix)(), styleUndoMatrix = new (0, $7yNYd.ObjectMatrix)();\n    return ranges.forEach((range)=>{\n        const { startRow: startRow, startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range, cellValue = worksheet.getCellMatrix().getValue(startRow, startColumn);\n        if (cellValue != null && cellValue.s) for(let i = startRow; i <= endRow; i++)for(let j = startColumn; j <= endColumn; j++)(i !== startRow || j !== startColumn) && (styleRedoMatrix.setValue(i, j, {\n            s: cellValue.s\n        }), styleUndoMatrix.setValue(i, j, null));\n    }), {\n        redoParams: styleRedoMatrix,\n        undoParams: styleUndoMatrix\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getSetRangeStyleParamsForRemoveMerge, \"getSetRangeStyleParamsForRemoveMerge\");\nconst $a6ab01cd18fda354$var$_BorderStyleManagerService = class _BorderStyleManagerService {\n    constructor(){\n        $a6ab01cd18fda354$var$__publicField(this, \"_borderInfo\", {\n            type: (0, $7yNYd.BorderType).ALL,\n            color: \"#000000\",\n            style: (0, $7yNYd.BorderStyleTypes).THIN,\n            activeBorderType: !1\n        });\n        $a6ab01cd18fda354$var$__publicField(this, \"_borderInfo$\", new (0, $5LPkb.BehaviorSubject)(this._borderInfo));\n        $a6ab01cd18fda354$var$__publicField(this, \"borderInfo$\", this._borderInfo$.asObservable());\n    }\n    dispose() {\n        this._borderInfo$.complete();\n    }\n    setType(type) {\n        this._borderInfo.type = type, this.setActiveBorderType(!0), this.refresh();\n    }\n    setColor(color) {\n        this._borderInfo.color = color, this.refresh();\n    }\n    setStyle(style) {\n        this._borderInfo.style = style, this.refresh();\n    }\n    setActiveBorderType(status) {\n        this._borderInfo.activeBorderType = status;\n    }\n    getBorderInfo() {\n        return this._borderInfo;\n    }\n    refresh() {\n        this._borderInfo$.next(this._borderInfo);\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_BorderStyleManagerService, \"BorderStyleManagerService\");\nlet $a6ab01cd18fda354$export$3717d01cc8329f85 = $a6ab01cd18fda354$var$_BorderStyleManagerService;\nfunction $a6ab01cd18fda354$var$forEach(range, action) {\n    const { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = range;\n    for(let i = startRow; i <= endRow; i++)for(let j = startColumn; j <= endColumn; j++)action(i, j);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$forEach, \"forEach\");\nconst $a6ab01cd18fda354$export$48d954126b6d7141 = {\n    id: \"sheet.command.set-border-basic\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, value: value } = params, { type: type, color: color, style: style } = value, commandService = accessor.get((0, $7yNYd.ICommandService)), borderManager = accessor.get($a6ab01cd18fda354$export$3717d01cc8329f85);\n        return borderManager.setType(type), borderManager.setColor(color), borderManager.setStyle(style), commandService.executeCommand($a6ab01cd18fda354$export$87ae154ca64a9764.id, {\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$a8e6e4eb9efe7ab3 = {\n    id: \"sheet.command.set-border-position\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params.value) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService));\n        return accessor.get($a6ab01cd18fda354$export$3717d01cc8329f85).setType(params.value), commandService.executeCommand($a6ab01cd18fda354$export$87ae154ca64a9764.id);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$4be8c70e09ec7414 = {\n    id: \"sheet.command.set-border-style\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService));\n        return accessor.get($a6ab01cd18fda354$export$3717d01cc8329f85).setStyle(params.value), commandService.executeCommand($a6ab01cd18fda354$export$87ae154ca64a9764.id);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$217a1eef55f6af13 = {\n    id: \"sheet.command.set-border-color\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService));\n        return accessor.get($a6ab01cd18fda354$export$3717d01cc8329f85).setColor(params.value), commandService.executeCommand($a6ab01cd18fda354$export$87ae154ca64a9764.id);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$87ae154ca64a9764 = {\n    id: \"sheet.command.set-border\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), borderStyleManagerService = accessor.get($a6ab01cd18fda354$export$3717d01cc8329f85), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target, selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const { style: style, color: color, type: type, activeBorderType: activeBorderType } = borderStyleManagerService.getBorderInfo();\n        if (!activeBorderType) return !1;\n        const top = type === (0, $7yNYd.BorderType).TOP || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).OUTSIDE, left = type === (0, $7yNYd.BorderType).LEFT || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).OUTSIDE, bottom = type === (0, $7yNYd.BorderType).BOTTOM || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).OUTSIDE, right = type === (0, $7yNYd.BorderType).RIGHT || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).OUTSIDE, vertical = type === (0, $7yNYd.BorderType).VERTICAL || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).INSIDE, horizontal = type === (0, $7yNYd.BorderType).HORIZONTAL || type === (0, $7yNYd.BorderType).ALL || type === (0, $7yNYd.BorderType).INSIDE, tl_br = type.indexOf(\"tlbr\") > -1, tl_bc = type.indexOf(\"tlbc\") > -1, tl_mr = type.indexOf(\"tlmr\") > -1, bl_tr = type.indexOf(\"bltr\") > -1, ml_tr = type.indexOf(\"mltr\") > -1, bc_tr = type.indexOf(\"bctr\") > -1, range = selections[0], topRangeOut = {\n            startRow: range.startRow - 1,\n            startColumn: range.startColumn,\n            endRow: range.startRow - 1,\n            endColumn: range.endColumn\n        }, leftRangeOut = {\n            startRow: range.startRow,\n            startColumn: range.startColumn - 1,\n            endRow: range.endRow,\n            endColumn: range.startColumn - 1\n        }, bottomRangeOut = {\n            startRow: range.endRow + 1,\n            startColumn: range.startColumn,\n            endRow: range.endRow + 1,\n            endColumn: range.endColumn\n        }, rightRangeOut = {\n            startRow: range.startRow,\n            startColumn: range.endColumn + 1,\n            endRow: range.endRow,\n            endColumn: range.endColumn + 1\n        }, topRange = {\n            startRow: range.startRow,\n            startColumn: range.startColumn,\n            endRow: range.startRow,\n            endColumn: range.endColumn\n        }, leftRange = {\n            startRow: range.startRow,\n            startColumn: range.startColumn,\n            endRow: range.endRow,\n            endColumn: range.startColumn\n        }, bottomRange = {\n            startRow: range.endRow,\n            startColumn: range.startColumn,\n            endRow: range.endRow,\n            endColumn: range.endColumn\n        }, rightRange = {\n            startRow: range.startRow,\n            startColumn: range.endColumn,\n            endRow: range.endRow,\n            endColumn: range.endColumn\n        }, mr = new (0, $7yNYd.ObjectMatrix)(), border = {\n            s: style,\n            cl: {\n                rgb: color\n            }\n        };\n        function setBorderStyle(range2, defaultStyle, reserve) {\n            range2.startRow < 0 || range2.startColumn < 0 || $a6ab01cd18fda354$var$forEach(range2, (row, column)=>{\n                var _a21, _b;\n                const rectangle = worksheet.getMergedCell(row, column);\n                let bdStyle = defaultStyle;\n                if (rectangle && (defaultStyle.bc_tr || defaultStyle.ml_tr || defaultStyle.bl_tr || defaultStyle.tl_mr || defaultStyle.tl_bc || defaultStyle.tl_br)) {\n                    if (reserve) {\n                        const style2 = (0, $7yNYd.Tools).deepClone((_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s);\n                        bdStyle = style2 != null && style2.bd ? Object.assign(style2.bd, defaultStyle) : defaultStyle;\n                    }\n                    mr.setValue(rectangle.startRow, rectangle.startColumn, {\n                        s: {\n                            bd: bdStyle\n                        }\n                    });\n                } else {\n                    if (reserve) {\n                        const style2 = (0, $7yNYd.Tools).deepClone((_b = mr.getValue(row, column)) == null ? void 0 : _b.s);\n                        bdStyle = style2 != null && style2.bd ? Object.assign(style2.bd, defaultStyle) : defaultStyle;\n                    }\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: bdStyle\n                        }\n                    });\n                }\n            });\n        }\n        $a6ab01cd18fda354$var$__name(setBorderStyle, \"setBorderStyle\"), top && (setBorderStyle(topRangeOut, {\n            b: null\n        }), setBorderStyle(topRange, {\n            t: (0, $7yNYd.Tools).deepClone(border)\n        }, !0)), bottom && (setBorderStyle(bottomRangeOut, {\n            t: null\n        }), setBorderStyle(bottomRange, {\n            b: (0, $7yNYd.Tools).deepClone(border)\n        }, !0)), left && (setBorderStyle(leftRangeOut, {\n            r: null\n        }), setBorderStyle(leftRange, {\n            l: (0, $7yNYd.Tools).deepClone(border)\n        }, !0)), right && (setBorderStyle(rightRangeOut, {\n            l: null\n        }), setBorderStyle(rightRange, {\n            r: (0, $7yNYd.Tools).deepClone(border)\n        }, !0)), tl_br && setBorderStyle(range, {\n            tl_br: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), tl_bc && setBorderStyle(range, {\n            tl_bc: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), tl_mr && setBorderStyle(range, {\n            tl_mr: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), bl_tr && setBorderStyle(range, {\n            bl_tr: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), ml_tr && setBorderStyle(range, {\n            ml_tr: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), bc_tr && setBorderStyle(range, {\n            bc_tr: (0, $7yNYd.Tools).deepClone(border)\n        }, !0), vertical && $a6ab01cd18fda354$var$forEach(range, (row, column)=>{\n            var _a21, _b, _c, _d;\n            const rectangle = worksheet.getMergedCell(row, column);\n            if (rectangle) {\n                if (rectangle.endColumn !== range.endColumn) {\n                    const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                r: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                r: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n                if (rectangle.startColumn !== range.startColumn) {\n                    const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                l: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                l: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n            } else {\n                if (column !== range.endColumn) {\n                    const style2 = (_c = mr.getValue(row, column)) == null ? void 0 : _c.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                r: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                r: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n                if (column !== range.startColumn) {\n                    const style2 = (_d = mr.getValue(row, column)) == null ? void 0 : _d.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                l: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                l: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n            }\n        }), horizontal && $a6ab01cd18fda354$var$forEach(range, (row, column)=>{\n            var _a21, _b, _c, _d;\n            const rectangle = worksheet.getMergedCell(row, column);\n            if (rectangle) {\n                if (rectangle.endRow !== range.endRow) {\n                    const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                b: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                b: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n                if (rectangle.startRow !== range.startRow) {\n                    const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                t: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                t: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n            } else {\n                if (row !== range.endRow) {\n                    const style2 = (_c = mr.getValue(row, column)) == null ? void 0 : _c.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                b: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                b: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n                if (row !== range.startRow) {\n                    const style2 = (_d = mr.getValue(row, column)) == null ? void 0 : _d.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                t: (0, $7yNYd.Tools).deepClone(border)\n                            }) : {\n                                t: (0, $7yNYd.Tools).deepClone(border)\n                            }\n                        }\n                    });\n                }\n            }\n        }), !top && !bottom && !left && !right && !vertical && !horizontal && !tl_br && !tl_bc && !tl_mr && !bl_tr && !ml_tr && !bc_tr && (setBorderStyle(topRangeOut, {\n            b: null\n        }), setBorderStyle(topRange, {\n            t: null\n        }, !0), setBorderStyle(bottomRangeOut, {\n            t: null\n        }), setBorderStyle(bottomRange, {\n            b: null\n        }, !0), setBorderStyle(leftRangeOut, {\n            r: null\n        }), setBorderStyle(leftRange, {\n            l: null\n        }, !0), setBorderStyle(rightRangeOut, {\n            l: null\n        }), setBorderStyle(rightRange, {\n            r: null\n        }, !0), setBorderStyle(range, {\n            tl_br: null\n        }, !0), setBorderStyle(range, {\n            tl_bc: null\n        }, !0), setBorderStyle(range, {\n            tl_mr: null\n        }, !0), setBorderStyle(range, {\n            bl_tr: null\n        }, !0), setBorderStyle(range, {\n            ml_tr: null\n        }, !0), setBorderStyle(range, {\n            bc_tr: null\n        }, !0), $a6ab01cd18fda354$var$forEach(range, (row, column)=>{\n            var _a21, _b, _c, _d, _e, _f, _g, _h;\n            const rectangle = worksheet.getMergedCell(row, column);\n            if (rectangle) {\n                if (rectangle.endColumn !== range.endColumn) {\n                    const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                r: null\n                            }) : {\n                                r: null\n                            }\n                        }\n                    });\n                }\n                if (rectangle.startColumn !== range.startColumn) {\n                    const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                l: null\n                            }) : {\n                                l: null\n                            }\n                        }\n                    });\n                }\n                if (rectangle.endRow !== range.endRow) {\n                    const style2 = (_c = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _c.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                b: null\n                            }) : {\n                                b: null\n                            }\n                        }\n                    });\n                }\n                if (rectangle.startRow !== range.startRow) {\n                    const style2 = (_d = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _d.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                t: null\n                            }) : {\n                                t: null\n                            }\n                        }\n                    });\n                }\n            } else {\n                if (column !== range.endColumn) {\n                    const style2 = (_e = mr.getValue(row, column)) == null ? void 0 : _e.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                r: null\n                            }) : {\n                                r: null\n                            }\n                        }\n                    });\n                }\n                if (column !== range.startColumn) {\n                    const style2 = (_f = mr.getValue(row, column)) == null ? void 0 : _f.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                l: null\n                            }) : {\n                                l: null\n                            }\n                        }\n                    });\n                }\n                if (row !== range.endRow) {\n                    const style2 = (_g = mr.getValue(row, column)) == null ? void 0 : _g.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                b: null\n                            }) : {\n                                b: null\n                            }\n                        }\n                    });\n                }\n                if (row !== range.startRow) {\n                    const style2 = (_h = mr.getValue(row, column)) == null ? void 0 : _h.s;\n                    mr.setValue(row, column, {\n                        s: {\n                            bd: style2 != null && style2.bd ? Object.assign(style2.bd, {\n                                t: null\n                            }) : {\n                                t: null\n                            }\n                        }\n                    });\n                }\n            }\n        }));\n        const setRangeValuesMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            cellValue: mr.getData()\n        }, undoSetRangeValuesMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, setRangeValuesMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$ce2b970bc67fd9bc.id, setRangeValuesMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: undoSetRangeValuesMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: setRangeValuesMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetColHiddenUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: params.ranges\n    };\n}, \"SetColHiddenUndoMutationFactory\"), $a6ab01cd18fda354$export$7257073ee36b52d2 = {\n    id: \"sheet.mutation.set-col-hidden\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!universheet) return !1;\n        const manager = universheet.getSheetBySheetId(params.subUnitId).getColumnManager();\n        for(let i = 0; i < params.ranges.length; i++){\n            const range = params.ranges[i];\n            for(let j = range.startColumn; j < range.endColumn + 1; j++){\n                const column = manager.getColumnOrCreate(j);\n                column != null && (column.hd = (0, $7yNYd.BooleanNumber).TRUE);\n            }\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetColVisibleUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: params.ranges\n    };\n}, \"SetColVisibleUndoMutationFactory\"), $a6ab01cd18fda354$export$e2c06a117868669c = {\n    id: \"sheet.mutation.set-col-visible\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!universheet) return !1;\n        const manager = universheet.getSheetBySheetId(params.subUnitId).getColumnManager();\n        for(let i = 0; i < params.ranges.length; i++){\n            const range = params.ranges[i];\n            for(let j = range.startColumn; j < range.endColumn + 1; j++){\n                const column = manager.getColumnOrCreate(j);\n                column != null && (column.hd = (0, $7yNYd.BooleanNumber).FALSE);\n            }\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$c9b3ccfe26533e7d = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-col-visible-on-cols\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params, sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), commandService = accessor.get((0, $7yNYd.ICommandService)), instanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(instanceService, {\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n        if (!target) return !1;\n        const { worksheet: worksheet } = target, redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        }, setSelectionOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            reveal: !0,\n            selections: ranges.map((r)=>({\n                    range: r,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(r, worksheet),\n                    style: null\n                }))\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetColVisibleUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            selections: $a6ab01cd18fda354$var$getSelectionsAfterHiding$1(ranges).map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, result = (0, $7yNYd.sequenceExecute)([\n            {\n                id: $a6ab01cd18fda354$export$e2c06a117868669c.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionOperationParams\n            }\n        ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$c9b3ccfe26533e7d.id,\n            params: params\n        }), interceptedResult = (0, $7yNYd.sequenceExecute)([\n            ...intercepted.redos\n        ], commandService);\n        return result.result && interceptedResult.result && accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$7257073ee36b52d2.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: undoSetSelectionsOperationParams\n                },\n                ...(_a20 = intercepted.undos) != null ? _a20 : []\n            ],\n            redoMutations: [\n                ...(_b = intercepted.preRedos) != null ? _b : [],\n                {\n                    id: $a6ab01cd18fda354$export$e2c06a117868669c.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: setSelectionOperationParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$588522b1d30ed11e = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-selected-cols-visible\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), commandService = accessor.get((0, $7yNYd.ICommandService)), ranges = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range).filter((r)=>r.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN);\n        if (!(ranges != null && ranges.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target, hiddenRanges = ranges.map((r)=>worksheet.getHiddenCols(r.startColumn, r.endColumn)).flat();\n        return commandService.executeCommand($a6ab01cd18fda354$export$c9b3ccfe26533e7d.id, {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: hiddenRanges\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$8c690f2688578a18 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-col-hidden\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), commandService = accessor.get((0, $7yNYd.ICommandService));\n        let ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range).filter((r)=>r.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN);\n        if (!(ranges != null && ranges.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target;\n        ranges = $a6ab01cd18fda354$var$divideRangesByHiddenCols(target.worksheet, ranges);\n        const redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        }, setSelectionOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            selections: $a6ab01cd18fda354$var$getSelectionsAfterHiding$1(ranges).map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetColHiddenUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            reveal: !0,\n            selections: ranges.map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, result = (0, $7yNYd.sequenceExecute)([\n            {\n                id: $a6ab01cd18fda354$export$7257073ee36b52d2.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionOperationParams\n            }\n        ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$8c690f2688578a18.id,\n            params: redoMutationParams\n        }), interceptedResult = (0, $7yNYd.sequenceExecute)([\n            ...intercepted.redos\n        ], commandService);\n        return result.result && interceptedResult.result ? (accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$e2c06a117868669c.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: undoSetSelectionsOperationParams\n                },\n                ...(_c = intercepted.undos) != null ? _c : []\n            ],\n            redoMutations: [\n                ...(_d = intercepted.preRedos) != null ? _d : [],\n                {\n                    id: $a6ab01cd18fda354$export$7257073ee36b52d2.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: setSelectionOperationParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$divideRangesByHiddenCols(worksheet, ranges) {\n    const endRow = worksheet.getRowCount() - 1, hiddenCols = worksheet.getHiddenCols(), divided = [];\n    return ranges.forEach((range)=>{\n        const hiddenColsInSelection = hiddenCols.filter((c)=>c.startColumn >= range.startColumn && c.endColumn <= range.endColumn);\n        if (hiddenColsInSelection.length) {\n            let startColumn = range.startColumn;\n            hiddenColsInSelection.forEach((hiddenRange)=>{\n                hiddenRange.startColumn > startColumn && (divided.push({\n                    startColumn: startColumn,\n                    endColumn: hiddenRange.startColumn - 1,\n                    startRow: 0,\n                    endRow: endRow\n                }), startColumn = hiddenRange.endColumn + 1);\n            }), startColumn <= range.endColumn && divided.push({\n                startColumn: startColumn,\n                endColumn: range.endColumn,\n                startRow: 0,\n                endRow: endRow\n            });\n        } else divided.push(range);\n    }), divided;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$divideRangesByHiddenCols, \"divideRangesByHiddenCols\");\nfunction $a6ab01cd18fda354$var$getSelectionsAfterHiding$1(ranges) {\n    return $a6ab01cd18fda354$var$mergeSelections$1(ranges).map((range)=>{\n        const column = range.startColumn === 0 ? range.endColumn + 1 : range.startColumn - 1;\n        return {\n            ...range,\n            startColumn: column,\n            endColumn: column\n        };\n    });\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getSelectionsAfterHiding$1, \"getSelectionsAfterHiding$1\");\nfunction $a6ab01cd18fda354$var$mergeSelections$1(ranges) {\n    const merged = [];\n    let current;\n    return ranges.sort((a, b)=>a.startColumn - b.startColumn).forEach((range)=>{\n        if (!current) {\n            current = range;\n            return;\n        }\n        current.endColumn === range.startColumn - 1 ? current.endColumn = range.endColumn : (merged.push(current), current = range);\n    }), merged.push(current), merged;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$mergeSelections$1, \"mergeSelections$1\");\nconst $a6ab01cd18fda354$export$5322fc24b9ed099c = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n    if (universheet == null) throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (worksheet == null) throw new Error(\"worksheet is null error!\");\n    const freeze = worksheet.getConfig().freeze;\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ...freeze\n    };\n}, \"SetFrozenMutationFactory\"), $a6ab01cd18fda354$export$53938c3f10334ebe = {\n    id: \"sheet.mutation.set-frozen\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const config = worksheet.getConfig(), { startRow: startRow, startColumn: startColumn, ySplit: ySplit, xSplit: xSplit } = params;\n        return config.freeze = {\n            startRow: startRow,\n            startColumn: startColumn,\n            ySplit: ySplit,\n            xSplit: xSplit\n        }, !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$5d48dadd73d65542 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-frozen\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet } = target, { startColumn: startColumn, startRow: startRow, xSplit: xSplit, ySplit: ySplit } = params;\n        if (startRow >= worksheet.getRowCount() || startColumn >= worksheet.getColumnCount() || xSplit >= worksheet.getColumnCount() || ySplit >= worksheet.getRowCount()) return !1;\n        const redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ...params\n        }, undoMutationParams = $a6ab01cd18fda354$export$5322fc24b9ed099c(accessor, redoMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$53938c3f10334ebe.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$53938c3f10334ebe.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$53938c3f10334ebe.id,\n                    params: redoMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$9ef6401fd7f94002 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-frozen-cancel\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target, redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            startRow: -1,\n            startColumn: -1,\n            ySplit: 0,\n            xSplit: 0\n        }, undoMutationParams = $a6ab01cd18fda354$export$5322fc24b9ed099c(accessor, redoMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$53938c3f10334ebe.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$53938c3f10334ebe.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$53938c3f10334ebe.id,\n                    params: redoMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetRowVisibleUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: params.ranges\n    };\n}, \"SetRowVisibleUndoMutationFactory\"), $a6ab01cd18fda354$export$cd9a5b2737870ea6 = {\n    id: \"sheet.mutation.set-row-visible\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const manager = universheet.getSheetBySheetId(params.subUnitId).getRowManager();\n        for(let i = 0; i < params.ranges.length; i++){\n            const range = params.ranges[i];\n            for(let j = range.startRow; j < range.endRow + 1; j++){\n                const row = manager.getRowOrCreate(j);\n                row != null && (row.hd = 0);\n            }\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetRowHiddenUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    if (accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId) == null) throw new Error(\"universheet is null error!\");\n    return {\n        unitId: params.unitId,\n        subUnitId: params.subUnitId,\n        ranges: params.ranges\n    };\n}, \"SetRowHiddenUndoMutationFactory\"), $a6ab01cd18fda354$export$3c29e82821fa0859 = {\n    id: \"sheet.mutation.set-row-hidden\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) throw new Error(\"universheet is null error!\");\n        const manager = universheet.getSheetBySheetId(params.subUnitId).getRowManager();\n        for(let i = 0; i < params.ranges.length; i++){\n            const range = params.ranges[i];\n            for(let j = range.startRow; j < range.endRow + 1; j++){\n                const row = manager.getRowOrCreate(j);\n                row != null && (row.hd = 1);\n            }\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$cd6eb72fd660fbe5 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-specific-rows-visible\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c;\n        const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params, commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), {\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n        if (!target) return !1;\n        const { worksheet: worksheet } = target, redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        }, setSelectionOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            reveal: !0,\n            selections: ranges.map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetRowVisibleUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            selections: $a6ab01cd18fda354$var$getSelectionsAfterHiding(ranges).map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, result = (0, $7yNYd.sequenceExecute)([\n            {\n                id: $a6ab01cd18fda354$export$cd9a5b2737870ea6.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionOperationParams\n            }\n        ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$cd6eb72fd660fbe5.id,\n            params: params\n        }), interceptedResult = (0, $7yNYd.sequenceExecute)([\n            ...intercepted.redos\n        ], commandService);\n        return result.result && interceptedResult.result && undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_a20 = intercepted.preUndos) != null ? _a20 : [],\n                {\n                    id: $a6ab01cd18fda354$export$3c29e82821fa0859.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: undoSetSelectionsOperationParams\n                },\n                ...(_b = intercepted.undos) != null ? _b : []\n            ],\n            redoMutations: [\n                ...(_c = intercepted.preRedos) != null ? _c : [],\n                {\n                    id: $a6ab01cd18fda354$export$cd9a5b2737870ea6.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: setSelectionOperationParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$f9d8ad03a7b6f57d = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-selected-rows-visible\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), commandService = accessor.get((0, $7yNYd.ICommandService)), ranges = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range).filter((r)=>r.rangeType === (0, $7yNYd.RANGE_TYPE).ROW);\n        if (!(ranges != null && ranges.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target, hiddenRanges = ranges.map((r)=>worksheet.getHiddenRows(r.startRow, r.endRow)).flat();\n        return commandService.executeCommand($a6ab01cd18fda354$export$cd6eb72fd660fbe5.id, {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: hiddenRanges\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$43c65aeb5025fc3d = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-rows-hidden\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d, _e, _f;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd);\n        let ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range).filter((r)=>r.rangeType === (0, $7yNYd.RANGE_TYPE).ROW);\n        if (!(ranges != null && ranges.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        ranges = $a6ab01cd18fda354$var$divideRangesByHiddenRows(target.worksheet, ranges);\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet } = target, redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        }, setSelectionOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            selections: $a6ab01cd18fda354$var$getSelectionsAfterHiding(ranges).map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetRowHiddenUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            reveal: !0,\n            selections: ranges.map((range)=>({\n                    range: range,\n                    primary: $a6ab01cd18fda354$export$d262ae8015daf961(range, worksheet),\n                    style: null\n                }))\n        }, intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$43c65aeb5025fc3d.id,\n            params: redoMutationParams\n        });\n        return (0, $7yNYd.sequenceExecute)([\n            ...(_c = intercepted.preRedos) != null ? _c : [],\n            {\n                id: $a6ab01cd18fda354$export$3c29e82821fa0859.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionOperationParams\n            },\n            ...intercepted.redos\n        ], commandService).result && undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_d = intercepted.preUndos) != null ? _d : [],\n                {\n                    id: $a6ab01cd18fda354$export$cd9a5b2737870ea6.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: undoSetSelectionsOperationParams\n                },\n                ...(_e = intercepted.undos) != null ? _e : []\n            ],\n            redoMutations: [\n                ...(_f = intercepted.preRedos) != null ? _f : [],\n                {\n                    id: $a6ab01cd18fda354$export$3c29e82821fa0859.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                    params: setSelectionOperationParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0;\n    }, \"handler\")\n};\nfunction $a6ab01cd18fda354$var$divideRangesByHiddenRows(worksheet, ranges) {\n    const endCol = worksheet.getMaxColumns() - 1, hiddenRows = worksheet.getHiddenRows(), divided = [];\n    return ranges.forEach((range)=>{\n        const hiddenRowsInThisRange = hiddenRows.filter((r)=>r.startRow >= range.startRow && r.endRow <= range.endRow);\n        if (hiddenRowsInThisRange.length) {\n            let startRow = range.startRow;\n            hiddenRowsInThisRange.forEach((hiddenRange)=>{\n                hiddenRange.startRow > startRow && (divided.push({\n                    startRow: startRow,\n                    endRow: hiddenRange.startRow - 1,\n                    startColumn: 0,\n                    endColumn: endCol\n                }), startRow = hiddenRange.endRow + 1);\n            }), startRow <= range.endRow && divided.push({\n                startRow: startRow,\n                endRow: range.endRow,\n                startColumn: 0,\n                endColumn: endCol\n            });\n        } else divided.push(range);\n    }), divided;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$divideRangesByHiddenRows, \"divideRangesByHiddenRows\");\nfunction $a6ab01cd18fda354$var$getSelectionsAfterHiding(ranges) {\n    return $a6ab01cd18fda354$var$mergeSelections(ranges).map((range)=>{\n        const row = range.startRow === 0 ? range.endRow + 1 : range.startRow - 1;\n        return {\n            ...range,\n            startRow: row,\n            endRow: row\n        };\n    });\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getSelectionsAfterHiding, \"getSelectionsAfterHiding\");\nfunction $a6ab01cd18fda354$var$mergeSelections(ranges) {\n    const merged = [];\n    let current;\n    return ranges.sort((a, b)=>a.startRow - b.startRow).forEach((range)=>{\n        if (!current) {\n            current = range;\n            return;\n        }\n        range.startRow === current.endRow + 1 ? current.endRow = range.endRow : (merged.push(current), current = range);\n    }), merged.push(current), merged;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$mergeSelections, \"mergeSelections\");\nconst $a6ab01cd18fda354$export$9cffecb7e319b589 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-style\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet } = target, { range: range, style: style } = params, commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), ranges = range ? [\n            range\n        ] : (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(ranges != null && ranges.length)) return !1;\n        const cellValue = new (0, $7yNYd.ObjectMatrix)(), iterator = $a6ab01cd18fda354$var$createRangeIteratorWithSkipFilteredRows(worksheet);\n        if ((0, $7yNYd.Tools).isArray(style.value)) for(let i = 0; i < ranges.length; i++)iterator.forOperableEach(ranges[i], (r, c, range2)=>{\n            cellValue.setValue(r, c, {\n                s: {\n                    [style.type]: style.value[r - range2.startRow][c - range2.startColumn]\n                }\n            });\n        });\n        else for(let i = 0; i < ranges.length; i++){\n            const styleObj = {\n                s: {\n                    [style.type]: style.value\n                }\n            };\n            iterator.forOperableEach(ranges[i], (r, c)=>cellValue.setValue(r, c, styleObj));\n        }\n        const setRangeValuesMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            cellValue: cellValue.getMatrix()\n        }, undoSetRangeValuesMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, setRangeValuesMutationParams), setRangeValuesResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$ce2b970bc67fd9bc.id, setRangeValuesMutationParams), { undos: undos, redos: redos } = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$9cffecb7e319b589.id,\n            params: params\n        }), result = (0, $7yNYd.sequenceExecute)([\n            ...redos\n        ], commandService);\n        return setRangeValuesResult && result.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: undoSetRangeValuesMutationParams\n                },\n                ...undos\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                    params: setRangeValuesMutationParams\n                },\n                ...redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$fcd4779b7d44992e = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-bold\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selection = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentLastSelection();\n        if (!selection) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet } = target, { actualRow: actualRow, actualColumn: actualColumn } = selection.primary, setStyleParams = {\n            style: {\n                type: \"bl\",\n                value: worksheet.getRange(actualRow, actualColumn).getFontWeight() === (0, $7yNYd.FontWeight).BOLD ? (0, $7yNYd.BooleanNumber).FALSE : (0, $7yNYd.BooleanNumber).TRUE\n            }\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$62cc81ebc1adf0c0 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-italic\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selection = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentLastSelection();\n        if (!selection) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet } = target;\n        let currentlyItalic = !0;\n        if (selection.primary) {\n            const { startRow: startRow, startColumn: startColumn } = selection.primary;\n            currentlyItalic = worksheet.getRange(startRow, startColumn).getFontStyle() === (0, $7yNYd.FontItalic).ITALIC;\n        }\n        const setStyleParams = {\n            style: {\n                type: \"it\",\n                value: currentlyItalic ? (0, $7yNYd.BooleanNumber).FALSE : (0, $7yNYd.BooleanNumber).TRUE\n            }\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d73220315f6006b0 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-underline\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selection = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentLastSelection();\n        if (!selection) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet } = target;\n        let currentlyUnderline = !0;\n        selection.primary && (currentlyUnderline = !!worksheet.getRange(selection.primary.startRow, selection.primary.startColumn).getUnderline().s);\n        const setStyleParams = {\n            style: {\n                type: \"ul\",\n                value: {\n                    s: currentlyUnderline ? (0, $7yNYd.BooleanNumber).FALSE : (0, $7yNYd.BooleanNumber).TRUE\n                }\n            }\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$b47ba15c2325965 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-stroke\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selection = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentLastSelection();\n        if (!selection) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet } = target;\n        let currentlyStrokeThrough = !0;\n        selection.primary && (currentlyStrokeThrough = !!worksheet.getRange(selection.primary.actualRow, selection.primary.actualColumn).getStrikeThrough().s);\n        const setStyleParams = {\n            style: {\n                type: \"st\",\n                value: {\n                    s: currentlyStrokeThrough ? (0, $7yNYd.BooleanNumber).FALSE : (0, $7yNYd.BooleanNumber).TRUE\n                }\n            }\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$9d6aff08c96b5dd5 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-overline\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const selection = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentLastSelection();\n        if (!selection) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet } = target;\n        let currentlyOverline = !0;\n        selection.primary && (currentlyOverline = !!worksheet.getRange(selection.primary.startRow, selection.primary.startColumn).getOverline().s);\n        const setStyleParams = {\n            style: {\n                type: \"ol\",\n                value: {\n                    s: currentlyOverline ? (0, $7yNYd.BooleanNumber).FALSE : (0, $7yNYd.BooleanNumber).TRUE\n                }\n            }\n        };\n        return accessor.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$ccba6435a44dd342 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-font-family\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"ff\",\n                value: params.value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$6c990a7fddcbc14 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-font-size\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"fs\",\n                value: params.value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$c56b7ba3eac73a9a = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-text-color\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params || !params.value) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"cl\",\n                value: {\n                    rgb: params.value\n                }\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$505a7a28d0b2a05f = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.reset-text-color\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"cl\",\n                value: {\n                    rgb: null\n                }\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$b9eaa6f3442e5c9 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-background-color\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params || !params.value) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"bg\",\n                value: {\n                    rgb: params.value\n                }\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$ac505b0e9caa44ae = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.reset-background-color\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"bg\",\n                value: {\n                    rgb: null\n                }\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$be9c36d6210442d6 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-vertical-text-align\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            unitId: params.unitId,\n            subUnitId: params.subUnitId,\n            range: params.range,\n            style: {\n                type: \"vt\",\n                value: params.value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d38e4b7aa167ef86 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-horizontal-text-align\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            unitId: params.unitId,\n            subUnitId: params.subUnitId,\n            range: params.range,\n            style: {\n                type: \"ht\",\n                value: params.value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$e7dec73a8fd68842 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-text-wrap\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            unitId: params.unitId,\n            subUnitId: params.subUnitId,\n            range: params.range,\n            style: {\n                type: \"tb\",\n                value: params.value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$4da426d8a922db92 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-text-rotation\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        if (!params) return !1;\n        const value = typeof params.value == \"number\" ? {\n            a: params.value\n        } : {\n            a: 0,\n            v: (0, $7yNYd.BooleanNumber).TRUE\n        }, commandService = accessor.get((0, $7yNYd.ICommandService)), setStyleParams = {\n            style: {\n                type: \"tr\",\n                value: value\n            }\n        };\n        return commandService.executeCommand($a6ab01cd18fda354$export$9cffecb7e319b589.id, setStyleParams);\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetTabColorUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const oldTabColor = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().tabColor;\n    return {\n        ...(0, $7yNYd.Tools).deepClone(params),\n        color: oldTabColor\n    };\n}, \"SetTabColorUndoMutationFactory\"), $a6ab01cd18fda354$export$6960e50bd58ae80b = {\n    id: \"sheet.mutation.set-tab-color\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!workbook) return !1;\n        const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n        return worksheet ? (worksheet.getConfig().tabColor = params.color, !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$f72721d432fc9567 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-tab-color\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target, setTabColorMutationParams = {\n            color: params.value,\n            unitId: unitId,\n            subUnitId: subUnitId\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetTabColorUndoMutationFactory(accessor, setTabColorMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$6960e50bd58ae80b.id, setTabColorMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$6960e50bd58ae80b.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$6960e50bd58ae80b.id,\n                    params: setTabColorMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$501905adef850859 = {\n    id: \"sheet.operation.set-worksheet-active\",\n    type: (0, $7yNYd.CommandType).OPERATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!workbook) return !1;\n        const worksheets = workbook.getWorksheets();\n        for (const [, worksheet] of worksheets)if (worksheet.getSheetId() === params.subUnitId) return workbook.setActiveSheet(worksheet), !0;\n        return !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SET_WORKSHEET_ACTIVE_DELAY = 4, $a6ab01cd18fda354$export$142e5a7a79066467 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-activate\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params, options)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target;\n        return new Promise((resolve)=>{\n            setTimeout(()=>{\n                const result = commandService.syncExecuteCommand($a6ab01cd18fda354$export$501905adef850859.id, {\n                    unitId: unitId,\n                    subUnitId: subUnitId\n                }, options);\n                resolve(result);\n            }, $a6ab01cd18fda354$var$SET_WORKSHEET_ACTIVE_DELAY);\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$503c2e26f8f4a02a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, worksheet)=>{\n    const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params, colWidth = {}, manager = worksheet.getColumnManager();\n    for(let i = 0; i < ranges.length; i++){\n        const range = ranges[i];\n        for(let j = range.startColumn; j < range.endColumn + 1; j++){\n            const column = manager.getColumnOrCreate(j);\n            colWidth[j] = column.w;\n        }\n    }\n    return {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        ranges: ranges,\n        colWidth: colWidth\n    };\n}, \"SetWorksheetColWidthMutationFactory\"), $a6ab01cd18fda354$export$7067bfb95d30a5c3 = {\n    id: \"sheet.mutation.set-worksheet-col-width\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { worksheet: worksheet } = target, defaultColumnWidth = worksheet.getConfig().defaultColumnWidth, manager = worksheet.getColumnManager(), ranges = params.ranges;\n        for(let i = 0; i < ranges.length; i++){\n            const range = ranges[i];\n            for(let j = range.startColumn; j < range.endColumn + 1; j++){\n                const column = manager.getColumnOrCreate(j);\n                typeof params.colWidth == \"number\" ? column.w = params.colWidth : column.w = (_a20 = params.colWidth[j]) != null ? _a20 : defaultColumnWidth;\n            }\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$1cd66c761d533521 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.delta-column-width\",\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const selections = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections();\n        if (!(selections != null && selections.length)) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target, { anchorCol: anchorCol, deltaX: deltaX } = params, destColumnWidth = worksheet.getColumnWidth(anchorCol) + deltaX, isAllSheetRange = selections.length === 1 && selections[0].range.rangeType === (0, $7yNYd.RANGE_TYPE).ALL, colSelections = selections.filter((s)=>s.range.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN), rangeType = isAllSheetRange ? (0, $7yNYd.RANGE_TYPE).ALL : colSelections.some(({ range: range })=>{\n            const { startColumn: startColumn, endColumn: endColumn } = range;\n            return startColumn <= anchorCol && anchorCol <= endColumn;\n        }) ? (0, $7yNYd.RANGE_TYPE).COLUMN : (0, $7yNYd.RANGE_TYPE).NORMAL;\n        let redoMutationParams;\n        if (rangeType === (0, $7yNYd.RANGE_TYPE).ALL) {\n            const rowCount = worksheet.getRowCount(), allColRanges = new Array(worksheet.getColumnCount()).fill(void 0).map((_, index)=>({\n                    startRow: 0,\n                    endRow: rowCount - 1,\n                    startColumn: index,\n                    endColumn: index\n                }));\n            redoMutationParams = {\n                subUnitId: subUnitId,\n                unitId: unitId,\n                colWidth: destColumnWidth,\n                ranges: allColRanges\n            };\n        } else rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN ? redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            ranges: colSelections.map((s)=>(0, $7yNYd.Rectangle).clone(s.range)),\n            colWidth: destColumnWidth\n        } : redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            colWidth: destColumnWidth,\n            ranges: [\n                {\n                    startRow: 0,\n                    endRow: worksheet.getMaxRows() - 1,\n                    startColumn: anchorCol,\n                    endColumn: anchorCol\n                }\n            ]\n        };\n        const { undos: undos, redos: redos } = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$1cd66c761d533521.id,\n            params: redoMutationParams\n        }), undoMutationParams = $a6ab01cd18fda354$export$503c2e26f8f4a02a(redoMutationParams, worksheet), setColWidthResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$7067bfb95d30a5c3.id, redoMutationParams), result = (0, $7yNYd.sequenceExecute)([\n            ...redos\n        ], commandService);\n        return setColWidthResult && result.result && undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$7067bfb95d30a5c3.id,\n                    params: undoMutationParams\n                },\n                ...undos\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$7067bfb95d30a5c3.id,\n                    params: redoMutationParams\n                },\n                ...redos\n            ]\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$9b7975fb84f597d5 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-col-width\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), selections = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { subUnitId: subUnitId, unitId: unitId, worksheet: worksheet } = target, redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            ranges: selections,\n            colWidth: params.value\n        }, undoMutationParams = $a6ab01cd18fda354$export$503c2e26f8f4a02a(redoMutationParams, worksheet), setColWidthResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$7067bfb95d30a5c3.id, redoMutationParams), { undos: undos, redos: redos } = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$9b7975fb84f597d5.id,\n            params: redoMutationParams\n        }), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$9b7975fb84f597d5.id,\n            params: redoMutationParams\n        }), result = (0, $7yNYd.sequenceExecute)([\n            ...redos,\n            ...intercepted.redos\n        ], commandService);\n        return setColWidthResult && result.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_c = intercepted.preUndos) != null ? _c : [],\n                {\n                    id: $a6ab01cd18fda354$export$7067bfb95d30a5c3.id,\n                    params: undoMutationParams\n                },\n                ...undos\n            ],\n            redoMutations: [\n                ...(_d = intercepted.preRedos) != null ? _d : [],\n                {\n                    id: $a6ab01cd18fda354$export$7067bfb95d30a5c3.id,\n                    params: redoMutationParams\n                },\n                ...redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetWorksheetHideMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const target = $a6ab01cd18fda354$export$2d3c286eac9e190d(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n    if (!target) throw new Error(\"[SetWorksheetHideMutationFactory]: worksheet is null error!\");\n    const { worksheet: worksheet } = target;\n    return {\n        hidden: worksheet.isSheetHidden(),\n        unitId: params.unitId,\n        subUnitId: worksheet.getSheetId()\n    };\n}, \"SetWorksheetHideMutationFactory\"), $a6ab01cd18fda354$export$b76d76b975841359 = {\n    id: \"sheet.mutation.set-worksheet-hidden\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) return !1;\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        return worksheet ? (worksheet.getConfig().hidden = params.hidden, !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$8d71c14db4ec832e = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-hidden\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), errorService = accessor.get((0, $7yNYd.ErrorService)), localeService = accessor.get((0, $7yNYd.LocaleService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { workbook: workbook, worksheet: worksheet, unitId: unitId, subUnitId: subUnitId } = target;\n        if (worksheet.getConfig().hidden === (0, $7yNYd.BooleanNumber).TRUE) return !1;\n        const redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            hidden: (0, $7yNYd.BooleanNumber).TRUE\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetHideMutationFactory(accessor, redoMutationParams);\n        return workbook.getSheets().filter((sheet)=>sheet.getConfig().hidden === (0, $7yNYd.BooleanNumber).FALSE).length === 1 ? (errorService.emit(localeService.t(\"sheets.info.hideSheet\")), !1) : commandService.syncExecuteCommand($a6ab01cd18fda354$export$b76d76b975841359.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$b76d76b975841359.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$b76d76b975841359.id,\n                    params: redoMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetWorksheetNameMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const target = $a6ab01cd18fda354$export$2d3c286eac9e190d(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n    if (!target) throw new Error(\"[SetWorksheetNameMutationFactory]: worksheet is null error!\");\n    const { worksheet: worksheet } = target;\n    return {\n        unitId: params.unitId,\n        name: worksheet.getName(),\n        subUnitId: worksheet.getSheetId()\n    };\n}, \"SetWorksheetNameMutationFactory\"), $a6ab01cd18fda354$export$762d92ef19bd482a = {\n    id: \"sheet.mutation.set-worksheet-name\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const universheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (universheet == null) return !1;\n        const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n        return worksheet ? (worksheet.getConfig().name = params.name, !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$e4b39c021c550afa = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-name\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target, redoMutationParams = {\n            subUnitId: subUnitId,\n            name: params.name,\n            unitId: unitId\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetNameMutationFactory(accessor, redoMutationParams), interceptorCommands = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$e4b39c021c550afa.id,\n            params: params\n        }), redos = [\n            ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n            {\n                id: $a6ab01cd18fda354$export$762d92ef19bd482a.id,\n                params: redoMutationParams\n            },\n            ...interceptorCommands.redos\n        ], undos = [\n            ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n            {\n                id: $a6ab01cd18fda354$export$762d92ef19bd482a.id,\n                params: undoMutationParams\n            },\n            ...interceptorCommands.undos\n        ];\n        return await (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetWorksheetOrderUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>({\n        ...(0, $7yNYd.Tools).deepClone(params),\n        toOrder: params.fromOrder,\n        fromOrder: params.toOrder\n    }), \"SetWorksheetOrderUndoMutationFactory\"), $a6ab01cd18fda354$export$a7f050925a81e492 = {\n    id: \"sheet.mutation.set-worksheet-order\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!workbook) return !1;\n        const config = workbook.getConfig();\n        return config.sheetOrder.splice(params.fromOrder, 1), config.sheetOrder.splice(params.toOrder, 0, params.subUnitId), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$cd24df42925f927 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-order\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { workbook: workbook, unitId: unitId, subUnitId: subUnitId } = target, setWorksheetOrderMutationParams = {\n            fromOrder: workbook.getConfig().sheetOrder.indexOf(subUnitId),\n            toOrder: params.order,\n            unitId: unitId,\n            subUnitId: subUnitId\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetOrderUndoMutationFactory(accessor, setWorksheetOrderMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$a7f050925a81e492.id, setWorksheetOrderMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$a7f050925a81e492.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$a7f050925a81e492.id,\n                    params: setWorksheetOrderMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$MAXIMUM_ROW_HEIGHT = 2e3, $a6ab01cd18fda354$var$SetWorksheetRowHeightMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, worksheet)=>{\n    const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params, rowHeight = {}, manager = worksheet.getRowManager();\n    for (const { startRow: startRow, endRow: endRow } of ranges)for(let rowIndex = startRow; rowIndex < endRow + 1; rowIndex++){\n        const row = manager.getRowOrCreate(rowIndex);\n        rowHeight[rowIndex] = row.h;\n    }\n    return {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        ranges: ranges,\n        rowHeight: rowHeight\n    };\n}, \"SetWorksheetRowHeightMutationFactory\"), $a6ab01cd18fda354$var$SetWorksheetRowIsAutoHeightMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, worksheet)=>{\n    const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params, autoHeightHash = {}, manager = worksheet.getRowManager();\n    for (const { startRow: startRow, endRow: endRow } of ranges)for(let rowIndex = startRow; rowIndex <= endRow; rowIndex++){\n        const row = manager.getRowOrCreate(rowIndex);\n        autoHeightHash[rowIndex] = row.ia;\n    }\n    return {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        ranges: ranges,\n        autoHeightInfo: autoHeightHash\n    };\n}, \"SetWorksheetRowIsAutoHeightMutationFactory\"), $a6ab01cd18fda354$export$32c91805fe2ce11a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, worksheet)=>{\n    const { unitId: unitId, subUnitId: subUnitId, rowsAutoHeightInfo: rowsAutoHeightInfo } = params, results = [], manager = worksheet.getRowManager();\n    for (const rowInfo of rowsAutoHeightInfo){\n        const { row: row } = rowInfo, { ah: ah } = manager.getRowOrCreate(row);\n        results.push({\n            row: row,\n            autoHeight: ah\n        });\n    }\n    return {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        rowsAutoHeightInfo: results\n    };\n}, \"SetWorksheetRowAutoHeightMutationFactory\"), $a6ab01cd18fda354$export$d7b494254bbf476f = {\n    id: \"sheet.mutation.set-worksheet-row-height\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const { ranges: ranges, rowHeight: rowHeight } = params, univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { worksheet: worksheet } = target, manager = worksheet.getRowManager(), defaultRowHeight = worksheet.getConfig().defaultRowHeight;\n        for (const { startRow: startRow, endRow: endRow } of ranges)for(let rowIndex = startRow; rowIndex <= endRow; rowIndex++){\n            const row = manager.getRowOrCreate(rowIndex);\n            typeof rowHeight == \"number\" ? row.h = rowHeight : row.h = (_a20 = rowHeight[rowIndex]) != null ? _a20 : defaultRowHeight, row.h = Math.min($a6ab01cd18fda354$var$MAXIMUM_ROW_HEIGHT, row.h);\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$784e15c60e3adf6c = {\n    id: \"sheet.mutation.set-worksheet-row-is-auto-height\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20;\n        const { ranges: ranges, autoHeightInfo: autoHeightInfo } = params, univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const manager = target.worksheet.getRowManager();\n        for (const { startRow: startRow, endRow: endRow } of ranges)for(let rowIndex = startRow; rowIndex <= endRow; rowIndex++){\n            const row = manager.getRowOrCreate(rowIndex);\n            typeof autoHeightInfo == \"number\" ? row.ia = autoHeightInfo : row.ia = (_a20 = autoHeightInfo[rowIndex]) != null ? _a20 : void 0;\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$92a6672d4df31cfb = {\n    id: \"sheet.mutation.set-worksheet-row-auto-height\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { rowsAutoHeightInfo: rowsAutoHeightInfo } = params, univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const rowManager = target.worksheet.getRowManager();\n        for (const { row: row, autoHeight: autoHeight } of rowsAutoHeightInfo){\n            const curRow = rowManager.getRowOrCreate(row);\n            curRow.ah = autoHeight;\n        }\n        return !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$697e2e139da9fb66 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.delta-row-height\",\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const selections = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections(), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd);\n        if (!(selections != null && selections.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)));\n        if (!target) return !1;\n        const { worksheet: worksheet, subUnitId: subUnitId, unitId: unitId } = target, { anchorRow: anchorRow, deltaY: deltaY } = params, destRowHeight = worksheet.getRowHeight(anchorRow) + deltaY, isAllSheetRange = selections.length === 1 && selections[0].range.rangeType === (0, $7yNYd.RANGE_TYPE).ALL, rowSelections = selections.filter((s)=>s.range.rangeType === (0, $7yNYd.RANGE_TYPE).ROW), rangeType = isAllSheetRange ? (0, $7yNYd.RANGE_TYPE).ALL : rowSelections.some(({ range: range })=>{\n            const { startRow: startRow, endRow: endRow } = range;\n            return startRow <= anchorRow && anchorRow <= endRow;\n        }) ? (0, $7yNYd.RANGE_TYPE).ROW : (0, $7yNYd.RANGE_TYPE).NORMAL;\n        let redoMutationParams;\n        if (rangeType === (0, $7yNYd.RANGE_TYPE).ALL) {\n            const colCount = worksheet.getRowCount(), allRowRanges = new Array(worksheet.getColumnCount()).fill(void 0).map((_, index)=>({\n                    startRow: index,\n                    endRow: index,\n                    startColumn: 0,\n                    endColumn: colCount - 1\n                }));\n            redoMutationParams = {\n                subUnitId: subUnitId,\n                unitId: unitId,\n                rowHeight: destRowHeight,\n                ranges: allRowRanges\n            };\n        } else rangeType === (0, $7yNYd.RANGE_TYPE).ROW ? redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            ranges: rowSelections.map((s)=>(0, $7yNYd.Rectangle).clone(s.range)),\n            rowHeight: destRowHeight\n        } : redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            rowHeight: destRowHeight,\n            ranges: [\n                {\n                    startRow: anchorRow,\n                    endRow: anchorRow,\n                    startColumn: 0,\n                    endColumn: worksheet.getMaxColumns() - 1\n                }\n            ]\n        };\n        const undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetRowHeightMutationFactory(redoMutationParams, worksheet), redoSetIsAutoHeightParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: redoMutationParams.ranges,\n            autoHeightInfo: (0, $7yNYd.BooleanNumber).FALSE\n        }, undoSetIsAutoHeightParams = $a6ab01cd18fda354$var$SetWorksheetRowIsAutoHeightMutationFactory(redoSetIsAutoHeightParams, worksheet), commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$697e2e139da9fb66.id,\n            params: redoMutationParams\n        }), result = (0, $7yNYd.sequenceExecute)([\n            {\n                id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                params: redoSetIsAutoHeightParams\n            }\n        ], commandService), interceptedResult = (0, $7yNYd.sequenceExecute)([\n            ...intercepted.redos\n        ], commandService);\n        return result.result && interceptedResult.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_a20 = intercepted.preUndos) != null ? _a20 : [],\n                {\n                    id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: undoSetIsAutoHeightParams\n                },\n                ...intercepted.undos\n            ],\n            redoMutations: [\n                ...(_b = intercepted.preRedos) != null ? _b : [],\n                {\n                    id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: redoSetIsAutoHeightParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$64cc91dade2db478 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-row-height\",\n    // eslint-disable-next-line max-lines-per-function\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20, _b, _c, _d;\n        const selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), sheetInterceptorService = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd), selections = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet } = target, redoMutationParams = {\n            subUnitId: subUnitId,\n            unitId: unitId,\n            ranges: selections,\n            rowHeight: params.value\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetRowHeightMutationFactory(redoMutationParams, worksheet), redoSetIsAutoHeightParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: redoMutationParams.ranges,\n            autoHeightInfo: (0, $7yNYd.BooleanNumber).FALSE\n        }, undoSetIsAutoHeightParams = $a6ab01cd18fda354$var$SetWorksheetRowIsAutoHeightMutationFactory(redoSetIsAutoHeightParams, worksheet), result = (0, $7yNYd.sequenceExecute)([\n            {\n                id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                params: redoMutationParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                params: redoSetIsAutoHeightParams\n            }\n        ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n            id: $a6ab01cd18fda354$export$64cc91dade2db478.id,\n            params: redoMutationParams\n        }), sheetInterceptorResult = (0, $7yNYd.sequenceExecute)([\n            ...intercepted.redos\n        ], commandService);\n        return result.result && sheetInterceptorResult.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                ...(_c = intercepted.preRedos) != null ? _c : [],\n                {\n                    id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                    params: undoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: undoSetIsAutoHeightParams\n                },\n                ...intercepted.undos\n            ],\n            redoMutations: [\n                ...(_d = intercepted.preRedos) != null ? _d : [],\n                {\n                    id: $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n                    params: redoMutationParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: redoSetIsAutoHeightParams\n                },\n                ...intercepted.redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$dabde38fe174e661 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-row-is-auto-height\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20, _b;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), selectionManagerService = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, worksheet: worksheet } = target, ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range);\n        if (!(ranges != null && ranges.length)) return !1;\n        const redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges,\n            autoHeightInfo: (0, $7yNYd.BooleanNumber).TRUE\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetRowIsAutoHeightMutationFactory(redoMutationParams, worksheet), setIsAutoHeightResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$784e15c60e3adf6c.id, redoMutationParams), { undos: undos, redos: redos } = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$dabde38fe174e661.id,\n            params: redoMutationParams\n        }), result = (0, $7yNYd.sequenceExecute)([\n            ...redos\n        ], commandService);\n        return setIsAutoHeightResult && result.result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: undoMutationParams\n                },\n                ...undos\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n                    params: redoMutationParams\n                },\n                ...redos\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$5ff56b48d076a99 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-show\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId } = params, commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService));\n        if (!$a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)))) return !1;\n        const workbook = univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const worksheet = workbook.getSheetBySheetId(subUnitId);\n        if (!worksheet || worksheet.getConfig().hidden === (0, $7yNYd.BooleanNumber).FALSE) return !1;\n        const redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            hidden: (0, $7yNYd.BooleanNumber).FALSE\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetHideMutationFactory(accessor, redoMutationParams), result = commandService.syncExecuteCommand($a6ab01cd18fda354$export$b76d76b975841359.id, redoMutationParams), activeSheetMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId\n        }, activeResult = commandService.syncExecuteCommand($a6ab01cd18fda354$export$501905adef850859.id, activeSheetMutationParams);\n        return result && activeResult ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$b76d76b975841359.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                // { id: SetWorksheetActiveOperation.id, params: activeSheetMutationParams },\n                {\n                    id: $a6ab01cd18fda354$export$b76d76b975841359.id,\n                    params: redoMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d5d7a51306afc4cd = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((ranges)=>{\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    return ranges.forEach((range)=>{\n        (0, $7yNYd.Range).foreach(range, (row, col)=>{\n            matrix.setValue(row, col, 1);\n        });\n    }), matrix.forValue((row, col)=>{\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        theLastRowValue && matrix.setValue(row, col, theLastRowValue + 1);\n    }), matrix;\n}, \"createTopMatrixFromRanges\"), $a6ab01cd18fda354$export$b9565e21fc0540ee = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((matrix)=>{\n    const _matrix = matrix;\n    return _matrix.forValue((row, col)=>{\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        theLastRowValue && _matrix.setValue(row, col, theLastRowValue + 1);\n    }), _matrix;\n}, \"createTopMatrixFromMatrix\"), $a6ab01cd18fda354$var$findMaximalRectangle = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((topMatrix)=>{\n    const res = {\n        area: 0\n    }, checkArea = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((area, range)=>res.area < area ? (res.area = area, res.range = range, !0) : !1, \"checkArea\");\n    return topMatrix.forValue((row, col, lineArea)=>{\n        let cols = 1, rows = lineArea;\n        checkArea(cols * rows, {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: col,\n            endColumn: col\n        });\n        const _range = {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: 0,\n            endColumn: col\n        };\n        for(let k = col - 1; k >= 0 && topMatrix.getValue(row, k); k--){\n            rows = Math.min(topMatrix.getValue(row, k) || 0, rows), cols++;\n            const area = rows * cols;\n            _range.startColumn = k, _range.startRow = row - rows + 1, checkArea(area, _range);\n        }\n    }), res;\n}, \"findMaximalRectangle\"), $a6ab01cd18fda354$var$filterLeftMatrix = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((topMatrix, range)=>{\n    (0, $7yNYd.Range).foreach(range, (row, col)=>{\n        topMatrix.realDeleteValue(row, col);\n    });\n    for(let col = range.startColumn; col <= range.endColumn; col++){\n        const row = range.endRow + 1;\n        if (topMatrix.getValue(row, col) > 0) {\n            topMatrix.setValue(row, col, 1);\n            let nextRow = row + 1;\n            for(; topMatrix.getValue(nextRow, col) > 0;)topMatrix.setValue(nextRow, col, topMatrix.getValue(nextRow - 1, col) + 1), nextRow++;\n        }\n    }\n    return topMatrix;\n}, \"filterLeftMatrix\"), $a6ab01cd18fda354$export$5cfa489dfdaba902 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((topMatrix)=>{\n    const resultList = [];\n    let result = $a6ab01cd18fda354$var$findMaximalRectangle(topMatrix);\n    for(; result.area > 0;)result.range && (resultList.push(result.range), $a6ab01cd18fda354$var$filterLeftMatrix(topMatrix, result.range)), result = $a6ab01cd18fda354$var$findMaximalRectangle(topMatrix);\n    return resultList;\n}, \"findAllRectangle\"), $a6ab01cd18fda354$export$63533e2fd9408d74 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((ranges)=>{\n    const topMatrix = $a6ab01cd18fda354$export$d5d7a51306afc4cd(ranges);\n    return $a6ab01cd18fda354$export$5cfa489dfdaba902(topMatrix);\n}, \"rangeMerge\"), $a6ab01cd18fda354$var$_RangeMergeUtil = class _RangeMergeUtil {\n    constructor(){\n        $a6ab01cd18fda354$var$__publicField(this, \"_matrix\", new (0, $7yNYd.ObjectMatrix)());\n    }\n    add(...ranges) {\n        return ranges.forEach((range)=>{\n            (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                this._matrix.setValue(row, col, 1);\n            });\n        }), this;\n    }\n    subtract(...ranges) {\n        return ranges.forEach((range)=>{\n            (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                this._matrix.realDeleteValue(row, col);\n            });\n        }), this;\n    }\n    merge() {\n        const topMatrix = $a6ab01cd18fda354$export$b9565e21fc0540ee(this._matrix);\n        return $a6ab01cd18fda354$export$5cfa489dfdaba902(topMatrix);\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_RangeMergeUtil, \"RangeMergeUtil\");\nlet $a6ab01cd18fda354$export$4eb7a9accf5bc05a = $a6ab01cd18fda354$var$_RangeMergeUtil;\nconst $a6ab01cd18fda354$export$6b26f3da37fc66b = (0, $7yNYd.createIdentifier)(\"INumfmtService\");\n(0, $7yNYd.runOnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$export$6b26f3da37fc66b);\nconst $a6ab01cd18fda354$export$c3197ad17fb285b8 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, option)=>{\n    const numfmtService = accessor.get($a6ab01cd18fda354$export$6b26f3da37fc66b), { values: values, unitId: unitId, subUnitId: subUnitId } = option, cells = [], removeCells = [];\n    Object.keys(values).forEach((id)=>{\n        values[id].ranges.forEach((range)=>{\n            (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n                oldNumfmt ? cells.push({\n                    pattern: oldNumfmt.pattern,\n                    row: row,\n                    col: col\n                }) : removeCells.push({\n                    startColumn: col,\n                    endColumn: col,\n                    startRow: row,\n                    endRow: row\n                });\n            });\n        });\n    });\n    const result = [];\n    if (cells.length) {\n        const params = $a6ab01cd18fda354$export$10465aad21b068c6(unitId, subUnitId, cells);\n        Object.keys(params.values).forEach((key)=>{\n            const v = params.values[key];\n            v.ranges = $a6ab01cd18fda354$export$63533e2fd9408d74(v.ranges);\n        }), result.push({\n            id: $a6ab01cd18fda354$export$2c6679f6ed39715b.id,\n            params: $a6ab01cd18fda354$export$10465aad21b068c6(unitId, subUnitId, cells)\n        });\n    }\n    return removeCells.length && result.push({\n        id: $a6ab01cd18fda354$export$c64e537472e00620.id,\n        params: {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: removeCells\n        }\n    }), result;\n}, \"factorySetNumfmtUndoMutation\"), $a6ab01cd18fda354$export$2c6679f6ed39715b = {\n    id: \"sheet.mutation.set.numfmt\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        if (!params) return !1;\n        const { values: values, refMap: refMap } = params, numfmtService = accessor.get($a6ab01cd18fda354$export$6b26f3da37fc66b), unitId = params.unitId, sheetId = params.subUnitId, setValues = Object.keys(values).reduce((result, id)=>{\n            const value = refMap[id], ranges = values[id].ranges;\n            return value && result.push({\n                ...value,\n                ranges: ranges\n            }), result;\n        }, []);\n        return numfmtService.setValues(unitId, sheetId, setValues), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$c64e537472e00620 = {\n    id: \"sheet.mutation.remove.numfmt\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        if (!params) return !1;\n        const { unitId: unitId, subUnitId: subUnitId, ranges: ranges } = params;\n        return accessor.get($a6ab01cd18fda354$export$6b26f3da37fc66b).deleteValues(unitId, subUnitId, ranges), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$ad722be3eb6dacf = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, option)=>{\n    const numfmtService = accessor.get($a6ab01cd18fda354$export$6b26f3da37fc66b), { ranges: ranges, unitId: unitId, subUnitId: subUnitId } = option, cells = [];\n    if (ranges.forEach((range)=>{\n        (0, $7yNYd.Range).foreach(range, (row, col)=>{\n            const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n            oldNumfmt && cells.push({\n                pattern: oldNumfmt.pattern,\n                row: row,\n                col: col\n            });\n        });\n    }), !cells.length) return [];\n    const params = $a6ab01cd18fda354$export$10465aad21b068c6(unitId, subUnitId, cells);\n    return Object.keys(params.values).forEach((key)=>{\n        const v = params.values[key];\n        v.ranges = $a6ab01cd18fda354$export$63533e2fd9408d74(v.ranges);\n    }), [\n        {\n            id: $a6ab01cd18fda354$export$2c6679f6ed39715b.id,\n            params: params\n        }\n    ];\n}, \"factoryRemoveNumfmtUndoMutation\"), $a6ab01cd18fda354$export$10465aad21b068c6 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, subUnitId, cells)=>{\n    const group = $a6ab01cd18fda354$var$groupByKey(cells, \"pattern\"), refMap = {}, values = {}, getKey = $a6ab01cd18fda354$var$createUniqueKey();\n    return Object.keys(group).forEach((pattern)=>{\n        const groupItem = group[pattern], key = getKey();\n        refMap[key] = {\n            pattern: pattern\n        }, groupItem.forEach((item)=>{\n            values[key] || (values[key] = {\n                ranges: []\n            }), values[key].ranges.push((0, $7yNYd.cellToRange)(item.row, item.col));\n        });\n    }), {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        refMap: refMap,\n        values: values\n    };\n}, \"transformCellsToRange\"), $a6ab01cd18fda354$export$18df70d41ccf159a = {\n    id: \"sheet.mutation.empty\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>!0, \"handler\")\n}, $a6ab01cd18fda354$export$61dcf9a1529f32fa = {\n    id: \"sheet.command.insert-defined-name\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService));\n        if (!params) return !1;\n        const insertSheetMutationParams = {\n            ...params\n        };\n        return commandService.syncExecuteCommand((0, $86b1c.SetDefinedNameMutation).id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: params.unitId,\n            undoMutations: [\n                {\n                    id: (0, $86b1c.RemoveDefinedNameMutation).id,\n                    params: insertSheetMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: (0, $86b1c.SetDefinedNameMutation).id,\n                    params: insertSheetMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$e90d872a06962b4e = {\n    id: \"sheet.command.remove-defined-name\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService));\n        if (!params) return !1;\n        const removeSheetMutationParams = {\n            ...params\n        };\n        return commandService.syncExecuteCommand((0, $86b1c.RemoveDefinedNameMutation).id, removeSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: params.unitId,\n            undoMutations: [\n                {\n                    id: (0, $86b1c.SetDefinedNameMutation).id,\n                    params: removeSheetMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: (0, $86b1c.RemoveDefinedNameMutation).id,\n                    params: removeSheetMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$6ed48c4ca74c384d = {\n    id: \"sheet.command.set-defined-name\",\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService));\n        return params && commandService.syncExecuteCommand((0, $86b1c.SetDefinedNameMutation).id, params.newDefinedName) ? (undoRedoService.pushUndoRedo({\n            unitID: params.unitId,\n            undoMutations: [\n                {\n                    id: (0, $86b1c.SetDefinedNameMutation).id,\n                    params: params.oldDefinedName\n                }\n            ],\n            redoMutations: [\n                {\n                    id: (0, $86b1c.SetDefinedNameMutation).id,\n                    params: params.newDefinedName\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$ee68545baad45289 = {\n    id: \"sheet.operation.scroll-to-cell\",\n    type: (0, $7yNYd.CommandType).OPERATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>!0, \"handler\")\n}, $a6ab01cd18fda354$export$f937a14ed9d9ffd1 = {\n    id: \"sheet.mutation.set-workbook-name\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUnit(params.unitId, (0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        return workbook ? (workbook.setName(params.name), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$f15c7c16704985d4 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-workbook-name\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        if (!accessor.get((0, $7yNYd.IUniverInstanceService)).getUnit(params.unitId, (0, $7yNYd.UniverInstanceType).UNIVER_SHEET)) return !1;\n        const interceptedCommands = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$f15c7c16704985d4.id,\n            params: params\n        }), redoMutationParams = {\n            name: params.name,\n            unitId: params.unitId\n        }, redos = [\n            ...(_a20 = interceptedCommands.preRedos) != null ? _a20 : [],\n            {\n                id: $a6ab01cd18fda354$export$f937a14ed9d9ffd1.id,\n                params: redoMutationParams\n            },\n            ...interceptedCommands.redos\n        ], commandService = accessor.get((0, $7yNYd.ICommandService));\n        return (0, $7yNYd.sequenceExecute)(redos, commandService).result;\n    }, \"handler\")\n};\nvar $a6ab01cd18fda354$var$__defProp$f = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$f = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$f = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$f(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$f(target, key, result), result;\n}, \"__decorateClass$f\"), $a6ab01cd18fda354$var$_a4;\nlet $a6ab01cd18fda354$export$e82d59a730eac89c = ($a6ab01cd18fda354$var$_a4 = class {\n    constructor(){\n        /**\n     *\n     * Map<unitId, Map<subUnitId, Map<subUnitId, IWorksheetProtectionRule>>>\n     */ $a6ab01cd18fda354$var$__publicField(this, \"_model\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_ruleChange\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"_ruleRefresh\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"_resetOrder\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"ruleChange$\", this._ruleChange.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"ruleRefresh$\", this._ruleRefresh.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"resetOrder$\", this._resetOrder.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_worksheetRuleInitStateChange\", new (0, $5LPkb.BehaviorSubject)(!1));\n        $a6ab01cd18fda354$var$__publicField(this, \"worksheetRuleInitStateChange$\", this._worksheetRuleInitStateChange.asObservable());\n    }\n    changeRuleInitState(state) {\n        this._worksheetRuleInitStateChange.next(state);\n    }\n    getSheetRuleInitState() {\n        return this._worksheetRuleInitStateChange.value;\n    }\n    addRule(unitId, rule) {\n        this._ensureSubUnitMap(unitId).set(rule.subUnitId, rule), this._ruleChange.next({\n            unitId: unitId,\n            rule: rule,\n            type: \"add\",\n            subUnitId: rule.subUnitId\n        });\n    }\n    deleteRule(unitId, subUnitId) {\n        var _a20, _b, _c;\n        const rule = (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n        rule && ((_c = this._model.get(unitId)) == null || _c.delete(subUnitId), this._ruleChange.next({\n            unitId: unitId,\n            rule: rule,\n            type: \"delete\",\n            subUnitId: subUnitId\n        }));\n    }\n    setRule(unitId, subUnitId, rule) {\n        var _a20, _b;\n        const oldRule = this.getRule(unitId, subUnitId);\n        oldRule && ((_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null || _b.set(subUnitId, rule), this._ruleChange.next({\n            unitId: unitId,\n            oldRule: oldRule,\n            rule: rule,\n            type: \"set\",\n            subUnitId: subUnitId\n        }));\n    }\n    getRule(unitId, subUnitId) {\n        var _a20, _b;\n        return (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n    }\n    toObject() {\n        const result = {};\n        return [\n            ...this._model.keys()\n        ].forEach((unitId)=>{\n            const subUnitMap = this._model.get(unitId);\n            subUnitMap != null && subUnitMap.size && (result[unitId] = [], [\n                ...subUnitMap.keys()\n            ].forEach((subUnitId)=>{\n                const rule = subUnitMap.get(subUnitId);\n                rule && result[unitId].push(rule);\n            }));\n        }), result;\n    }\n    fromObject(obj) {\n        const result = /* @__PURE__ */ new Map();\n        Object.keys(obj).forEach((unitId)=>{\n            const subUnitList = obj[unitId];\n            if (subUnitList != null && subUnitList.length) {\n                const subUnitMap = /* @__PURE__ */ new Map();\n                subUnitList.forEach((rule)=>{\n                    subUnitMap.set(rule.subUnitId, rule);\n                }), result.set(unitId, subUnitMap);\n            }\n        }), this._model = result;\n    }\n    deleteUnitModel(unitId) {\n        this._model.delete(unitId);\n    }\n    _ensureSubUnitMap(unitId) {\n        let subUnitMap = this._model.get(unitId);\n        return subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap)), subUnitMap;\n    }\n    ruleRefresh(permissionId) {\n        this._ruleRefresh.next(permissionId);\n    }\n    resetOrder() {\n        this._resetOrder.next(Math.random());\n    }\n    getTargetByPermissionId(unitId, permissionId) {\n        const subUnitMap = this._model.get(unitId);\n        if (!subUnitMap) return null;\n        for (const [subUnitId, rule] of subUnitMap)if (rule.permissionId === permissionId) return [\n            unitId,\n            subUnitId\n        ];\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a4, \"WorksheetProtectionRuleModel\"), $a6ab01cd18fda354$var$_a4);\n$a6ab01cd18fda354$export$e82d59a730eac89c = $a6ab01cd18fda354$var$__decorateClass$f([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$export$e82d59a730eac89c)\n], $a6ab01cd18fda354$export$e82d59a730eac89c);\nconst $a6ab01cd18fda354$export$4cd4e23c2b7dde1d = {\n    id: \"sheet.mutation.add-worksheet-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, rule: rule } = params;\n        return accessor.get($a6ab01cd18fda354$export$e82d59a730eac89c).addRule(unitId, rule), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$629d2153b207af21 = {\n    id: \"sheet.mutation.set-worksheet-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, rule: rule } = params;\n        return accessor.get($a6ab01cd18fda354$export$e82d59a730eac89c).setRule(unitId, subUnitId, rule), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$afd9d63d1a03ab75 = {\n    id: \"sheet.mutation.delete-worksheet-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId } = params;\n        return accessor.get($a6ab01cd18fda354$export$e82d59a730eac89c).deleteRule(unitId, subUnitId), !0;\n    }, \"handler\")\n};\nvar $a6ab01cd18fda354$var$__defProp$e = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$e = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$e = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$e(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$e(target, key, result), result;\n}, \"__decorateClass$e\"), $a6ab01cd18fda354$var$_a5;\nlet $a6ab01cd18fda354$export$9372059621b24e72 = ($a6ab01cd18fda354$var$_a5 = class {\n    constructor(){\n        /**\n     *\n     * Map<unitId, Map<subUnitId, Map<ruleId, IRangeProtectionRule>>>\n     */ $a6ab01cd18fda354$var$__publicField(this, \"_model\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_ruleChange\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"ruleChange$\", this._ruleChange.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_ruleRefresh\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"ruleRefresh$\", this._ruleRefresh.asObservable());\n        $a6ab01cd18fda354$var$__publicField(this, \"_rangeRuleInitStateChange\", new (0, $5LPkb.BehaviorSubject)(!1));\n        $a6ab01cd18fda354$var$__publicField(this, \"rangeRuleInitStateChange$\", this._rangeRuleInitStateChange.asObservable());\n    }\n    ruleRefresh(id) {\n        this._ruleRefresh.next(id);\n    }\n    getRangeRuleInitState() {\n        return this._rangeRuleInitStateChange.value;\n    }\n    changeRuleInitState(state) {\n        this._rangeRuleInitStateChange.next(state);\n    }\n    addRule(unitId, subUnitId, rule) {\n        this._ensureRuleMap(unitId, subUnitId).set(rule.id, rule), this._ruleChange.next({\n            unitId: unitId,\n            subUnitId: subUnitId,\n            rule: rule,\n            type: \"add\"\n        });\n    }\n    deleteRule(unitId, subUnitId, id) {\n        var _a20, _b, _c, _d;\n        const rule = (_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null ? void 0 : _b.get(id);\n        rule && ((_d = (_c = this._model.get(unitId)) == null ? void 0 : _c.get(subUnitId)) == null || _d.delete(id), this._ruleChange.next({\n            unitId: unitId,\n            subUnitId: subUnitId,\n            rule: rule,\n            type: \"delete\"\n        }));\n    }\n    setRule(unitId, subUnitId, id, rule) {\n        var _a20, _b;\n        const oldRule = this.getRule(unitId, subUnitId, id);\n        oldRule && ((_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null || _b.set(id, rule), this._ruleChange.next({\n            unitId: unitId,\n            subUnitId: subUnitId,\n            oldRule: oldRule,\n            rule: rule,\n            type: \"set\"\n        }));\n    }\n    getRule(unitId, subUnitId, id) {\n        var _a20, _b;\n        return (_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null ? void 0 : _b.get(id);\n    }\n    getSubunitRuleList(unitId, subUnitId) {\n        var _a20;\n        return [\n            ...(((_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) || /* @__PURE__ */ new Map()).values()\n        ];\n    }\n    _ensureRuleMap(unitId, subUnitId) {\n        let subUnitMap = this._model.get(unitId);\n        subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap));\n        let ruleMap = subUnitMap.get(subUnitId);\n        return ruleMap || (ruleMap = /* @__PURE__ */ new Map(), subUnitMap.set(subUnitId, ruleMap)), ruleMap;\n    }\n    toObject() {\n        const result = {};\n        return [\n            ...this._model.keys()\n        ].forEach((unitId)=>{\n            const submitMap = this._model.get(unitId), subUnitKeys = [\n                ...submitMap.keys()\n            ];\n            result[unitId] = {}, subUnitKeys.forEach((subunitId)=>{\n                const ruleMap = submitMap.get(subunitId);\n                result[unitId][subunitId] = [\n                    ...ruleMap.values()\n                ];\n            });\n        }), result;\n    }\n    fromObject(obj) {\n        const result = /* @__PURE__ */ new Map();\n        Object.keys(obj).forEach((unitId)=>{\n            const subUnitObj = obj[unitId], map2 = /* @__PURE__ */ new Map();\n            Object.keys(subUnitObj).forEach((subunitId)=>{\n                const ruleMap = subUnitObj[subunitId].reduce((result2, cur)=>(result2.set(cur.id, cur), result2), /* @__PURE__ */ new Map());\n                map2.set(subunitId, ruleMap);\n            }), result.set(unitId, map2);\n        }), this._model = result;\n    }\n    deleteUnitModel(unitId) {\n        this._model.delete(unitId);\n    }\n    createRuleId(unitId, subUnitId) {\n        let id = (0, $7yNYd.Tools).generateRandomId(4);\n        const ruleMap = this._ensureRuleMap(unitId, subUnitId);\n        for(; ruleMap.has(id);)id = (0, $7yNYd.Tools).generateRandomId(4);\n        return id;\n    }\n    getTargetByPermissionId(unitId, permissionId) {\n        const subUnitMap = this._model.get(unitId);\n        if (!subUnitMap) return null;\n        for (const [subUnitId, ruleMap] of subUnitMap)for (const rule of ruleMap.values())if (rule.permissionId === permissionId) return [\n            unitId,\n            subUnitId\n        ];\n        return null;\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a5, \"RangeProtectionRuleModel\"), $a6ab01cd18fda354$var$_a5);\n$a6ab01cd18fda354$export$9372059621b24e72 = $a6ab01cd18fda354$var$__decorateClass$e([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$export$9372059621b24e72)\n], $a6ab01cd18fda354$export$9372059621b24e72);\nconst $a6ab01cd18fda354$export$a1277938b074bee3 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>[\n        $a6ab01cd18fda354$export$d9c4797b23318374,\n        $a6ab01cd18fda354$export$4c018ba9f520a234\n    ], \"getAllWorksheetPermissionPoint\"), $a6ab01cd18fda354$export$40327ff0e60d0a4a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>[\n        $a6ab01cd18fda354$export$dcca5189dd6ecd0d,\n        $a6ab01cd18fda354$export$85c23d61fb055e0b,\n        $a6ab01cd18fda354$export$2994e7444a54b0e0,\n        $a6ab01cd18fda354$export$a71e1724e4a317c,\n        $a6ab01cd18fda354$export$a0d4889d2ebb3dda,\n        $a6ab01cd18fda354$export$2fc68d49285b9fd8,\n        $a6ab01cd18fda354$export$eede24696cb63f83,\n        $a6ab01cd18fda354$export$fbfad14902d4c5bc,\n        $a6ab01cd18fda354$export$363b0724d405f30c,\n        $a6ab01cd18fda354$export$697f71110b473051,\n        $a6ab01cd18fda354$export$62237981a6ddf9bf,\n        $a6ab01cd18fda354$export$b0be44a318a01991,\n        $a6ab01cd18fda354$export$bfa2be4307a4639,\n        $a6ab01cd18fda354$export$ccf49d95862c51c\n    ], \"getAllWorksheetPermissionPointByPointPanel\"), $a6ab01cd18fda354$export$b32db826e0669cf8 = [\n    $a6ab01cd18fda354$var$P.Copy,\n    $a6ab01cd18fda354$var$P.DeleteColumn,\n    $a6ab01cd18fda354$var$P.DeleteRow,\n    $a6ab01cd18fda354$var$P.EditExtraObject,\n    $a6ab01cd18fda354$var$P.Filter,\n    $a6ab01cd18fda354$var$P.InsertColumn,\n    $a6ab01cd18fda354$var$P.InsertRow,\n    $a6ab01cd18fda354$var$P.InsertHyperlink,\n    $a6ab01cd18fda354$var$P.PivotTable,\n    $a6ab01cd18fda354$var$P.SetCellStyle,\n    $a6ab01cd18fda354$var$P.SetCellValue,\n    $a6ab01cd18fda354$var$P.SetColumnStyle,\n    $a6ab01cd18fda354$var$P.SetRowStyle,\n    $a6ab01cd18fda354$var$P.Sort\n];\nvar $a6ab01cd18fda354$var$__defProp$d = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$d = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$d = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$d(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$d(target, key, result), result;\n}, \"__decorateClass$d\"), $a6ab01cd18fda354$var$_a6;\nlet $a6ab01cd18fda354$export$5b8cbe97d6c75b92 = ($a6ab01cd18fda354$var$_a6 = class {\n    constructor(){\n        $a6ab01cd18fda354$var$__publicField(this, \"_model\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_pointChange\", new (0, $1mjSk.Subject)());\n        $a6ab01cd18fda354$var$__publicField(this, \"pointChange$\", this._pointChange.asObservable());\n    }\n    addRule(rule) {\n        this._ensureSubUnitMap(rule.unitId).set(rule.subUnitId, rule), this._pointChange.next(rule);\n    }\n    deleteRule(unitId, subUnitId) {\n        var _a20, _b, _c;\n        const rule = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId);\n        rule && ((_c = (_b = this._model) == null ? void 0 : _b.get(unitId)) == null || _c.delete(subUnitId), this._pointChange.next(rule));\n    }\n    getRule(unitId, subUnitId) {\n        var _a20, _b;\n        return (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n    }\n    toObject() {\n        const result = {};\n        return [\n            ...this._model.keys()\n        ].forEach((unitId)=>{\n            const subUnitMap = this._model.get(unitId);\n            subUnitMap != null && subUnitMap.size && (result[unitId] = [], [\n                ...subUnitMap.keys()\n            ].forEach((subUnitId)=>{\n                const rule = subUnitMap.get(subUnitId);\n                rule && result[unitId].push(rule);\n            }));\n        }), result;\n    }\n    fromObject(obj) {\n        const result = /* @__PURE__ */ new Map();\n        Object.keys(obj).forEach((unitId)=>{\n            const subUnitList = obj[unitId];\n            if (subUnitList != null && subUnitList.length) {\n                const subUnitMap = /* @__PURE__ */ new Map();\n                subUnitList.forEach((rule)=>{\n                    subUnitMap.set(rule.subUnitId, rule);\n                }), result.set(unitId, subUnitMap);\n            }\n        }), this._model = result;\n    }\n    deleteUnitModel(unitId) {\n        this._model.delete(unitId);\n    }\n    _ensureSubUnitMap(unitId) {\n        let subUnitMap = this._model.get(unitId);\n        return subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap)), subUnitMap;\n    }\n    getTargetByPermissionId(unitId, permissionId) {\n        const subUnitMap = this._model.get(unitId);\n        if (!subUnitMap) return null;\n        for (const [subUnitId, rule] of subUnitMap)if (rule.permissionId === permissionId) return [\n            unitId,\n            subUnitId\n        ];\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a6, \"WorksheetProtectionPointModel\"), $a6ab01cd18fda354$var$_a6);\n$a6ab01cd18fda354$export$5b8cbe97d6c75b92 = $a6ab01cd18fda354$var$__decorateClass$d([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$export$5b8cbe97d6c75b92)\n], $a6ab01cd18fda354$export$5b8cbe97d6c75b92);\nvar $a6ab01cd18fda354$var$__defProp$c = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$c = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$c = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$c(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$c(target, key, result), result;\n}, \"__decorateClass$c\"), $a6ab01cd18fda354$var$__decorateParam$c = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$c\");\nconst $a6ab01cd18fda354$var$RULE_MODEL_PLUGIN_NAME = \"SHEET_WORKSHEET_PROTECTION_PLUGIN\", $a6ab01cd18fda354$var$POINT_MODEL_PLUGIN_NAME = \"SHEET_WORKSHEET_PROTECTION_POINT_PLUGIN\";\nvar $a6ab01cd18fda354$var$_a7;\nlet $a6ab01cd18fda354$export$f9f5265b129298d6 = ($a6ab01cd18fda354$var$_a7 = class extends (0, $7yNYd.RxDisposable) {\n    constructor(_permissionService, _univerInstanceService, _injector, _worksheetProtectionRuleModel, _worksheetProtectionPointRuleModel, _resourceManagerService, _rangeProtectionRuleModel){\n        super(), this._permissionService = _permissionService, this._univerInstanceService = _univerInstanceService, this._injector = _injector, this._worksheetProtectionRuleModel = _worksheetProtectionRuleModel, this._worksheetProtectionPointRuleModel = _worksheetProtectionPointRuleModel, this._resourceManagerService = _resourceManagerService, this._rangeProtectionRuleModel = _rangeProtectionRuleModel, this._init(), this._initRuleChange(), this._initRuleSnapshot(), this._initPointSnapshot();\n    }\n    _init() {\n        const handleWorkbook = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((workbook)=>{\n            const unitId = workbook.getUnitId(), handleWorksheet = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((worksheet)=>{\n                const subUnitId = worksheet.getSheetId();\n                [\n                    ...$a6ab01cd18fda354$export$a1277938b074bee3(),\n                    ...$a6ab01cd18fda354$export$40327ff0e60d0a4a()\n                ].forEach((F)=>{\n                    const instance = new F(unitId, subUnitId);\n                    this._permissionService.addPermissionPoint(instance);\n                });\n            }, \"handleWorksheet\");\n            workbook.getSheets().forEach((worksheet)=>{\n                handleWorksheet(worksheet);\n            }), workbook.sheetCreated$.subscribe((worksheet)=>{\n                handleWorksheet(worksheet);\n            }), workbook.sheetDisposed$.subscribe((worksheet)=>{\n                const subUnitId = worksheet.getSheetId();\n                this._rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule)=>{\n                    [\n                        $a6ab01cd18fda354$export$71b84bcd22831dcf,\n                        $a6ab01cd18fda354$export$3e56ea536ebb655d\n                    ].forEach((F)=>{\n                        const instance = new F(unitId, subUnitId, rule.permissionId);\n                        this._permissionService.deletePermissionPoint(instance.id);\n                    });\n                }), [\n                    ...$a6ab01cd18fda354$export$a1277938b074bee3(),\n                    ...$a6ab01cd18fda354$export$40327ff0e60d0a4a()\n                ].forEach((F)=>{\n                    const instance = new F(unitId, subUnitId);\n                    this._permissionService.deletePermissionPoint(instance.id);\n                });\n            });\n        }, \"handleWorkbook\");\n        this._univerInstanceService.getAllUnitsForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).forEach((workbook)=>{\n            handleWorkbook(workbook);\n        }), this._univerInstanceService.getTypeOfUnitAdded$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).pipe((0, $2jrJe.takeUntil)(this.dispose$)).subscribe(handleWorkbook), this._univerInstanceService.getTypeOfUnitDisposed$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).pipe((0, $2jrJe.takeUntil)(this.dispose$)).subscribe((workbook)=>{\n            workbook.getSheets().forEach((worksheet)=>{\n                const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId();\n                $a6ab01cd18fda354$export$a1277938b074bee3().forEach((F)=>{\n                    const instance = new F(unitId, subUnitId);\n                    this._permissionService.deletePermissionPoint(instance.id);\n                });\n            });\n        });\n    }\n    _initRuleChange() {\n        this.disposeWithMe(this._worksheetProtectionRuleModel.ruleChange$.subscribe((info)=>{\n            switch(info.type){\n                case \"add\":\n                    break;\n                case \"delete\":\n                    $a6ab01cd18fda354$export$a1277938b074bee3().forEach((F)=>{\n                        const instance = new F(info.unitId, info.subUnitId);\n                        this._permissionService.updatePermissionPoint(instance.id, !0);\n                    });\n                    break;\n                case \"set\":\n                    $a6ab01cd18fda354$export$a1277938b074bee3().forEach((F)=>{\n                        const instance = new F(info.unitId, info.subUnitId);\n                        this._permissionService.updatePermissionPoint(instance.id, info.rule);\n                    });\n                    break;\n            }\n        }));\n    }\n    _initRuleSnapshot() {\n        const toJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>{\n            const object = this._worksheetProtectionRuleModel.toObject();\n            return JSON.stringify(object);\n        }, \"toJson\"), parseJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((json)=>{\n            if (!json) return {};\n            try {\n                return JSON.parse(json);\n            } catch  {\n                return {};\n            }\n        }, \"parseJson\");\n        this.disposeWithMe(this._resourceManagerService.registerPluginResource({\n            toJson: toJson,\n            parseJson: parseJson,\n            pluginName: $a6ab01cd18fda354$var$RULE_MODEL_PLUGIN_NAME,\n            businesses: [\n                $a6ab01cd18fda354$var$I.UNIVER_SHEET\n            ],\n            onLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, resources)=>{\n                this._worksheetProtectionRuleModel.fromObject(resources), Object.keys(resources).forEach((subUnitId)=>{\n                    $a6ab01cd18fda354$export$a1277938b074bee3().forEach((F)=>{\n                        const instance = new F(unitId, subUnitId);\n                        instance.value = !1, this._permissionService.addPermissionPoint(instance);\n                    });\n                }), this._worksheetProtectionRuleModel.changeRuleInitState(!0);\n            }, \"onLoad\"),\n            onUnLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>{\n                this._worksheetProtectionRuleModel.deleteUnitModel(unitId);\n            }, \"onUnLoad\")\n        }));\n    }\n    _initPointSnapshot() {\n        const toJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>{\n            const object = this._worksheetProtectionPointRuleModel.toObject();\n            return JSON.stringify(object);\n        }, \"toJson\"), parseJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((json)=>{\n            if (!json) return {};\n            try {\n                return JSON.parse(json);\n            } catch  {\n                return {};\n            }\n        }, \"parseJson\");\n        this.disposeWithMe(this._resourceManagerService.registerPluginResource({\n            toJson: toJson,\n            parseJson: parseJson,\n            pluginName: $a6ab01cd18fda354$var$POINT_MODEL_PLUGIN_NAME,\n            businesses: [\n                $a6ab01cd18fda354$var$I.UNIVER_SHEET\n            ],\n            onLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, resources)=>{\n                this._worksheetProtectionPointRuleModel.fromObject(resources), Object.keys(resources).forEach((subUnitId)=>{\n                    $a6ab01cd18fda354$export$40327ff0e60d0a4a().forEach((F)=>{\n                        const instance = new F(unitId, subUnitId);\n                        this._permissionService.addPermissionPoint(instance);\n                    });\n                });\n            }, \"onLoad\"),\n            onUnLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>{\n                this._worksheetProtectionPointRuleModel.deleteUnitModel(unitId);\n            }, \"onUnLoad\")\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a7, \"WorksheetPermissionService\"), $a6ab01cd18fda354$var$_a7);\n$a6ab01cd18fda354$export$f9f5265b129298d6 = $a6ab01cd18fda354$var$__decorateClass$c([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$export$f9f5265b129298d6),\n    $a6ab01cd18fda354$var$__decorateParam$c(0, (0, $7yNYd.Inject)((0, $7yNYd.IPermissionService))),\n    $a6ab01cd18fda354$var$__decorateParam$c(1, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$c(2, (0, $7yNYd.Inject)((0, $7yNYd.Injector))),\n    $a6ab01cd18fda354$var$__decorateParam$c(3, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$e82d59a730eac89c)),\n    $a6ab01cd18fda354$var$__decorateParam$c(4, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$5b8cbe97d6c75b92)),\n    $a6ab01cd18fda354$var$__decorateParam$c(5, (0, $7yNYd.Inject)((0, $7yNYd.IResourceManagerService))),\n    $a6ab01cd18fda354$var$__decorateParam$c(6, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9372059621b24e72))\n], $a6ab01cd18fda354$export$f9f5265b129298d6);\nconst $a6ab01cd18fda354$export$dfaa28bb509787c1 = {\n    id: \"sheet.mutation.set-worksheet-permission-points\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { rule: rule } = params;\n        return accessor.get($a6ab01cd18fda354$export$5b8cbe97d6c75b92).addRule(rule), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$a2a2a04437dd1e57 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-permission-points\",\n    async handler (accessor, params) {\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), { rule: rule } = params;\n        return commandService.executeCommand($a6ab01cd18fda354$export$dfaa28bb509787c1.id, {\n            rule: rule,\n            unitId: rule.unitId,\n            subUnitId: rule.subUnitId\n        }), !0;\n    }\n}, $a6ab01cd18fda354$export$7a37c5beec050fe6 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, param)=>{\n    const selectionProtectionRuleModel = accessor.get($a6ab01cd18fda354$export$9372059621b24e72), rules = param.ruleIds.map((id)=>selectionProtectionRuleModel.getRule(param.unitId, param.subUnitId, id)).filter((rule)=>!!rule);\n    return {\n        id: $a6ab01cd18fda354$export$f2ad0bf0273e0229.id,\n        params: {\n            subUnitId: param.subUnitId,\n            unitId: param.unitId,\n            rules: rules\n        }\n    };\n}, \"FactoryDeleteRangeProtectionMutation\"), $a6ab01cd18fda354$export$b457d93c336efe6a = {\n    id: \"sheet.mutation.delete-range-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, ruleIds: ruleIds } = params, selectionProtectionRuleModel = accessor.get($a6ab01cd18fda354$export$9372059621b24e72);\n        return ruleIds.forEach((id)=>{\n            selectionProtectionRuleModel.deleteRule(unitId, subUnitId, id);\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$c1d278d0598464fd = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param)=>{\n    const deleteParams = {\n        ...param,\n        ruleIds: param.rules.map((rule)=>rule.id)\n    };\n    return {\n        id: $a6ab01cd18fda354$export$b457d93c336efe6a.id,\n        params: deleteParams\n    };\n}, \"FactoryAddRangeProtectionMutation\"), $a6ab01cd18fda354$export$f2ad0bf0273e0229 = {\n    id: \"sheet.mutation.add-range-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, rules: rules } = params, selectionProtectionRuleModel = accessor.get($a6ab01cd18fda354$export$9372059621b24e72);\n        return rules.forEach((rule)=>{\n            selectionProtectionRuleModel.addRule(unitId, subUnitId, rule);\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$bb4004004a1431ff = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.add-range-protection\",\n    async handler (accessor, params) {\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), selectionProtectionModel = accessor.get($a6ab01cd18fda354$export$9372059621b24e72), { rule: rule, permissionId: permissionId } = params, { unitId: unitId, subUnitId: subUnitId, ranges: ranges, name: name, description: description } = rule, rules = [\n            {\n                ranges: ranges,\n                permissionId: permissionId,\n                id: selectionProtectionModel.createRuleId(unitId, subUnitId),\n                name: name,\n                description: description,\n                unitType: rule.unitType,\n                unitId: unitId,\n                subUnitId: subUnitId\n            }\n        ];\n        if (await commandService.executeCommand($a6ab01cd18fda354$export$f2ad0bf0273e0229.id, {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            rules: rules\n        })) {\n            const redoMutations = [\n                {\n                    id: $a6ab01cd18fda354$export$f2ad0bf0273e0229.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rules: rules\n                    }\n                }\n            ], undoMutations = [\n                {\n                    id: $a6ab01cd18fda354$export$b457d93c336efe6a.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        ruleIds: rules.map((rule2)=>rule2.id)\n                    }\n                }\n            ];\n            undoRedoService.pushUndoRedo({\n                unitID: unitId,\n                redoMutations: redoMutations,\n                undoMutations: undoMutations\n            });\n        }\n        return !0;\n    }\n}, $a6ab01cd18fda354$export$2edc47174b2de509 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.delete-range-protection\",\n    async handler (accessor, params) {\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), { unitId: unitId, subUnitId: subUnitId, rule: rule } = params, redoMutationParam = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ruleIds: [\n                rule.id\n            ]\n        };\n        return await commandService.executeCommand($a6ab01cd18fda354$export$b457d93c336efe6a.id, redoMutationParam) && undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$b457d93c336efe6a.id,\n                    params: redoMutationParam\n                }\n            ],\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$f2ad0bf0273e0229.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rules: [\n                            rule\n                        ]\n                    }\n                }\n            ]\n        }), !0;\n    }\n}, $a6ab01cd18fda354$export$154632b354a236eb = {\n    id: \"sheet.mutation.set-range-protection\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { unitId: unitId, subUnitId: subUnitId, rule: rule, ruleId: ruleId } = params;\n        return accessor.get($a6ab01cd18fda354$export$9372059621b24e72).setRule(unitId, subUnitId, ruleId, rule), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$541356c10ac61b92 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, param)=>{\n    const { unitId: unitId, subUnitId: subUnitId, ruleId: ruleId } = param, oldRule = accessor.get($a6ab01cd18fda354$export$9372059621b24e72).getRule(unitId, subUnitId, ruleId);\n    return oldRule ? {\n        id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n        params: {\n            ...param,\n            rule: oldRule\n        }\n    } : null;\n}, \"FactorySetRangeProtectionMutation\"), $a6ab01cd18fda354$export$9681e4336e20689b = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-range-protection\",\n    async handler (accessor, params) {\n        if (!params) return !1;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), selectionProtectionModel = accessor.get($a6ab01cd18fda354$export$9372059621b24e72), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), { rule: rule, permissionId: permissionId, oldRule: oldRule } = params, { unitId: unitId, subUnitId: subUnitId, ranges: ranges, name: name, description: description } = rule;\n        if (rule.id) {\n            const redoMutationParam = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                ruleId: rule.id,\n                rule: {\n                    ranges: ranges,\n                    permissionId: permissionId,\n                    id: selectionProtectionModel.createRuleId(unitId, subUnitId),\n                    name: name,\n                    description: description\n                }\n            };\n            if (await commandService.executeCommand($a6ab01cd18fda354$export$154632b354a236eb.id, redoMutationParam)) {\n                const redoMutations = [\n                    {\n                        id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                        params: redoMutationParam\n                    }\n                ], undoMutations = [\n                    {\n                        id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                        params: {\n                            unitId: unitId,\n                            subUnitId: subUnitId,\n                            ruleId: rule.id,\n                            rule: oldRule\n                        }\n                    }\n                ];\n                undoRedoService.pushUndoRedo({\n                    unitID: unitId,\n                    redoMutations: redoMutations,\n                    undoMutations: undoMutations\n                });\n            }\n        }\n        return !0;\n    }\n}, $a6ab01cd18fda354$export$196d4041ffcb71ca = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params)=>{\n    const { order: order } = params, newOrder = {};\n    return Object.keys(order).forEach((key)=>{\n        newOrder[order[Number(key)]] = Number(key);\n    }), {\n        ...params,\n        order: newOrder\n    };\n}, \"ReorderRangeUndoMutationFactory\"), $a6ab01cd18fda354$export$e583b3721377d199 = {\n    id: \"sheet.mutation.reorder-range\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const { subUnitId: subUnitId, unitId: unitId, range: range, order: order } = params, worksheet = accessor.get((0, $7yNYd.IUniverInstanceService)).getUnit(unitId).getSheetBySheetId(subUnitId);\n        if (!worksheet) return !1;\n        const cellDataMatrix = new (0, $7yNYd.ObjectMatrix)();\n        (0, $7yNYd.Range).foreach(range, (row, col)=>{\n            if (order.hasOwnProperty(row)) {\n                const targetRow = order[row], cloneCell = (0, $7yNYd.Tools).deepClone(worksheet.getCellRaw(targetRow, col));\n                cellDataMatrix.setValue(row, col, cloneCell);\n            }\n        });\n        const worksheetCellDataMatrix = worksheet.getCellMatrix();\n        return cellDataMatrix.forValue((row, col, cellData)=>{\n            worksheetCellDataMatrix.setValue(row, col, cellData);\n        }), !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$ReorderRangeCommandId = \"sheet.command.reorder-range\", $a6ab01cd18fda354$export$c83d426b9c3b0bcf = {\n    id: $a6ab01cd18fda354$var$ReorderRangeCommandId,\n    type: (0, $7yNYd.CommandType).COMMAND,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        var _a20, _b;\n        const { subUnitId: subUnitId, unitId: unitId, range: range, order: order } = params, commandService = accessor.get((0, $7yNYd.ICommandService)), reorderMutation = {\n            id: $a6ab01cd18fda354$export$e583b3721377d199.id,\n            params: {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                order: order,\n                range: range\n            }\n        }, undoReorderMutation = {\n            id: $a6ab01cd18fda354$export$e583b3721377d199.id,\n            params: $a6ab01cd18fda354$export$196d4041ffcb71ca(reorderMutation.params)\n        }, interceptorCommands = accessor.get($a6ab01cd18fda354$export$80833ae4acf64dfd).onCommandExecute({\n            id: $a6ab01cd18fda354$export$c83d426b9c3b0bcf.id,\n            params: params\n        }), redos = [\n            ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n            reorderMutation,\n            ...interceptorCommands.redos\n        ], undos = [\n            ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n            undoReorderMutation,\n            ...interceptorCommands.undos\n        ];\n        return (0, $7yNYd.sequenceExecute)(redos, commandService).result ? (accessor.get((0, $7yNYd.IUndoRedoService)).pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undos,\n            redoMutations: redos\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$65ebcfb8bac77328 = \"maxCellsPerSheet\", $a6ab01cd18fda354$var$MAX_CELL_PER_SHEET_DEFAULT = 3e6, $a6ab01cd18fda354$var$ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY = \"ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY\";\nvar $a6ab01cd18fda354$var$__defProp$b = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$b = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$b = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$b(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$b(target, key, result), result;\n}, \"__decorateClass$b\"), $a6ab01cd18fda354$var$__decorateParam$b = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$b\"), $a6ab01cd18fda354$var$_a8;\nlet $a6ab01cd18fda354$var$BasicWorksheetController = ($a6ab01cd18fda354$var$_a8 = class extends (0, $7yNYd.Disposable) {\n    // eslint-disable-next-line max-lines-per-function\n    constructor(_commandService, _configService, _dataSyncPrimaryController){\n        var _a20;\n        super(), this._commandService = _commandService, this._configService = _configService, this._dataSyncPrimaryController = _dataSyncPrimaryController, [\n            $a6ab01cd18fda354$export$ce2b970bc67fd9bc,\n            $a6ab01cd18fda354$export$2e1cbe0a40f11cd4,\n            $a6ab01cd18fda354$export$823dff2590c7c5ff,\n            $a6ab01cd18fda354$export$759ebfd45fe6d2e7,\n            $a6ab01cd18fda354$export$5535d7f795e5bded,\n            $a6ab01cd18fda354$export$63ddef9080d565c8,\n            $a6ab01cd18fda354$export$b98040a300ab6f6e,\n            $a6ab01cd18fda354$export$1b784c21f081e76a,\n            $a6ab01cd18fda354$export$9642f6b705de590b,\n            $a6ab01cd18fda354$export$f14a5300764a7508,\n            $a6ab01cd18fda354$export$9bbe8f9ee2bc5646,\n            $a6ab01cd18fda354$export$c64e537472e00620,\n            $a6ab01cd18fda354$export$2cd10fd9284040fa,\n            $a6ab01cd18fda354$export$f937a14ed9d9ffd1,\n            $a6ab01cd18fda354$export$762d92ef19bd482a,\n            $a6ab01cd18fda354$export$2c6679f6ed39715b,\n            $a6ab01cd18fda354$export$e583b3721377d199,\n            $a6ab01cd18fda354$export$18df70d41ccf159a,\n            $a6ab01cd18fda354$export$7067bfb95d30a5c3\n        ].forEach((mutation)=>{\n            var _a21;\n            this._commandService.registerCommand(mutation), (_a21 = this._dataSyncPrimaryController) == null || _a21.registerSyncingMutations(mutation);\n        }), ((_a20 = this._configService.getConfig($a6ab01cd18fda354$var$ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY)) != null ? _a20 : !1) || [\n            $a6ab01cd18fda354$export$2f4ff18eff30d407,\n            $a6ab01cd18fda354$export$ab26cf116e0b60e6,\n            $a6ab01cd18fda354$export$863f42bb4d58d9e4,\n            $a6ab01cd18fda354$export$8c73367803b79193,\n            $a6ab01cd18fda354$export$40e354a17cc79f7f,\n            $a6ab01cd18fda354$export$d3997a5569b0810f,\n            $a6ab01cd18fda354$export$1cd66c761d533521,\n            $a6ab01cd18fda354$export$697e2e139da9fb66,\n            $a6ab01cd18fda354$export$3c7a525148882f97,\n            $a6ab01cd18fda354$export$7ddbe0547809d4f2,\n            $a6ab01cd18fda354$export$e8353cee7bda512a,\n            $a6ab01cd18fda354$export$41564dd5272a2ef3,\n            $a6ab01cd18fda354$export$732636db5bcc0e5f,\n            $a6ab01cd18fda354$export$9faff810cbea30da,\n            $a6ab01cd18fda354$export$3681714e8ba8df82,\n            $a6ab01cd18fda354$export$59824d5e29c20d3b,\n            $a6ab01cd18fda354$export$c4bd043fecdc01b8,\n            $a6ab01cd18fda354$export$5effa9283a7d9d05,\n            $a6ab01cd18fda354$export$6d3ee8ffacf894af,\n            $a6ab01cd18fda354$export$a28b199505e3f35b,\n            $a6ab01cd18fda354$export$177b3716bfce6b2d,\n            $a6ab01cd18fda354$export$d6b85d28467bc6ff,\n            $a6ab01cd18fda354$export$6fc693400eb160ca,\n            $a6ab01cd18fda354$export$c83d426b9c3b0bcf,\n            $a6ab01cd18fda354$export$d0aeb9f05b4c1c1b,\n            $a6ab01cd18fda354$export$ac505b0e9caa44ae,\n            $a6ab01cd18fda354$export$505a7a28d0b2a05f,\n            $a6ab01cd18fda354$export$b9eaa6f3442e5c9,\n            $a6ab01cd18fda354$export$48d954126b6d7141,\n            $a6ab01cd18fda354$export$217a1eef55f6af13,\n            $a6ab01cd18fda354$export$87ae154ca64a9764,\n            $a6ab01cd18fda354$export$a8e6e4eb9efe7ab3,\n            $a6ab01cd18fda354$export$4be8c70e09ec7414,\n            $a6ab01cd18fda354$export$8c690f2688578a18,\n            $a6ab01cd18fda354$export$7257073ee36b52d2,\n            $a6ab01cd18fda354$export$e2c06a117868669c,\n            $a6ab01cd18fda354$export$9b7975fb84f597d5,\n            $a6ab01cd18fda354$export$9ef6401fd7f94002,\n            $a6ab01cd18fda354$export$5d48dadd73d65542,\n            $a6ab01cd18fda354$export$53938c3f10334ebe,\n            $a6ab01cd18fda354$export$d38e4b7aa167ef86,\n            $a6ab01cd18fda354$export$695df81ccb7da4eb,\n            $a6ab01cd18fda354$export$64cc91dade2db478,\n            $a6ab01cd18fda354$export$43c65aeb5025fc3d,\n            $a6ab01cd18fda354$export$3c29e82821fa0859,\n            $a6ab01cd18fda354$export$cd9a5b2737870ea6,\n            $a6ab01cd18fda354$export$588522b1d30ed11e,\n            $a6ab01cd18fda354$export$f9d8ad03a7b6f57d,\n            $a6ab01cd18fda354$export$c9b3ccfe26533e7d,\n            $a6ab01cd18fda354$export$cd6eb72fd660fbe5,\n            $a6ab01cd18fda354$export$9cffecb7e319b589,\n            $a6ab01cd18fda354$export$f72721d432fc9567,\n            $a6ab01cd18fda354$export$6960e50bd58ae80b,\n            $a6ab01cd18fda354$export$c56b7ba3eac73a9a,\n            $a6ab01cd18fda354$export$4da426d8a922db92,\n            $a6ab01cd18fda354$export$e7dec73a8fd68842,\n            $a6ab01cd18fda354$export$be9c36d6210442d6,\n            $a6ab01cd18fda354$export$f15c7c16704985d4,\n            $a6ab01cd18fda354$export$142e5a7a79066467,\n            $a6ab01cd18fda354$export$501905adef850859,\n            $a6ab01cd18fda354$export$8d71c14db4ec832e,\n            $a6ab01cd18fda354$export$b76d76b975841359,\n            $a6ab01cd18fda354$export$e4b39c021c550afa,\n            $a6ab01cd18fda354$export$cd24df42925f927,\n            $a6ab01cd18fda354$export$a7f050925a81e492,\n            $a6ab01cd18fda354$export$92a6672d4df31cfb,\n            $a6ab01cd18fda354$export$d7b494254bbf476f,\n            $a6ab01cd18fda354$export$dabde38fe174e661,\n            $a6ab01cd18fda354$export$784e15c60e3adf6c,\n            $a6ab01cd18fda354$export$9fe459fc1a6ecb2d,\n            $a6ab01cd18fda354$export$ee68545baad45289,\n            $a6ab01cd18fda354$export$61dcf9a1529f32fa,\n            $a6ab01cd18fda354$export$e90d872a06962b4e,\n            $a6ab01cd18fda354$export$6ed48c4ca74c384d,\n            $a6ab01cd18fda354$export$5ff56b48d076a99,\n            // permissions range protection\n            $a6ab01cd18fda354$export$a2a2a04437dd1e57,\n            $a6ab01cd18fda354$export$4cd4e23c2b7dde1d,\n            $a6ab01cd18fda354$export$629d2153b207af21,\n            $a6ab01cd18fda354$export$afd9d63d1a03ab75,\n            $a6ab01cd18fda354$export$dfaa28bb509787c1,\n            $a6ab01cd18fda354$export$bb4004004a1431ff,\n            $a6ab01cd18fda354$export$2edc47174b2de509,\n            $a6ab01cd18fda354$export$9681e4336e20689b,\n            $a6ab01cd18fda354$export$f2ad0bf0273e0229,\n            $a6ab01cd18fda354$export$b457d93c336efe6a,\n            $a6ab01cd18fda354$export$154632b354a236eb\n        ].forEach((command)=>this.disposeWithMe(this._commandService.registerCommand(command))), this._configService.setConfig($a6ab01cd18fda354$export$65ebcfb8bac77328, $a6ab01cd18fda354$var$MAX_CELL_PER_SHEET_DEFAULT);\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a8, \"BasicWorksheetController\"), $a6ab01cd18fda354$var$_a8);\n$a6ab01cd18fda354$var$BasicWorksheetController = $a6ab01cd18fda354$var$__decorateClass$b([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$var$BasicWorksheetController),\n    $a6ab01cd18fda354$var$__decorateParam$b(0, (0, $7yNYd.ICommandService)),\n    $a6ab01cd18fda354$var$__decorateParam$b(1, (0, $7yNYd.IConfigService)),\n    $a6ab01cd18fda354$var$__decorateParam$b(2, (0, $7yNYd.Optional)((0, $k2g5B.DataSyncPrimaryController)))\n], $a6ab01cd18fda354$var$BasicWorksheetController);\nvar $a6ab01cd18fda354$var$__defProp$a = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$a = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$a(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$a(target, key, result), result;\n}, \"__decorateClass$a\"), $a6ab01cd18fda354$var$__decorateParam$a = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$a\"), $a6ab01cd18fda354$var$_a9;\nlet $a6ab01cd18fda354$var$CalculateResultApplyController = ($a6ab01cd18fda354$var$_a9 = class extends (0, $7yNYd.Disposable) {\n    constructor(_univerInstanceService, _commandService){\n        super(), this._univerInstanceService = _univerInstanceService, this._commandService = _commandService, this._initialize();\n    }\n    _initialize() {\n        this.disposeWithMe(this._commandService.onCommandExecuted((command)=>{\n            if (command.id !== (0, $86b1c.SetFormulaCalculationResultMutation).id) return;\n            const params = command.params, { unitData: unitData } = params, unitIds = Object.keys(unitData), redoMutationsInfo = [];\n            return unitIds.forEach((unitId)=>{\n                const sheetData = unitData[unitId];\n                if (sheetData == null) return !0;\n                Object.keys(sheetData).forEach((sheetId)=>{\n                    const cellData = sheetData[sheetId];\n                    if (cellData == null) return !0;\n                    const cellValue = this._getMergedCellData(unitId, sheetId, cellData), setRangeValuesMutation = {\n                        subUnitId: sheetId,\n                        unitId: unitId,\n                        cellValue: cellValue\n                    };\n                    redoMutationsInfo.push({\n                        id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n                        params: setRangeValuesMutation\n                    });\n                });\n            }), redoMutationsInfo.every((m)=>this._commandService.executeCommand(m.id, m.params, {\n                    onlyLocal: !0\n                }));\n        }));\n    }\n    /**\n   * Priority that mainly deals with number format in unitData\n   * @param unitId\n   * @param sheetId\n   * @param cellData\n   * @returns\n   */ _getMergedCellData(unitId, sheetId, cellData) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId), styles = workbook == null ? void 0 : workbook.getStyles(), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(sheetId), oldCellDataMatrix = worksheet == null ? void 0 : worksheet.getCellMatrix(), cellDataMatrix = new (0, $7yNYd.ObjectMatrix)(cellData);\n        return cellDataMatrix.forValue((row, col, cell)=>{\n            const oldCell = oldCellDataMatrix == null ? void 0 : oldCellDataMatrix.getValue(row, col), newCell = (0, $86b1c.handleNumfmtInCell)(oldCell, cell, styles);\n            cellDataMatrix.setValue(row, col, newCell);\n        }), cellDataMatrix.clone();\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a9, \"CalculateResultApplyController\"), $a6ab01cd18fda354$var$_a9);\n$a6ab01cd18fda354$var$CalculateResultApplyController = $a6ab01cd18fda354$var$__decorateClass$a([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$var$CalculateResultApplyController),\n    $a6ab01cd18fda354$var$__decorateParam$a(0, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$a(1, (0, $7yNYd.ICommandService))\n], $a6ab01cd18fda354$var$CalculateResultApplyController);\nconst $a6ab01cd18fda354$export$19a34a018dc3d795 = {\n    MoveRangeCommandId: $a6ab01cd18fda354$var$MoveRangeCommandId,\n    InsertRowCommandId: $a6ab01cd18fda354$var$InsertRowCommandId,\n    InsertColCommandId: $a6ab01cd18fda354$var$InsertColCommandId,\n    RemoveColCommandId: $a6ab01cd18fda354$var$RemoveColCommandId,\n    RemoveRowCommandId: $a6ab01cd18fda354$var$RemoveRowCommandId,\n    DeleteRangeMoveLeftCommandId: $a6ab01cd18fda354$var$DeleteRangeMoveLeftCommandId,\n    DeleteRangeMoveUpCommandId: $a6ab01cd18fda354$var$DeleteRangeMoveUpCommandId,\n    InsertRangeMoveDownCommandId: $a6ab01cd18fda354$var$InsertRangeMoveDownCommandId,\n    InsertRangeMoveRightCommandId: $a6ab01cd18fda354$var$InsertRangeMoveRightCommandId,\n    MoveColsCommandId: $a6ab01cd18fda354$var$MoveColsCommandId,\n    MoveRowsCommandId: $a6ab01cd18fda354$var$MoveRowsCommandId,\n    ReorderRangeCommandId: $a6ab01cd18fda354$var$ReorderRangeCommandId\n};\nvar $a6ab01cd18fda354$export$c18bb9d3f9b808b3 = /* @__PURE__ */ ((OperatorType2)=>(OperatorType2[OperatorType2.Set = 0] = \"Set\", OperatorType2[OperatorType2.Delete = 1] = \"Delete\", OperatorType2[OperatorType2.HorizontalMove = 2] = \"HorizontalMove\", OperatorType2[OperatorType2.VerticalMove = 3] = \"VerticalMove\", OperatorType2[OperatorType2.Unknown = 4] = \"Unknown\", OperatorType2))($a6ab01cd18fda354$export$c18bb9d3f9b808b3 || {});\nconst $a6ab01cd18fda354$var$MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER, $a6ab01cd18fda354$var$handleRangeTypeInput = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>{\n    const _range = {\n        ...range\n    }, isColumn = Number.isNaN(_range.startRow) && Number.isNaN(_range.endRow) && !Number.isNaN(_range.startColumn) && !Number.isNaN(_range.endColumn), isRow = Number.isNaN(_range.startColumn) && Number.isNaN(_range.endColumn) && !Number.isNaN(_range.startRow) && !Number.isNaN(_range.endRow);\n    return (_range.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN || isColumn) && (_range.startRow = 0, _range.endRow = $a6ab01cd18fda354$var$MAX_SAFE_INTEGER), (_range.rangeType === (0, $7yNYd.RANGE_TYPE).ROW || isRow) && (_range.startColumn = 0, _range.endColumn = $a6ab01cd18fda354$var$MAX_SAFE_INTEGER), _range.rangeType === (0, $7yNYd.RANGE_TYPE).ALL && (_range.startColumn = 0, _range.endColumn = $a6ab01cd18fda354$var$MAX_SAFE_INTEGER, _range.startRow = 0, _range.endRow = $a6ab01cd18fda354$var$MAX_SAFE_INTEGER), _range;\n}, \"handleRangeTypeInput\"), $a6ab01cd18fda354$export$ebe19320acddb45b = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>{\n    let rangeType = range.rangeType;\n    return range.rangeType === (0, $7yNYd.RANGE_TYPE).COLUMN ? rangeType = (0, $7yNYd.RANGE_TYPE).ROW : range.rangeType === (0, $7yNYd.RANGE_TYPE).ROW && (rangeType = (0, $7yNYd.RANGE_TYPE).COLUMN), {\n        startRow: range.startColumn,\n        endRow: range.endColumn,\n        startColumn: range.startRow,\n        endColumn: range.endRow,\n        rangeType: rangeType\n    };\n}, \"rotateRange\"), $a6ab01cd18fda354$export$3e70ac2d62a91254 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((fromRange, toRange, effectRange)=>{\n    const _effectRange = {\n        ...effectRange\n    }, _toRange = {\n        ...toRange\n    }, getIntersects = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((line1, line2)=>{\n        const start = Math.max(line1.start, line2.start), end = Math.min(line1.end, line2.end);\n        return end < start ? null : {\n            start: start,\n            end: end\n        };\n    }, \"getIntersects\"), getLength = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((line)=>line.end - line.start + 1, \"getLength\"), getRelative = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((line, origin)=>({\n            start: line.start - origin.start,\n            end: line.start - origin.start + line.end - line.start\n        }), \"getRelative\"), getAbsolute = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((line, origin)=>({\n            start: origin.start + line.start,\n            end: origin.start + line.start + line.end - line.start\n        }), \"getAbsolute\"), isToLargeFrom = toRange.start > fromRange.start;\n    if (isToLargeFrom) {\n        const step = Math.min(fromRange.end, toRange.start) - fromRange.start + 1;\n        _toRange.start -= step, _toRange.end -= step;\n    }\n    const fromRangeStep = getLength(fromRange), toRangeStep = fromRangeStep, fromRangeIntersectsEffectRange = getIntersects(fromRange, _effectRange), isFromRangeContainEffectRange = fromRangeIntersectsEffectRange && getLength(fromRangeIntersectsEffectRange) >= getLength(_effectRange);\n    if (fromRange.end < _effectRange.start) _effectRange.start -= fromRangeStep, _effectRange.end -= fromRangeStep;\n    else if (fromRangeIntersectsEffectRange) {\n        const fromRangeIntersectsEffectRangeStep = getLength(fromRangeIntersectsEffectRange);\n        if (isFromRangeContainEffectRange) {\n            const relative = getRelative(_effectRange, fromRange), newLine = getAbsolute(relative, _toRange);\n            _effectRange.start = newLine.start, _effectRange.end = newLine.end;\n        } else fromRangeIntersectsEffectRange.start > fromRange.start ? isToLargeFrom ? (_effectRange.end -= fromRangeIntersectsEffectRangeStep + fromRangeStep, _effectRange.start -= fromRangeStep) : _effectRange.end -= fromRangeIntersectsEffectRangeStep : isToLargeFrom ? _effectRange.end -= fromRangeIntersectsEffectRangeStep : _effectRange.start > fromRange.start && _effectRange.end > fromRange.end ? (_effectRange.start -= fromRangeStep, _effectRange.end -= fromRangeStep + fromRangeIntersectsEffectRangeStep) : _effectRange.end -= fromRangeIntersectsEffectRangeStep;\n    }\n    const toRangeIntersectsEffectRange = getIntersects(_toRange, _effectRange);\n    return isFromRangeContainEffectRange || (_toRange.start <= _effectRange.start ? (_effectRange.start += toRangeStep, _effectRange.end += toRangeStep) : toRangeIntersectsEffectRange && (isToLargeFrom ? _toRange.end <= _effectRange.start || _toRange.start <= _effectRange.start && _toRange.end >= _effectRange.start ? (_effectRange.start += toRangeStep, _effectRange.end += toRangeStep) : _toRange.start >= _effectRange.start && _toRange.start <= _effectRange.end && (_effectRange.end += toRangeStep) : _effectRange.start < _toRange.start && _effectRange.end > _toRange.start ? _effectRange.end += toRangeStep : (_effectRange.start >= _toRange.end || _effectRange.start >= _toRange.start && _effectRange.start <= _toRange.end) && (_effectRange.end += toRangeStep, _effectRange.start += toRangeStep))), {\n        step: _effectRange.start - effectRange.start,\n        length: getLength(_effectRange) - getLength(effectRange)\n    };\n}, \"handleBaseMoveRowsCols\"), $a6ab01cd18fda354$export$dfcf24e5214872cf = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, targetRange)=>{\n    const { fromRange: fromRange, toRange: toRange } = params.params || {};\n    if (!toRange || !fromRange) return [];\n    const _fromRange = $a6ab01cd18fda354$var$handleRangeTypeInput(fromRange), _toRange = $a6ab01cd18fda354$var$handleRangeTypeInput(toRange), _targetRange = $a6ab01cd18fda354$var$handleRangeTypeInput(targetRange), result = $a6ab01cd18fda354$export$3e70ac2d62a91254({\n        start: _fromRange.startRow,\n        end: _fromRange.endRow\n    }, {\n        start: _toRange.startRow,\n        end: _toRange.endRow\n    }, {\n        start: _targetRange.startRow,\n        end: _targetRange.endRow\n    });\n    return result === null ? [\n        {\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n        }\n    ] : [\n        {\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n            step: result.step || 0,\n            length: result.length || 0\n        }\n    ];\n}, \"handleMoveRows\"), $a6ab01cd18fda354$var$handleMoveRowsCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, targetRange)=>{\n    const { fromRange: fromRange, toRange: toRange } = params.params || {};\n    if (!fromRange || !toRange) return [\n        targetRange\n    ];\n    const fromRow = fromRange.startRow, count = fromRange.endRow - fromRange.startRow + 1, toRow = toRange.startRow, matrix = new (0, $7yNYd.ObjectMatrix)();\n    return (0, $7yNYd.Range).foreach(targetRange, (row, col)=>{\n        matrix.setValue(row, col, 1);\n    }), matrix.moveRows(fromRow, count, toRow), (0, $7yNYd.queryObjectMatrix)(matrix, (value)=>value === 1);\n}, \"handleMoveRowsCommon\"), $a6ab01cd18fda354$var$handleReorderRangeCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    const { range: range, order: order } = param.params || {};\n    if (!range || !order) return [\n        targetRange\n    ];\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    (0, $7yNYd.Range).foreach(targetRange, (row, col)=>{\n        matrix.setValue(row, col, 1);\n    });\n    const cacheMatrix = new (0, $7yNYd.ObjectMatrix)();\n    return (0, $7yNYd.Range).foreach(range, (row, col)=>{\n        var _a20;\n        if (order.hasOwnProperty(row)) {\n            const targetRow = order[row], cloneCell = (_a20 = matrix.getValue(targetRow, col)) != null ? _a20 : 0;\n            cacheMatrix.setValue(row, col, cloneCell);\n        }\n    }), cacheMatrix.forValue((row, col, cellData)=>{\n        matrix.setValue(row, col, cellData);\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (value)=>value === 1);\n}, \"handleReorderRangeCommon\"), $a6ab01cd18fda354$export$c4fbbd897b45946d = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, targetRange)=>{\n    const { fromRange: fromRange, toRange: toRange } = params.params || {};\n    if (!toRange || !fromRange) return [];\n    const _fromRange = $a6ab01cd18fda354$var$handleRangeTypeInput(fromRange), _toRange = $a6ab01cd18fda354$var$handleRangeTypeInput(toRange), _targetRange = $a6ab01cd18fda354$var$handleRangeTypeInput(targetRange), result = $a6ab01cd18fda354$export$3e70ac2d62a91254({\n        start: _fromRange.startColumn,\n        end: _fromRange.endColumn\n    }, {\n        start: _toRange.startColumn,\n        end: _toRange.endColumn\n    }, {\n        start: _targetRange.startColumn,\n        end: _targetRange.endColumn\n    });\n    return result === null ? [\n        {\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n        }\n    ] : [\n        {\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove,\n            step: result.step || 0,\n            length: result.length || 0\n        }\n    ];\n}, \"handleMoveCols\"), $a6ab01cd18fda354$var$handleMoveColsCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((params, targetRange)=>{\n    const { fromRange: fromRange, toRange: toRange } = params.params || {};\n    if (!fromRange || !toRange) return [\n        targetRange\n    ];\n    const fromCol = fromRange.startColumn, count = fromRange.endColumn - fromRange.startColumn + 1, toCol = toRange.startColumn, matrix = new (0, $7yNYd.ObjectMatrix)();\n    return (0, $7yNYd.Range).foreach(targetRange, (row, col)=>{\n        matrix.setValue(row, col, 1);\n    }), matrix.moveColumns(fromCol, count, toCol), (0, $7yNYd.queryObjectMatrix)(matrix, (value)=>value === 1);\n}, \"handleMoveColsCommon\"), $a6ab01cd18fda354$export$ecdf3f3bda4dc820 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20, _b;\n    const toRange = (_a20 = param.params) == null ? void 0 : _a20.toRange, fromRange = (_b = param.params) == null ? void 0 : _b.fromRange;\n    if (!toRange || !fromRange) return [];\n    const operators = [];\n    if ((0, $7yNYd.Rectangle).contains(toRange, targetRange) && operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    }), (0, $7yNYd.Rectangle).contains(fromRange, targetRange)) {\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n        });\n        const relativeRange = (0, $7yNYd.Rectangle).getRelativeRange(targetRange, fromRange), positionRange = (0, $7yNYd.Rectangle).getPositionRange(relativeRange, toRange);\n        return [\n            {\n                type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Set,\n                range: positionRange\n            }\n        ];\n    }\n    return operators;\n}, \"handleMoveRange\"), $a6ab01cd18fda354$var$handleMoveRangeCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20, _b;\n    const toRange = (_a20 = param.params) == null ? void 0 : _a20.toRange, fromRange = (_b = param.params) == null ? void 0 : _b.fromRange;\n    if (!toRange || !fromRange) return [\n        targetRange\n    ];\n    if (!(0, $7yNYd.Rectangle).intersects(fromRange, targetRange) && !(0, $7yNYd.Rectangle).intersects(toRange, targetRange)) return [\n        targetRange\n    ];\n    if ((0, $7yNYd.Rectangle).contains(fromRange, targetRange)) {\n        const relativeRange = (0, $7yNYd.Rectangle).getRelativeRange(targetRange, fromRange);\n        return [\n            (0, $7yNYd.Rectangle).getPositionRange(relativeRange, toRange)\n        ];\n    }\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    (0, $7yNYd.Range).foreach(targetRange, (row, col)=>{\n        matrix.setValue(row, col, 1);\n    });\n    const fromMatrix = new (0, $7yNYd.ObjectMatrix)(), loopFromRange = (0, $7yNYd.Rectangle).getIntersects(fromRange, targetRange);\n    loopFromRange && (0, $7yNYd.Range).foreach(loopFromRange, (row, col)=>{\n        matrix.getValue(row, col) && (matrix.setValue(row, col, void 0), fromMatrix.setValue(row, col, 1));\n    });\n    const columnOffset = toRange.startColumn - fromRange.startColumn, rowOffset = toRange.startRow - fromRange.startRow, loopToRange = {\n        startColumn: toRange.startColumn - columnOffset,\n        endColumn: toRange.endColumn - columnOffset,\n        startRow: toRange.startRow - rowOffset,\n        endRow: toRange.endRow - rowOffset\n    };\n    return loopToRange && (0, $7yNYd.Range).foreach(loopToRange, (row, col)=>{\n        var _a21;\n        const targetRow = row + rowOffset, targetCol = col + columnOffset;\n        matrix.setValue(targetRow, targetCol, (_a21 = fromMatrix.getValue(row, col)) != null ? _a21 : 0);\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (value)=>value === 1);\n}, \"handleMoveRangeCommon\"), $a6ab01cd18fda354$export$5f8c3d0acd7decf6 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((_removeRange, _targetRange)=>{\n    const removeRange = $a6ab01cd18fda354$var$handleRangeTypeInput(_removeRange), targetRange = $a6ab01cd18fda354$var$handleRangeTypeInput(_targetRange), getLength = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>range.endColumn - range.startColumn + 1, \"getLength\"), getRowLength = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>range.endRow - range.startRow + 1, \"getRowLength\");\n    if (removeRange.startRow <= targetRange.startRow && removeRange.endRow >= targetRange.endRow) {\n        if (// 2\n        targetRange.startColumn < removeRange.startColumn && targetRange.endColumn >= removeRange.startColumn && targetRange.endColumn <= removeRange.endColumn || // 6\n        targetRange.startColumn < removeRange.startColumn && targetRange.endColumn >= removeRange.endColumn) {\n            const intersectedRange = (0, $7yNYd.Rectangle).getIntersects(targetRange, removeRange);\n            if (intersectedRange) return {\n                step: 0,\n                length: -getLength(intersectedRange)\n            };\n        }\n        if (targetRange.startColumn >= removeRange.startColumn && targetRange.endColumn <= removeRange.endColumn && getRowLength(removeRange) >= getRowLength(targetRange)) return null;\n        if (targetRange.startColumn >= removeRange.startColumn && targetRange.startColumn <= removeRange.endColumn && targetRange.endColumn > removeRange.endColumn) {\n            const intersectedRange = (0, $7yNYd.Rectangle).getIntersects(targetRange, removeRange);\n            if (intersectedRange) {\n                const length = -getLength(intersectedRange);\n                return {\n                    step: -(getLength(removeRange) - getLength(intersectedRange)),\n                    length: length\n                };\n            }\n        }\n        if (targetRange.startColumn > removeRange.endColumn) return {\n            step: -getLength(removeRange),\n            length: 0\n        };\n    }\n    return {\n        step: 0,\n        length: 0\n    };\n}, \"handleBaseRemoveRange\"), $a6ab01cd18fda354$export$fb42dcd01ff39140 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$5f8c3d0acd7decf6(range, targetRange);\n    if (!result) operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    });\n    else {\n        const { step: step, length: length } = result;\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove,\n            step: step,\n            length: length\n        });\n    }\n    return operators;\n}, \"handleIRemoveCol\"), $a6ab01cd18fda354$export$18cf6b538c63f0ed = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$5f8c3d0acd7decf6($a6ab01cd18fda354$export$ebe19320acddb45b(range), $a6ab01cd18fda354$export$ebe19320acddb45b(targetRange));\n    if (!result) operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    });\n    else {\n        const { step: step, length: length } = result;\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n            step: step,\n            length: length\n        });\n    }\n    return operators;\n}, \"handleIRemoveRow\"), $a6ab01cd18fda354$var$handleReorderRange = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    const { range: range, order: order } = param.params || {};\n    if (!range || !order) return [];\n    if ((0, $7yNYd.Rectangle).contains(range, targetRange) && targetRange.endRow === targetRange.startRow) {\n        const operators = [], targetRow = targetRange.startRow;\n        for(const k in order)if (order[k] === targetRow) {\n            const toRow = Number(k);\n            return operators.push({\n                type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n                step: toRow - targetRow,\n                length: 0\n            }), operators;\n        }\n        return [];\n    }\n    return [];\n}, \"handleReorderRange\"), $a6ab01cd18fda354$export$2557155be7715fa2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((_insertRange, _targetRange)=>{\n    const insertRange = $a6ab01cd18fda354$var$handleRangeTypeInput(_insertRange), targetRange = $a6ab01cd18fda354$var$handleRangeTypeInput(_targetRange), getLength = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>range.endColumn - range.startColumn + 1, \"getLength\");\n    if (insertRange.startRow <= targetRange.startRow && insertRange.endRow >= targetRange.endRow) {\n        if (// 2\n        targetRange.startColumn < insertRange.startColumn && targetRange.endColumn >= insertRange.startColumn && targetRange.endColumn <= insertRange.endColumn || // 6\n        targetRange.startColumn < insertRange.startColumn && targetRange.endColumn >= insertRange.endColumn) return {\n            step: 0,\n            length: getLength(insertRange)\n        };\n        if (// 3\n        targetRange.startColumn >= insertRange.startColumn && targetRange.endColumn <= insertRange.endColumn || // 4\n        targetRange.startColumn > insertRange.startColumn && targetRange.startColumn <= insertRange.endColumn && targetRange.endColumn > insertRange.endColumn || //5\n        targetRange.startColumn >= insertRange.endColumn) return {\n            step: getLength(insertRange),\n            length: 0\n        };\n    }\n    return {\n        step: 0,\n        length: 0\n    };\n}, \"handleBaseInsertRange\");\nfunction $a6ab01cd18fda354$var$handleBaseMoveRange(fromRange, toRange, targetRange) {\n    const operators = [];\n    if ((0, $7yNYd.Rectangle).contains(toRange, targetRange) && operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    }), (0, $7yNYd.Rectangle).contains(fromRange, targetRange)) {\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n        });\n        const relativeRange = (0, $7yNYd.Rectangle).getRelativeRange(targetRange, fromRange), positionRange = (0, $7yNYd.Rectangle).getPositionRange(relativeRange, toRange);\n        return [\n            {\n                type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Set,\n                range: positionRange\n            }\n        ];\n    }\n    return operators;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$handleBaseMoveRange, \"handleBaseMoveRange\");\nconst $a6ab01cd18fda354$export$601c242ecf0fd772 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$2557155be7715fa2($a6ab01cd18fda354$export$ebe19320acddb45b(range), $a6ab01cd18fda354$export$ebe19320acddb45b(targetRange)), { step: step, length: length } = result;\n    return operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n        step: step,\n        length: length\n    }), operators;\n}, \"handleInsertRow\"), $a6ab01cd18fda354$export$34feed632626a125 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$2557155be7715fa2(range, targetRange), { step: step, length: length } = result;\n    return operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove,\n        step: step,\n        length: length\n    }), operators;\n}, \"handleInsertCol\"), $a6ab01cd18fda354$export$a42813264eacd066 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$2557155be7715fa2($a6ab01cd18fda354$export$ebe19320acddb45b(range), $a6ab01cd18fda354$export$ebe19320acddb45b(targetRange)), { step: step, length: length } = result;\n    return operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n        step: step,\n        length: length\n    }), operators;\n}, \"handleInsertRangeMoveDown\"), $a6ab01cd18fda354$var$handleInsertRangeMoveDownCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [\n        targetRange\n    ];\n    const moveCount = range.endRow - range.startRow + 1, bottomRange = {\n        ...range,\n        startRow: range.startRow,\n        endRow: Number.POSITIVE_INFINITY\n    }, noMoveRanges = (0, $7yNYd.Rectangle).subtract(targetRange, bottomRange), targetMoveRange = (0, $7yNYd.Rectangle).getIntersects(bottomRange, targetRange);\n    if (!targetMoveRange) return [\n        targetRange\n    ];\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    return noMoveRanges.forEach((noMoveRange)=>{\n        (0, $7yNYd.Range).foreach(noMoveRange, (row, col)=>{\n            matrix.setValue(row, col, 1);\n        });\n    }), targetMoveRange && (0, $7yNYd.Range).foreach(targetMoveRange, (row, col)=>{\n        matrix.setValue(row + moveCount, col, 1);\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (v)=>v === 1);\n}, \"handleInsertRangeMoveDownCommon\"), $a6ab01cd18fda354$export$f0b5efa122f7b5ec = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$2557155be7715fa2(range, targetRange), { step: step, length: length } = result;\n    return operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove,\n        step: step,\n        length: length\n    }), operators;\n}, \"handleInsertRangeMoveRight\"), $a6ab01cd18fda354$var$handleInsertRangeMoveRightCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [\n        targetRange\n    ];\n    const moveCount = range.endColumn - range.startColumn + 1, bottomRange = {\n        ...range,\n        startColumn: range.startColumn,\n        endColumn: Number.POSITIVE_INFINITY\n    }, noMoveRanges = (0, $7yNYd.Rectangle).subtract(targetRange, bottomRange), targetMoveRange = (0, $7yNYd.Rectangle).getIntersects(bottomRange, targetRange);\n    if (!targetMoveRange) return [\n        targetRange\n    ];\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    return noMoveRanges.forEach((noMoveRange)=>{\n        (0, $7yNYd.Range).foreach(noMoveRange, (row, col)=>{\n            matrix.setValue(row, col, 1);\n        });\n    }), targetMoveRange && (0, $7yNYd.Range).foreach(targetMoveRange, (row, col)=>{\n        matrix.setValue(row, col + moveCount, 1);\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (v)=>v === 1);\n}, \"handleInsertRangeMoveRightCommon\"), $a6ab01cd18fda354$export$1611d9e0bc977436 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$5f8c3d0acd7decf6(range, targetRange);\n    if (!result) operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    });\n    else {\n        const { step: step, length: length } = result;\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove,\n            step: step,\n            length: length\n        });\n    }\n    return operators;\n}, \"handleDeleteRangeMoveLeft\"), $a6ab01cd18fda354$var$handleDeleteRangeMoveLeftCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [\n        targetRange\n    ];\n    const rightRange = {\n        startRow: range.startRow,\n        endRow: range.endRow,\n        startColumn: range.startColumn,\n        endColumn: Number.POSITIVE_INFINITY\n    }, moveCount = range.endColumn - range.startColumn + 1, targetDeleteRange = (0, $7yNYd.Rectangle).getIntersects(range, targetRange), noMoveRanges = (0, $7yNYd.Rectangle).subtract(targetRange, rightRange), targetMoveRange = (0, $7yNYd.Rectangle).getIntersects(rightRange, targetRange);\n    if (!targetDeleteRange && !targetMoveRange) return [\n        targetRange\n    ];\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    return targetMoveRange && (0, $7yNYd.Range).foreach(targetMoveRange, (row, col)=>{\n        matrix.setValue(row, col - moveCount, 1);\n    }), targetDeleteRange && (0, $7yNYd.Range).foreach(targetDeleteRange, (row, col)=>{\n        matrix.setValue(row, col - moveCount, 0);\n    }), noMoveRanges.forEach((noMoveRange)=>{\n        (0, $7yNYd.Range).foreach(noMoveRange, (row, col)=>{\n            matrix.setValue(row, col, 1);\n        });\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (v)=>v === 1);\n}, \"handleDeleteRangeMoveLeftCommon\"), $a6ab01cd18fda354$export$fce8207daaebcfe4 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [];\n    const operators = [], result = $a6ab01cd18fda354$export$5f8c3d0acd7decf6($a6ab01cd18fda354$export$ebe19320acddb45b(range), $a6ab01cd18fda354$export$ebe19320acddb45b(targetRange));\n    if (!result) operators.push({\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n    });\n    else {\n        const { step: step, length: length } = result;\n        operators.push({\n            type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove,\n            step: step,\n            length: length\n        });\n    }\n    return operators;\n}, \"handleDeleteRangeMoveUp\"), $a6ab01cd18fda354$var$handleDeleteRangeMoveUpCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n    if (!range) return [\n        targetRange\n    ];\n    const bottomRange = {\n        ...range,\n        startRow: range.startRow,\n        endRow: Number.POSITIVE_INFINITY\n    }, moveCount = range.endRow - range.startRow + 1, targetDeleteRange = (0, $7yNYd.Rectangle).getIntersects(range, targetRange), noMoveRanges = (0, $7yNYd.Rectangle).subtract(targetRange, bottomRange), targetMoveRange = (0, $7yNYd.Rectangle).getIntersects(bottomRange, targetRange);\n    if (!targetDeleteRange && !targetMoveRange) return [\n        targetRange\n    ];\n    const matrix = new (0, $7yNYd.ObjectMatrix)();\n    return targetMoveRange && (0, $7yNYd.Range).foreach(targetMoveRange, (row, col)=>{\n        matrix.setValue(row - moveCount, col, 1);\n    }), targetDeleteRange && (0, $7yNYd.Range).foreach(targetDeleteRange, (row, col)=>{\n        matrix.setValue(row - moveCount, col, 0);\n    }), noMoveRanges.forEach((noMoveRange)=>{\n        (0, $7yNYd.Range).foreach(noMoveRange, (row, col)=>{\n            matrix.setValue(row, col, 1);\n        });\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (v)=>v === 1);\n}, \"handleDeleteRangeMoveUpCommon\"), $a6ab01cd18fda354$var$handleRemoveRowCommon = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((param, targetRange)=>{\n    var _a20;\n    const ranges = (_a20 = param.ranges) != null ? _a20 : [\n        param.range\n    ], matrix = new (0, $7yNYd.ObjectMatrix)();\n    return (0, $7yNYd.Range).foreach(targetRange, (row, col)=>{\n        matrix.setValue(row, col, 1);\n    }), ranges.forEach((range)=>{\n        const startRow = range.startRow, count = range.endRow - startRow + 1;\n        matrix.removeRows(startRow, count);\n    }), (0, $7yNYd.queryObjectMatrix)(matrix, (value)=>value === 1);\n}, \"handleRemoveRowCommon\"), $a6ab01cd18fda354$export$6e576466ae7d2afb = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((operators, range)=>{\n    let result = {\n        ...range\n    };\n    return operators.forEach((operator)=>{\n        switch(operator.type){\n            case $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete:\n                result = null;\n                break;\n            case $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove:\n                if (!result) return;\n                result.startColumn += operator.step, result.endColumn += operator.step + (operator.length || 0);\n                break;\n            case $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove:\n                if (!result) return;\n                result.startRow += operator.step, result.endRow += operator.step + (operator.length || 0);\n                break;\n            case $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Set:\n                result = operator.range;\n                break;\n        }\n    }), result && (result.endColumn < result.startColumn || result.endRow < result.startRow) ? null : result;\n}, \"runRefRangeMutations\"), $a6ab01cd18fda354$export$9580c9267dc89e66 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, commandInfo)=>{\n    let operator = [];\n    switch(commandInfo.id){\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveLeftCommandId:\n            operator = $a6ab01cd18fda354$export$1611d9e0bc977436(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveUpCommandId:\n            operator = $a6ab01cd18fda354$export$fce8207daaebcfe4(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertColCommandId:\n            operator = $a6ab01cd18fda354$export$34feed632626a125(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveDownCommandId:\n            operator = $a6ab01cd18fda354$export$a42813264eacd066(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveRightCommandId:\n            operator = $a6ab01cd18fda354$export$f0b5efa122f7b5ec(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRowCommandId:\n            operator = $a6ab01cd18fda354$export$601c242ecf0fd772(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId:\n            operator = $a6ab01cd18fda354$export$c4fbbd897b45946d(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRangeCommandId:\n            operator = $a6ab01cd18fda354$export$ecdf3f3bda4dc820(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId:\n            operator = $a6ab01cd18fda354$export$dfcf24e5214872cf(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveColCommandId:\n            operator = $a6ab01cd18fda354$export$fb42dcd01ff39140(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveRowCommandId:\n            operator = $a6ab01cd18fda354$export$18cf6b538c63f0ed(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.ReorderRangeCommandId:\n            operator = $a6ab01cd18fda354$var$handleReorderRange(commandInfo, range);\n            break;\n    }\n    return $a6ab01cd18fda354$export$6e576466ae7d2afb(operator, range);\n}, \"handleDefaultRangeChangeWithEffectRefCommands\"), $a6ab01cd18fda354$export$6d802dc783a8fe04 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, commandInfo, deps)=>[\n        $a6ab01cd18fda354$export$40e354a17cc79f7f.id,\n        $a6ab01cd18fda354$export$d3997a5569b0810f.id\n    ].includes(commandInfo.id) || $a6ab01cd18fda354$var$getEffectedRangesOnCommand(commandInfo, deps).some((effectRange)=>(0, $7yNYd.Rectangle).intersects(effectRange, range)) ? $a6ab01cd18fda354$export$9580c9267dc89e66(range, commandInfo) : range, \"handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests\"), $a6ab01cd18fda354$export$3d1dddb133eee9fb = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, commandInfo)=>{\n    let operator = [];\n    switch(commandInfo.id){\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveLeftCommandId:\n            return $a6ab01cd18fda354$var$handleDeleteRangeMoveLeftCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveUpCommandId:\n            return $a6ab01cd18fda354$var$handleDeleteRangeMoveUpCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveDownCommandId:\n            return $a6ab01cd18fda354$var$handleInsertRangeMoveDownCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveRightCommandId:\n            return $a6ab01cd18fda354$var$handleInsertRangeMoveRightCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertColCommandId:\n            operator = $a6ab01cd18fda354$export$34feed632626a125(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRowCommandId:\n            operator = $a6ab01cd18fda354$export$601c242ecf0fd772(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId:\n            return $a6ab01cd18fda354$var$handleMoveColsCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRangeCommandId:\n            return $a6ab01cd18fda354$var$handleMoveRangeCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId:\n            return $a6ab01cd18fda354$var$handleMoveRowsCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.ReorderRangeCommandId:\n            return $a6ab01cd18fda354$var$handleReorderRangeCommon(commandInfo, range);\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveColCommandId:\n            operator = $a6ab01cd18fda354$export$fb42dcd01ff39140(commandInfo, range);\n            break;\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveRowCommandId:\n            return $a6ab01cd18fda354$var$handleRemoveRowCommon(commandInfo.params, range);\n    }\n    return $a6ab01cd18fda354$export$6e576466ae7d2afb(operator, range);\n}, \"handleCommonDefaultRangeChangeWithEffectRefCommands\"), $a6ab01cd18fda354$export$e97bd40cc606f733 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, commandInfo, deps)=>[\n        $a6ab01cd18fda354$export$40e354a17cc79f7f.id,\n        $a6ab01cd18fda354$export$d3997a5569b0810f.id,\n        $a6ab01cd18fda354$export$41564dd5272a2ef3.id,\n        $a6ab01cd18fda354$var$InsertRangeMoveRightCommandId\n    ].includes(commandInfo.id) || $a6ab01cd18fda354$var$getEffectedRangesOnCommand(commandInfo, deps).some((effectRange)=>(0, $7yNYd.Rectangle).intersects(effectRange, range)) ? $a6ab01cd18fda354$export$3d1dddb133eee9fb(range, commandInfo) : range, \"handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests\");\nfunction $a6ab01cd18fda354$var$adjustRangeOnMutation(range, mutation) {\n    const { id: id, params: params } = mutation;\n    let baseRangeOperator = {\n        length: 0,\n        step: 0,\n        type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Unknown\n    };\n    switch(id){\n        case $a6ab01cd18fda354$export$f14a5300764a7508.id:\n            baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete;\n            break;\n        case $a6ab01cd18fda354$export$63ddef9080d565c8.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$3e70ac2d62a91254({\n                start: params.sourceRange.startRow,\n                end: params.sourceRange.endRow\n            }, {\n                start: params.targetRange.startRow,\n                end: params.targetRange.endRow\n            }, {\n                start: range.startRow,\n                end: range.endRow\n            }), baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove;\n            break;\n        case $a6ab01cd18fda354$export$b98040a300ab6f6e.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$3e70ac2d62a91254({\n                start: params.sourceRange.startColumn,\n                end: params.sourceRange.endColumn\n            }, {\n                start: params.targetRange.startColumn,\n                end: params.targetRange.endColumn\n            }, {\n                start: range.startColumn,\n                end: range.endColumn\n            }), baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove;\n            break;\n        case $a6ab01cd18fda354$export$1b784c21f081e76a.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$5f8c3d0acd7decf6(params.range, range), baseRangeOperator ? baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove : baseRangeOperator = {\n                step: 0,\n                length: 0,\n                type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n            };\n            break;\n        case $a6ab01cd18fda354$export$9642f6b705de590b.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$5f8c3d0acd7decf6($a6ab01cd18fda354$export$ebe19320acddb45b(params.range), $a6ab01cd18fda354$export$ebe19320acddb45b(range)), baseRangeOperator ? baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove : baseRangeOperator = {\n                step: 0,\n                length: 0,\n                type: $a6ab01cd18fda354$export$c18bb9d3f9b808b3.Delete\n            };\n            break;\n        case $a6ab01cd18fda354$export$823dff2590c7c5ff.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$2557155be7715fa2($a6ab01cd18fda354$export$ebe19320acddb45b(params.range), $a6ab01cd18fda354$export$ebe19320acddb45b(range)), baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.VerticalMove;\n            break;\n        case $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id:\n            baseRangeOperator = $a6ab01cd18fda354$export$2557155be7715fa2(params.range, range), baseRangeOperator.type = $a6ab01cd18fda354$export$c18bb9d3f9b808b3.HorizontalMove;\n            break;\n        case $a6ab01cd18fda354$export$5535d7f795e5bded.id:\n            {\n                const fromRange = params.fromRange || new (0, $7yNYd.ObjectMatrix)(params.from).getRange(), toRange = params.toRange || new (0, $7yNYd.ObjectMatrix)(params.to).getRange();\n                baseRangeOperator = $a6ab01cd18fda354$var$handleBaseMoveRange(fromRange, toRange, range);\n            }\n            break;\n    }\n    return baseRangeOperator ? Array.isArray(baseRangeOperator) ? $a6ab01cd18fda354$export$6e576466ae7d2afb(baseRangeOperator, range) : $a6ab01cd18fda354$export$6e576466ae7d2afb([\n        baseRangeOperator\n    ], range) : range;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$adjustRangeOnMutation, \"adjustRangeOnMutation\");\nfunction $a6ab01cd18fda354$var$getEffectedRangesOnCommand(command, deps) {\n    var _a20, _b, _c, _d, _e, _f;\n    const { selectionManagerService: selectionManagerService } = deps;\n    switch(command.id){\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId:\n            {\n                const params = command.params;\n                return [\n                    params.fromRange,\n                    {\n                        ...params.toRange,\n                        startColumn: params.toRange.startColumn - 0.5,\n                        endColumn: params.toRange.endColumn - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId:\n            {\n                const params = command.params;\n                return [\n                    params.fromRange,\n                    {\n                        ...params.toRange,\n                        startRow: params.toRange.startRow - 0.5,\n                        endRow: params.toRange.startRow - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRangeCommandId:\n            {\n                const params = command;\n                return [\n                    params.params.fromRange,\n                    params.params.toRange\n                ];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRowCommandId:\n            {\n                const range = command.params.range;\n                return [\n                    {\n                        ...range,\n                        startRow: range.startRow - 0.5,\n                        endRow: range.endRow - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertColCommandId:\n            {\n                const range = command.params.range;\n                return [\n                    {\n                        ...range,\n                        startColumn: range.startColumn - 0.5,\n                        endColumn: range.endColumn - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveRowCommandId:\n            return [\n                command.params.range\n            ];\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveColCommandId:\n            return [\n                command.params.range\n            ];\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveUpCommandId:\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveDownCommandId:\n            {\n                const range = ((_a20 = command.params) == null ? void 0 : _a20.range) || ((_c = (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s)=>s.range)) == null ? void 0 : _c[0]);\n                return range ? [\n                    range\n                ] : [];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveLeftCommandId:\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveRightCommandId:\n            {\n                const range = ((_d = command.params) == null ? void 0 : _d.range) || ((_f = (_e = selectionManagerService.getCurrentSelections()) == null ? void 0 : _e.map((s)=>s.range)) == null ? void 0 : _f[0]);\n                return range ? [\n                    range\n                ] : [];\n            }\n        case $a6ab01cd18fda354$export$19a34a018dc3d795.ReorderRangeCommandId:\n            {\n                const params = command, { range: range, order: order } = params.params, effectRanges = [];\n                for(let row = range.startRow; row <= range.endRow; row++)row in order && effectRanges.push({\n                    startRow: row,\n                    endRow: row,\n                    startColumn: range.startColumn,\n                    endColumn: range.endColumn\n                });\n                return effectRanges;\n            }\n    }\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getEffectedRangesOnCommand, \"getEffectedRangesOnCommand\");\nfunction $a6ab01cd18fda354$var$getEffectedRangesOnMutation(mutation) {\n    switch(mutation.id){\n        case $a6ab01cd18fda354$export$b98040a300ab6f6e.id:\n            {\n                const params = mutation.params;\n                return [\n                    params.sourceRange,\n                    {\n                        ...params.targetRange,\n                        startColumn: params.targetRange.startColumn - 0.5,\n                        endColumn: params.targetRange.startColumn - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$63ddef9080d565c8.id:\n            {\n                const params = mutation.params;\n                return [\n                    params.sourceRange,\n                    {\n                        ...params.targetRange,\n                        startRow: params.targetRange.startRow - 0.5,\n                        endRow: params.targetRange.startRow - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$5535d7f795e5bded.id:\n            {\n                const params = mutation.params;\n                return [\n                    new (0, $7yNYd.ObjectMatrix)(params.from.value).getRange(),\n                    new (0, $7yNYd.ObjectMatrix)(params.to.value).getRange()\n                ];\n            }\n        case $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id:\n            {\n                const range = mutation.params.range;\n                return [\n                    {\n                        ...range,\n                        startColumn: range.startColumn - 0.5,\n                        endColumn: range.startColumn - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$823dff2590c7c5ff.id:\n            {\n                const range = mutation.params.range;\n                return [\n                    {\n                        ...range,\n                        startRow: range.startRow - 0.5,\n                        endRow: range.startRow - 0.5\n                    }\n                ];\n            }\n        case $a6ab01cd18fda354$export$1b784c21f081e76a.id:\n            return [\n                mutation.params.range\n            ];\n        case $a6ab01cd18fda354$export$9642f6b705de590b.id:\n            return [\n                mutation.params.range\n            ];\n    }\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getEffectedRangesOnMutation, \"getEffectedRangesOnMutation\");\nvar $a6ab01cd18fda354$var$__defProp$9 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$9 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$9 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$9(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$9(target, key, result), result;\n}, \"__decorateClass$9\"), $a6ab01cd18fda354$var$__decorateParam$9 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$9\");\nconst $a6ab01cd18fda354$var$MERGE_REDO = (0, $7yNYd.createInterceptorKey)(\"MERGE_REDO\"), $a6ab01cd18fda354$var$MERGE_UNDO = (0, $7yNYd.createInterceptorKey)(\"MERGE_UNDO\"), $a6ab01cd18fda354$var$MAX_ROW_COL = Math.floor(Number.MAX_SAFE_INTEGER / 10), $a6ab01cd18fda354$var$_WatchRange = class _WatchRange extends (0, $7yNYd.Disposable) {\n    constructor(_unitId, _subUnitId, _range, _callback, _skipIntersects = !1){\n        super(), this._unitId = _unitId, this._subUnitId = _subUnitId, this._range = _range, this._callback = _callback, this._skipIntersects = _skipIntersects;\n    }\n    onMutation(mutation) {\n        var _a20, _b;\n        if (((_a20 = mutation.params) == null ? void 0 : _a20.unitId) !== this._unitId) return;\n        if (mutation.id === $a6ab01cd18fda354$export$5535d7f795e5bded.id) {\n            const params = mutation.params;\n            if (params.from.subUnitId !== this._subUnitId || params.to.subUnitId !== this._subUnitId) return;\n        } else if (((_b = mutation.params) == null ? void 0 : _b.subUnitId) !== this._subUnitId) return;\n        if (!this._range) return;\n        if (this._skipIntersects) {\n            if (mutation.id === $a6ab01cd18fda354$export$f14a5300764a7508.id) return;\n            const effectRanges = $a6ab01cd18fda354$var$getEffectedRangesOnMutation(mutation);\n            if (effectRanges != null && effectRanges.some((effectRange)=>(0, $7yNYd.Rectangle).intersects(effectRange, this._range))) return;\n        }\n        const afterRange = $a6ab01cd18fda354$var$adjustRangeOnMutation(this._range, mutation);\n        if (afterRange && (0, $7yNYd.Rectangle).equals(afterRange, this._range)) return !1;\n        const beforeChange = this._range;\n        this._range = afterRange, this._callback(beforeChange, afterRange);\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_WatchRange, \"WatchRange\");\nlet $a6ab01cd18fda354$var$WatchRange = $a6ab01cd18fda354$var$_WatchRange;\nvar $a6ab01cd18fda354$var$_a10;\nlet $a6ab01cd18fda354$export$9c9d0dbacf6b589e = ($a6ab01cd18fda354$var$_a10 = class extends (0, $7yNYd.Disposable) {\n    constructor(_commandService, _sheetInterceptorService, _univerInstanceService, _selectionManagerService){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"interceptor\", new (0, $7yNYd.InterceptorManager)({\n            MERGE_REDO: $a6ab01cd18fda354$var$MERGE_REDO,\n            MERGE_UNDO: $a6ab01cd18fda354$var$MERGE_UNDO\n        }));\n        $a6ab01cd18fda354$var$__publicField(this, \"_watchRanges\", /* @__PURE__ */ new Set());\n        $a6ab01cd18fda354$var$__publicField(this, \"_refRangeManagerMap\", /* @__PURE__ */ new Map());\n        $a6ab01cd18fda354$var$__publicField(this, \"_serializer\", $a6ab01cd18fda354$var$createRangeSerializer());\n        // eslint-disable-next-line max-lines-per-function\n        $a6ab01cd18fda354$var$__publicField(this, \"_onRefRangeChange\", /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>{\n            this._sheetInterceptorService.interceptCommand({\n                // eslint-disable-next-line max-lines-per-function\n                getMutations: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((command)=>{\n                    const worksheet = this._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).getActiveSheet(), unitId = $a6ab01cd18fda354$var$getUnitId(this._univerInstanceService), subUnitId = $a6ab01cd18fda354$var$getSubUnitId(this._univerInstanceService);\n                    if (!worksheet || !unitId || !subUnitId) return {\n                        redos: [],\n                        undos: [],\n                        preRedos: [],\n                        preUndos: []\n                    };\n                    const result = (/* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>{\n                        switch(command.id){\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId:\n                                {\n                                    const params = command.params, startColumn = Math.min(params.fromRange.startColumn, params.toRange.startColumn);\n                                    return this._checkRange([\n                                        {\n                                            ...params.fromRange,\n                                            startColumn: startColumn,\n                                            endColumn: worksheet.getColumnCount() - 1\n                                        }\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId:\n                                {\n                                    const params = command.params, startRow = Math.min(params.fromRange.startRow, params.toRange.startRow);\n                                    return this._checkRange([\n                                        {\n                                            ...params.fromRange,\n                                            startRow: startRow,\n                                            endRow: worksheet.getRowCount() - 1\n                                        }\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRangeCommandId:\n                                {\n                                    const params = command;\n                                    return this._checkRange([\n                                        params.params.fromRange,\n                                        params.params.toRange\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRowCommandId:\n                                {\n                                    const range = {\n                                        startRow: command.params.range.startRow,\n                                        endRow: worksheet.getRowCount() - 1,\n                                        startColumn: 0,\n                                        endColumn: worksheet.getColumnCount() - 1,\n                                        rangeType: (0, $7yNYd.RANGE_TYPE).ROW\n                                    };\n                                    return this._checkRange([\n                                        range\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertColCommandId:\n                                {\n                                    const colStart = command.params.range.startColumn, range = {\n                                        startRow: 0,\n                                        endRow: worksheet.getRowCount() - 1,\n                                        startColumn: colStart,\n                                        endColumn: worksheet.getColumnCount() - 1,\n                                        rangeType: (0, $7yNYd.RANGE_TYPE).COLUMN\n                                    };\n                                    return this._checkRange([\n                                        range\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveRowCommandId:\n                                {\n                                    const range = {\n                                        startRow: command.params.range.startRow,\n                                        endRow: worksheet.getRowCount() - 1,\n                                        startColumn: 0,\n                                        endColumn: worksheet.getColumnCount() - 1,\n                                        rangeType: (0, $7yNYd.RANGE_TYPE).ROW\n                                    };\n                                    return this._checkRange([\n                                        range\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.RemoveColCommandId:\n                                {\n                                    const colStart = command.params.range.startColumn, range = {\n                                        startRow: 0,\n                                        endRow: worksheet.getRowCount() - 1,\n                                        startColumn: colStart,\n                                        endColumn: worksheet.getColumnCount() - 1,\n                                        rangeType: (0, $7yNYd.RANGE_TYPE).COLUMN\n                                    };\n                                    return this._checkRange([\n                                        range\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveUpCommandId:\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveDownCommandId:\n                                {\n                                    const range = command.params.range || $a6ab01cd18fda354$var$getSelectionRanges(this._selectionManagerService)[0], effectRange = {\n                                        startRow: range.startRow,\n                                        startColumn: range.startColumn,\n                                        endColumn: range.endColumn,\n                                        endRow: $a6ab01cd18fda354$var$MAX_ROW_COL\n                                    };\n                                    return this._checkRange([\n                                        effectRange\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.DeleteRangeMoveLeftCommandId:\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.InsertRangeMoveRightCommandId:\n                                {\n                                    const range = command.params.range || $a6ab01cd18fda354$var$getSelectionRanges(this._selectionManagerService)[0], effectRange = {\n                                        startRow: range.startRow,\n                                        startColumn: range.startColumn,\n                                        endColumn: $a6ab01cd18fda354$var$MAX_ROW_COL,\n                                        endRow: range.endRow\n                                    };\n                                    return this._checkRange([\n                                        effectRange\n                                    ], unitId, subUnitId);\n                                }\n                            case $a6ab01cd18fda354$export$19a34a018dc3d795.ReorderRangeCommandId:\n                                {\n                                    const params = command, { range: range, order: order } = params.params, effectRanges = [];\n                                    for(let row = range.startRow; row <= range.endRow; row++)row in order && effectRanges.push({\n                                        startRow: row,\n                                        endRow: row,\n                                        startColumn: range.startColumn,\n                                        endColumn: range.endColumn\n                                    });\n                                    return this._checkRange(effectRanges, unitId, subUnitId);\n                                }\n                        }\n                    }, \"getEffectsCbList\")() || []).reduce((result2, currentFn)=>{\n                        const v = currentFn(command);\n                        return result2.push(v), result2;\n                    }, []).reduce((result2, currentValue)=>{\n                        var _a20, _b;\n                        return result2.redos.push(...currentValue.redos), result2.undos.push(...currentValue.undos), result2.preRedos.push(...(_a20 = currentValue.preRedos) != null ? _a20 : []), result2.preUndos.push(...(_b = currentValue.preUndos) != null ? _b : []), result2;\n                    }, {\n                        redos: [],\n                        undos: [],\n                        preUndos: [],\n                        preRedos: []\n                    }), preRedos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_REDO)(result.preRedos, null) || [], redos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_REDO)(result.redos, null) || [], preUndos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_UNDO)(result.preUndos, null) || [], undos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_UNDO)(result.undos, null) || [];\n                    return {\n                        redos: redos,\n                        undos: undos,\n                        preRedos: preRedos,\n                        preUndos: preUndos\n                    };\n                }, \"getMutations\")\n            });\n        }, \"_onRefRangeChange\"));\n        $a6ab01cd18fda354$var$__publicField(this, \"_checkRange\", /* @__PURE__ */ $a6ab01cd18fda354$var$__name((effectRanges, unitId, subUnitId)=>{\n            const managerId = $a6ab01cd18fda354$var$getRefRangId(unitId, subUnitId), manager = this._refRangeManagerMap.get(managerId);\n            if (manager) {\n                const callbackSet = /* @__PURE__ */ new Set();\n                return [\n                    ...manager.keys()\n                ].forEach((key)=>{\n                    const cbList = manager.get(key), range = this._serializer.deserialize(key), realRange = {\n                        ...range,\n                        startRow: +range.startRow,\n                        endRow: +range.endRow,\n                        startColumn: +range.startColumn,\n                        endColumn: +range.endColumn,\n                        rangeType: range.rangeType && +range.rangeType\n                    };\n                    effectRanges.some((item)=>(0, $7yNYd.Rectangle).intersects(item, realRange)) && cbList && cbList.forEach((callback)=>{\n                        callbackSet.add(callback);\n                    });\n                }), [\n                    ...callbackSet\n                ];\n            }\n            return [];\n        }, \"_checkRange\"));\n        /**\n     * Listens to an area and triggers a fall back when movement occurs\n     * @param {IRange} range the area that needs to be monitored\n     * @param {RefRangCallback} callback the callback function that is executed when the range changes\n     * @param {string} [_unitId]\n     * @param {string} [_subUnitId]\n     * @memberof RefRangeService\n     */ $a6ab01cd18fda354$var$__publicField(this, \"registerRefRange\", /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range, callback, _unitId, _subUnitId)=>{\n            const unitId = _unitId || $a6ab01cd18fda354$var$getUnitId(this._univerInstanceService), subUnitId = _subUnitId || $a6ab01cd18fda354$var$getSubUnitId(this._univerInstanceService);\n            if (!unitId || !subUnitId) return (0, $7yNYd.toDisposable)(()=>{});\n            const refRangeManagerId = $a6ab01cd18fda354$var$getRefRangId(unitId, subUnitId), rangeString = this._serializer.serialize(range);\n            let manager = this._refRangeManagerMap.get(refRangeManagerId);\n            manager || (manager = /* @__PURE__ */ new Map(), this._refRangeManagerMap.set(refRangeManagerId, manager));\n            const refRangeCallbackList = manager.get(rangeString);\n            return refRangeCallbackList ? refRangeCallbackList.add(callback) : manager.set(rangeString, /* @__PURE__ */ new Set([\n                callback\n            ])), (0, $7yNYd.toDisposable)(()=>{\n                const refRangeCallbackList2 = manager.get(rangeString);\n                refRangeCallbackList2 && (refRangeCallbackList2.delete(callback), refRangeCallbackList2.size || (manager.delete(rangeString), manager.size || this._refRangeManagerMap.delete(refRangeManagerId)));\n            });\n        }, \"registerRefRange\"));\n        this._commandService = _commandService, this._sheetInterceptorService = _sheetInterceptorService, this._univerInstanceService = _univerInstanceService, this._selectionManagerService = _selectionManagerService, this._onRefRangeChange(), this.interceptor.intercept(this.interceptor.getInterceptPoints().MERGE_REDO, {\n            priority: -1,\n            handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((list)=>list, \"handler\")\n        }), this.interceptor.intercept(this.interceptor.getInterceptPoints().MERGE_UNDO, {\n            priority: -1,\n            handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((list)=>list, \"handler\")\n        });\n    }\n    watchRange(unitId, subUnitId, range, callback, skipIntersects) {\n        let watchRangesListener;\n        this._watchRanges.size === 0 && (watchRangesListener = this._commandService.onCommandExecuted((command)=>{\n            if (command.type !== (0, $7yNYd.CommandType).MUTATION) return !1;\n            for (const watchRange2 of this._watchRanges)watchRange2.onMutation(command);\n        }));\n        const watchRange = new $a6ab01cd18fda354$var$WatchRange(unitId, subUnitId, range, callback, skipIntersects);\n        this._watchRanges.add(watchRange);\n        const teardownWatching = (0, $7yNYd.toDisposable)(()=>{\n            this._watchRanges.delete(watchRange), this._watchRanges.size === 0 && (watchRangesListener == null || watchRangesListener.dispose(), watchRangesListener = null);\n        }), registerToService = this.disposeWithMe(teardownWatching);\n        return (0, $7yNYd.toDisposable)(()=>{\n            registerToService.dispose(), teardownWatching.dispose();\n        });\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a10, \"RefRangeService\"), $a6ab01cd18fda354$var$_a10);\n$a6ab01cd18fda354$export$9c9d0dbacf6b589e = $a6ab01cd18fda354$var$__decorateClass$9([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$export$9c9d0dbacf6b589e),\n    $a6ab01cd18fda354$var$__decorateParam$9(0, (0, $7yNYd.ICommandService)),\n    $a6ab01cd18fda354$var$__decorateParam$9(1, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$80833ae4acf64dfd)),\n    $a6ab01cd18fda354$var$__decorateParam$9(2, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$9(3, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$c93d00f3ceba73b5))\n], $a6ab01cd18fda354$export$9c9d0dbacf6b589e);\nfunction $a6ab01cd18fda354$var$getUnitId(univerInstanceService) {\n    return univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).getUnitId();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getUnitId, \"getUnitId\");\nfunction $a6ab01cd18fda354$var$getSubUnitId(univerInstanceService) {\n    var _a20;\n    return (_a20 = univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).getActiveSheet()) == null ? void 0 : _a20.getSheetId();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getSubUnitId, \"getSubUnitId\");\nfunction $a6ab01cd18fda354$var$getSelectionRanges(selectionManagerService) {\n    var _a20;\n    return ((_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range)) || [];\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getSelectionRanges, \"getSelectionRanges\");\nfunction $a6ab01cd18fda354$var$getRefRangId(unitId, subUnitId) {\n    return `${unitId}_${subUnitId}`;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getRefRangId, \"getRefRangId\");\nfunction $a6ab01cd18fda354$var$createRangeSerializer() {\n    const keyList = [\n        \"startRow\",\n        \"startColumn\",\n        \"endRow\",\n        \"endColumn\",\n        \"rangeType\"\n    ], SPLIT_CODE = \"_\";\n    return {\n        deserialize: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((rangeString)=>{\n            const map2 = keyList.reduce((preValue, currentValue, index)=>(preValue[String(index)] = currentValue, preValue), {});\n            return rangeString.split(SPLIT_CODE).reduce((preValue, currentValue, _index)=>{\n                const index = String(_index);\n                return currentValue && map2[index] && (preValue[map2[index]] = currentValue), preValue;\n            }, {});\n        }, \"deserialize\"),\n        serialize: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((range)=>keyList.reduce((preValue, currentValue, index)=>{\n                const value = range[currentValue];\n                return value !== void 0 ? `${preValue}${index > 0 ? SPLIT_CODE : \"\"}${value}` : `${preValue}`;\n            }, \"\"), \"serialize\")\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$createRangeSerializer, \"createRangeSerializer\");\nvar $a6ab01cd18fda354$var$__defProp$8 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$8 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$8 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$8(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$8(target, key, result), result;\n}, \"__decorateClass$8\"), $a6ab01cd18fda354$var$__decorateParam$8 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$8\");\nconst $a6ab01cd18fda354$var$mutationIdByRowCol$1 = [\n    $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n    $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n    $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n    $a6ab01cd18fda354$export$9642f6b705de590b.id\n], $a6ab01cd18fda354$var$mutationIdArrByMove$1 = [\n    $a6ab01cd18fda354$export$63ddef9080d565c8.id,\n    $a6ab01cd18fda354$export$b98040a300ab6f6e.id\n];\nfunction $a6ab01cd18fda354$export$7dd3f8a552d30610(selection, type) {\n    let ranges = selection;\n    if (type !== void 0) {\n        const rectangles = [];\n        for(let i = 0; i < ranges.length; i++){\n            const { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = ranges[i];\n            if (type === (0, $7yNYd.Dimension).ROWS) for(let r = startRow; r <= endRow; r++){\n                const data = {\n                    startRow: r,\n                    endRow: r,\n                    startColumn: startColumn,\n                    endColumn: endColumn\n                };\n                rectangles.push(data);\n            }\n            else if (type === (0, $7yNYd.Dimension).COLUMNS) for(let c = startColumn; c <= endColumn; c++){\n                const data = {\n                    startRow: startRow,\n                    endRow: endRow,\n                    startColumn: c,\n                    endColumn: c\n                };\n                rectangles.push(data);\n            }\n        }\n        ranges = rectangles;\n    }\n    return ranges;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$7dd3f8a552d30610, \"getAddMergeMutationRangeByType\");\nconst $a6ab01cd18fda354$export$905d574af45cae88 = (0, $7yNYd.createInterceptorKey)(\"mergeCellPermissionCheck\");\nvar $a6ab01cd18fda354$var$_a11;\nlet $a6ab01cd18fda354$export$bef537c190ad4a94 = ($a6ab01cd18fda354$var$_a11 = class extends (0, $7yNYd.Disposable) {\n    constructor(_commandService, _refRangeService, _univerInstanceService, _injector, _sheetInterceptorService, _selectionManagerService){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"disposableCollection\", new (0, $7yNYd.DisposableCollection)());\n        $a6ab01cd18fda354$var$__publicField(this, \"interceptor\", new (0, $7yNYd.InterceptorManager)({\n            MERGE_CELL_INTERCEPTOR_CHECK: $a6ab01cd18fda354$export$905d574af45cae88\n        }));\n        this._commandService = _commandService, this._refRangeService = _refRangeService, this._univerInstanceService = _univerInstanceService, this._injector = _injector, this._sheetInterceptorService = _sheetInterceptorService, this._selectionManagerService = _selectionManagerService, this._onRefRangeChange(), this._initCommandInterceptor(), this._commandExecutedListener();\n    }\n    _initCommandInterceptor() {\n        const self = this;\n        this._sheetInterceptorService.interceptCommand({\n            getMutations (commandInfo) {\n                var _a20;\n                switch(commandInfo.id){\n                    case $a6ab01cd18fda354$export$2f4ff18eff30d407.id:\n                    case $a6ab01cd18fda354$export$863f42bb4d58d9e4.id:\n                        {\n                            const workbook = self._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET), unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n                            if (!worksheet) return {\n                                redos: [],\n                                undos: []\n                            };\n                            const subUnitId = worksheet.getSheetId(), mergeData = worksheet.getConfig().mergeData, selections = (_a20 = self._selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n                            if (selections && selections.length > 0 && selections.some((range)=>mergeData.some((item)=>(0, $7yNYd.Rectangle).intersects(item, range)))) {\n                                const removeMergeParams = {\n                                    unitId: unitId,\n                                    subUnitId: subUnitId,\n                                    ranges: selections\n                                }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(self._injector, removeMergeParams), redos = [\n                                    {\n                                        id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                                        params: removeMergeParams\n                                    }\n                                ], undos = [\n                                    {\n                                        id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                                        params: undoRemoveMergeParams\n                                    }\n                                ];\n                                return {\n                                    redos: redos,\n                                    undos: undos\n                                };\n                            }\n                        }\n                }\n                return {\n                    redos: [],\n                    undos: []\n                };\n            }\n        }), this._sheetInterceptorService.interceptRanges({\n            getMutations: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(({ unitId: unitId, subUnitId: subUnitId, ranges: ranges })=>{\n                const redos = [], undos = [], emptyInterceptorArr = {\n                    redos: redos,\n                    undos: undos\n                };\n                if (!ranges || !ranges.length) return emptyInterceptorArr;\n                const target = $a6ab01cd18fda354$export$7172ac1f96d9c125(this._univerInstanceService, {\n                    unitId: unitId,\n                    subUnitId: subUnitId\n                });\n                if (!target) return emptyInterceptorArr;\n                const { worksheet: worksheet } = target, overlapRanges = worksheet.getMergeData().filter((item)=>ranges.some((range)=>(0, $7yNYd.Rectangle).intersects(item, range)));\n                return overlapRanges.length ? (redos.push({\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        ranges: overlapRanges\n                    }\n                }), undos.push({\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        ranges: overlapRanges\n                    }\n                }), {\n                    undos: undos,\n                    redos: redos\n                }) : emptyInterceptorArr;\n            }, \"getMutations\")\n        });\n    }\n    refRangeHandle(config, unitId, subUnitId) {\n        switch(config.id){\n            case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId:\n                {\n                    const params = config.params;\n                    return this._handleMoveColsCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId:\n                {\n                    const params = config.params;\n                    return this._handleMoveRowsCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$59824d5e29c20d3b.id:\n                {\n                    const params = config.params, _unitId = params.unitId || unitId, _subUnitId = params.subUnitId || subUnitId;\n                    return this._handleInsertRowCommand(params, _unitId, _subUnitId);\n                }\n            case $a6ab01cd18fda354$export$e8353cee7bda512a.id:\n                {\n                    const params = config.params, _unitId = params.unitId || unitId, _subUnitId = params.subUnitId || subUnitId;\n                    return this._handleInsertColCommand(params, _unitId, _subUnitId);\n                }\n            case $a6ab01cd18fda354$export$177b3716bfce6b2d.id:\n                {\n                    const params = config.params;\n                    return this._handleRemoveColCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$d6b85d28467bc6ff.id:\n                {\n                    const params = config.params;\n                    return this._handleRemoveRowCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$6d3ee8ffacf894af.id:\n                {\n                    const params = config.params;\n                    return this._handleMoveRangeCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$732636db5bcc0e5f.id:\n                {\n                    const params = config.params;\n                    return this._handleInsertRangeMoveRightCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$41564dd5272a2ef3.id:\n                {\n                    const params = config.params;\n                    return this._handleInsertRangeMoveDownCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$d3997a5569b0810f.id:\n                {\n                    const params = config.params;\n                    return this._handleDeleteRangeMoveUpCommand(params, unitId, subUnitId);\n                }\n            case $a6ab01cd18fda354$export$40e354a17cc79f7f.id:\n                {\n                    const params = config.params;\n                    return this._handleDeleteRangeMoveLeftCommand(params, unitId, subUnitId);\n                }\n        }\n        return {\n            redos: [],\n            undos: []\n        };\n    }\n    _onRefRangeChange() {\n        const registerRefRange = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, subUnitId)=>{\n            const workbook2 = this._univerInstanceService.getUniverSheetInstance(unitId);\n            if (!workbook2) return;\n            const workSheet = workbook2 == null ? void 0 : workbook2.getSheetBySheetId(subUnitId);\n            if (!workSheet) return;\n            this.disposableCollection.dispose();\n            const mergeData = workSheet.getMergeData(), handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n            mergeData.forEach((range)=>{\n                this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n            });\n        }, \"registerRefRange\");\n        this.disposeWithMe(this._commandService.onCommandExecuted((commandInfo)=>{\n            if (commandInfo.id === $a6ab01cd18fda354$export$142e5a7a79066467.id) {\n                const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n                if (!sheetId || !unitId) return;\n                registerRefRange(unitId, sheetId);\n            }\n            if (commandInfo.id === $a6ab01cd18fda354$export$2cd10fd9284040fa.id) {\n                const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n                if (!sheetId || !unitId) return;\n                registerRefRange(params.unitId, params.subUnitId);\n            }\n        }));\n        const workbook = this._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (workbook) {\n            const sheet = workbook.getActiveSheet();\n            if (!sheet) return;\n            registerRefRange(workbook.getUnitId(), sheet.getSheetId());\n        }\n    }\n    _handleMoveRowsCommand(params, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const mergeData = [\n            ...worksheet.getMergeData()\n        ], removeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: []\n        }, addParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: []\n        }, { fromRange: fromRange } = params, { startRow: sourceStart, endRow: sourceEnd } = fromRange;\n        if (mergeData.forEach((range)=>{\n            if (sourceStart <= range.startRow && sourceEnd >= range.endRow) {\n                removeParams.ranges.push(range);\n                const operation = $a6ab01cd18fda354$export$dfcf24e5214872cf({\n                    id: $a6ab01cd18fda354$export$19a34a018dc3d795.MoveRowsCommandId,\n                    params: params\n                }, range), result = $a6ab01cd18fda354$export$6e576466ae7d2afb(operation, range);\n                result && addParams.ranges.push(result);\n            }\n        }), removeParams.ranges.length === 0) return this._handleNull();\n        const removeUndo = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeParams), addUndo = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addParams);\n        return {\n            redos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: removeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: addParams\n                }\n            ],\n            undos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: addUndo\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: removeUndo\n                }\n            ]\n        };\n    }\n    _handleMoveColsCommand(params, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const mergeData = [\n            ...worksheet.getMergeData()\n        ], removeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: []\n        }, addParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: []\n        }, { fromRange: fromRange } = params, { startColumn: sourceStart, endColumn: sourceEnd } = fromRange;\n        if (mergeData.forEach((range)=>{\n            if (sourceStart <= range.startColumn && sourceEnd >= range.endColumn) {\n                removeParams.ranges.push(range);\n                const operation = $a6ab01cd18fda354$export$c4fbbd897b45946d({\n                    id: $a6ab01cd18fda354$export$19a34a018dc3d795.MoveColsCommandId,\n                    params: params\n                }, range), result = $a6ab01cd18fda354$export$6e576466ae7d2afb(operation, range);\n                result && addParams.ranges.push(result);\n            }\n        }), removeParams.ranges.length === 0) return this._handleNull();\n        const removeUndo = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeParams), addUndo = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addParams);\n        return {\n            redos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: removeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: addParams\n                }\n            ],\n            undos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: addUndo\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: removeUndo\n                }\n            ]\n        };\n    }\n    _handleMoveRangeCommand(params, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const mergeData = worksheet.getMergeData(), fromMergeRanges = mergeData.filter((item)=>(0, $7yNYd.Rectangle).intersects(item, params.fromRange)), toMergeRanges = mergeData.filter((item)=>(0, $7yNYd.Rectangle).intersects(item, params.toRange)), willMoveToMergeRanges = fromMergeRanges.map((mergeRange)=>(0, $7yNYd.Rectangle).getRelativeRange(mergeRange, params.fromRange)).map((relativeRange)=>(0, $7yNYd.Rectangle).getPositionRange(relativeRange, params.toRange)), addMergeCellRanges = $a6ab01cd18fda354$export$7dd3f8a552d30610(willMoveToMergeRanges).filter((range)=>!mergeData.some((mergeRange)=>(0, $7yNYd.Rectangle).equals(range, mergeRange))), redos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: fromMergeRanges\n                }\n            },\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: toMergeRanges\n                }\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: addMergeCellRanges\n                }\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: addMergeCellRanges\n                }\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: toMergeRanges\n                }\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: {\n                    unitId: unitId,\n                    subUnitId: subUnitId,\n                    ranges: fromMergeRanges\n                }\n            }\n        ];\n        return {\n            redos: redos,\n            undos: undos\n        };\n    }\n    _handleInsertRowCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const { range: range } = config, { startRow: startRow, endRow: endRow } = range, oldMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>(startRow > cell.startRow && startRow <= cell.endRow && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n        if (oldMergeCells.length === 0) return this._handleNull();\n        const newMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>{\n            if (startRow > cell.startRow && startRow <= cell.endRow) {\n                const count = endRow - startRow + 1;\n                cell.endRow += count, this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n            }\n            return mergeCellsHasLapping;\n        }, []), removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: oldMergeCells\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: newMergeCells\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams), redos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeParams\n            }\n        ];\n        return {\n            redos: redos,\n            undos: undos\n        };\n    }\n    _handleInsertColCommand(config, unitId, subUnitId) {\n        const { range: range } = config, workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const { startColumn: startColumn, endColumn: endColumn } = range, oldMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>(startColumn > cell.startColumn && startColumn <= cell.endColumn && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n        if (oldMergeCells.length === 0) return this._handleNull();\n        const newMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>{\n            if (startColumn > cell.startColumn && startColumn <= cell.endColumn) {\n                const count = endColumn - startColumn + 1;\n                cell.endColumn += count, this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n            }\n            return mergeCellsHasLapping;\n        }, []), removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: oldMergeCells\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: newMergeCells\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams), redos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeParams\n            }\n        ];\n        return {\n            redos: redos,\n            undos: undos\n        };\n    }\n    _handleRemoveColCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const { range: range } = config, { startColumn: startColumn, endColumn: endColumn } = range, oldMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>((0, $7yNYd.Rectangle).intersects(range, cell) && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n        if (oldMergeCells.length === 0) return this._handleNull();\n        const newMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>{\n            if ((0, $7yNYd.Rectangle).intersects(range, cell)) {\n                if (startColumn <= cell.startColumn && endColumn >= cell.endColumn) return mergeCellsHasLapping;\n                startColumn >= cell.startColumn && endColumn <= cell.endColumn ? cell.endColumn -= endColumn - startColumn + 1 : startColumn < cell.startColumn ? (cell.startColumn = startColumn, cell.endColumn -= endColumn - startColumn + 1) : endColumn > cell.endColumn && (cell.endColumn = startColumn - 1), this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n            }\n            return mergeCellsHasLapping;\n        }, []), removeMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: oldMergeCells\n        }, undoRemoveMergeMutationParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeMutationParams), addMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: newMergeCells\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeMutationParams), preRedos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeMutationParams\n            }\n        ], redos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeMutationParams\n            }\n        ], preUndos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeMutationParams\n            }\n        ];\n        return {\n            preUndos: preUndos,\n            undos: undos,\n            preRedos: preRedos,\n            redos: redos\n        };\n    }\n    _handleRemoveRowCommand(config, unitId, subUnitId) {\n        const { range: range } = config, workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const { startRow: startRow, endRow: endRow } = range, oldMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>((0, $7yNYd.Rectangle).intersects(range, cell) && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n        if (oldMergeCells.length === 0) return this._handleNull();\n        const newMergeCells = (0, $7yNYd.Tools).deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell)=>{\n            if ((0, $7yNYd.Rectangle).intersects(range, cell)) {\n                if (startRow <= cell.startRow && endRow >= cell.endRow) return mergeCellsHasLapping;\n                startRow >= cell.startRow && endRow <= cell.endRow ? cell.endRow -= endRow - startRow + 1 : startRow < cell.startRow ? (cell.startRow = startRow, cell.endRow -= endRow - startRow + 1) : endRow > cell.endRow && (cell.endRow = startRow - 1), this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n            }\n            return mergeCellsHasLapping;\n        }, []), removeMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: oldMergeCells\n        }, undoRemoveMergeMutationParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeMutationParams), addMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: newMergeCells\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeMutationParams), preRedos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeMutationParams\n            }\n        ], redos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeMutationParams\n            }\n        ], preUndos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeMutationParams\n            }\n        ];\n        return {\n            preUndos: preUndos,\n            undos: undos,\n            preRedos: preRedos,\n            redos: redos\n        };\n    }\n    _handleInsertRangeMoveRightCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const range = config.range, maxCol = worksheet.getMaxColumns() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n        mergeData.forEach((rect)=>{\n            const { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range;\n            if ((0, $7yNYd.Rectangle).intersects({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: endRow,\n                endColumn: maxCol\n            }, rect) && (removeMergeData.push(rect), (0, $7yNYd.Rectangle).contains({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: endRow,\n                endColumn: maxCol\n            }, rect))) {\n                const currentColumnsCount = endColumn - startColumn + 1;\n                addMergeData.push({\n                    startRow: rect.startRow,\n                    startColumn: rect.startColumn + currentColumnsCount,\n                    endRow: rect.endRow,\n                    endColumn: rect.endColumn + currentColumnsCount\n                });\n            }\n        });\n        const removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: removeMergeData\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: addMergeData\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams);\n        return {\n            redos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: removeMergeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: addMergeParams\n                }\n            ],\n            undos: [\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: undoRemoveMergeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: undoAddMergeParams\n                }\n            ]\n        };\n    }\n    _handleInsertRangeMoveDownCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const range = config.range, maxRow = worksheet.getMaxRows() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n        mergeData.forEach((rect)=>{\n            const { startRow: startRow, startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range;\n            if ((0, $7yNYd.Rectangle).intersects({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: maxRow,\n                endColumn: endColumn\n            }, rect) && (removeMergeData.push(rect), (0, $7yNYd.Rectangle).contains({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: maxRow,\n                endColumn: endColumn\n            }, rect))) {\n                const rowCount = endRow - startRow + 1;\n                addMergeData.push({\n                    startRow: rect.startRow + rowCount,\n                    startColumn: rect.startColumn,\n                    endRow: rect.endRow + rowCount,\n                    endColumn: rect.endColumn\n                });\n            }\n        });\n        const removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: removeMergeData\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: addMergeData\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams), redos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            }\n        ];\n        return {\n            redos: redos,\n            undos: undos\n        };\n    }\n    _handleDeleteRangeMoveUpCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const range = config.range, maxRow = worksheet.getMaxRows() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n        mergeData.forEach((rect)=>{\n            const { startRow: startRow, startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range;\n            if ((0, $7yNYd.Rectangle).intersects({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: maxRow,\n                endColumn: endColumn\n            }, rect) && (removeMergeData.push(rect), (0, $7yNYd.Rectangle).contains({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: maxRow,\n                endColumn: endColumn\n            }, rect))) {\n                const rowCount = endRow - startRow + 1, range2 = (0, $7yNYd.Rectangle).moveVertical(rect, -rowCount);\n                addMergeData.push(range2);\n            }\n        });\n        const removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: removeMergeData\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: addMergeData\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams), redos = [\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: removeMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: addMergeParams\n            }\n        ], undos = [\n            {\n                id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                params: undoRemoveMergeParams\n            },\n            {\n                id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                params: undoAddMergeParams\n            }\n        ];\n        return {\n            redos: redos,\n            undos: undos\n        };\n    }\n    _handleDeleteRangeMoveLeftCommand(config, unitId, subUnitId) {\n        const workbook = $a6ab01cd18fda354$var$getWorkbook(this._univerInstanceService, unitId);\n        if (!workbook) return this._handleNull();\n        const worksheet = $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId);\n        if (!worksheet) return this._handleNull();\n        const range = config.range, maxCol = worksheet.getMaxColumns() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n        mergeData.forEach((rect)=>{\n            const { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range;\n            if ((0, $7yNYd.Rectangle).intersects({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: endRow,\n                endColumn: maxCol\n            }, rect) && (removeMergeData.push(rect), (0, $7yNYd.Rectangle).contains({\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: endRow,\n                endColumn: maxCol\n            }, rect))) {\n                const currentColumnsCount = endColumn - startColumn + 1;\n                addMergeData.push({\n                    startRow: rect.startRow,\n                    startColumn: rect.startColumn - currentColumnsCount,\n                    endRow: rect.endRow,\n                    endColumn: rect.endColumn - currentColumnsCount\n                });\n            }\n        });\n        const removeMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: removeMergeData\n        }, undoRemoveMergeParams = $a6ab01cd18fda354$export$328feb80d2f892b2(this._injector, removeMergeParams), addMergeParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: addMergeData\n        }, undoAddMergeParams = $a6ab01cd18fda354$export$28cf35492035648a(this._injector, addMergeParams);\n        return {\n            redos: [\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: removeMergeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: addMergeParams\n                }\n            ],\n            undos: [\n                {\n                    id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n                    params: undoRemoveMergeParams\n                },\n                {\n                    id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n                    params: undoAddMergeParams\n                }\n            ]\n        };\n    }\n    _checkIsMergeCell(cell) {\n        return !(cell.startRow === cell.endRow && cell.startColumn === cell.endColumn);\n    }\n    _handleNull() {\n        return {\n            redos: [],\n            undos: []\n        };\n    }\n    _commandExecutedListener() {\n        this.disposeWithMe(this._commandService.onCommandExecuted((command)=>{\n            if ($a6ab01cd18fda354$var$mutationIdArrByMove$1.includes(command.id)) {\n                if (!command.params) return;\n                const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n                if (!workbook) return;\n                const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n                if (!worksheet) return;\n                const { sourceRange: sourceRange, targetRange: targetRange } = command.params, isRowMove = sourceRange.startColumn === targetRange.startColumn && sourceRange.endColumn === targetRange.endColumn, moveLength = isRowMove ? sourceRange.endRow - sourceRange.startRow + 1 : sourceRange.endColumn - sourceRange.startColumn + 1, sourceStart = isRowMove ? sourceRange.startRow : sourceRange.startColumn, targetStart = isRowMove ? targetRange.startRow : targetRange.startColumn, mergeData = worksheet.getConfig().mergeData, adjustedMergedCells = [];\n                mergeData.forEach((merge2)=>{\n                    let { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn, rangeType: rangeType } = merge2;\n                    (0, $7yNYd.Rectangle).intersects(merge2, sourceRange) || (isRowMove ? sourceStart < startRow && targetStart > endRow ? (startRow -= moveLength, endRow -= moveLength) : sourceStart > endRow && targetStart <= startRow && (startRow += moveLength, endRow += moveLength) : sourceStart < startColumn && targetStart > endColumn ? (startColumn -= moveLength, endColumn -= moveLength) : sourceStart > endColumn && targetStart <= startColumn && (startColumn += moveLength, endColumn += moveLength)), merge2.startRow === merge2.endRow && merge2.startColumn === merge2.endColumn || adjustedMergedCells.push({\n                        startRow: startRow,\n                        endRow: endRow,\n                        startColumn: startColumn,\n                        endColumn: endColumn,\n                        rangeType: rangeType\n                    });\n                }), worksheet.setMergeData(adjustedMergedCells), this.disposableCollection.dispose();\n                const { unitId: unitId, subUnitId: subUnitId } = command.params, handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n                adjustedMergedCells.forEach((range)=>{\n                    this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n                });\n            }\n            if ($a6ab01cd18fda354$var$mutationIdByRowCol$1.includes(command.id)) {\n                const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n                if (!workbook) return;\n                const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n                if (!worksheet) return;\n                const mergeData = worksheet.getConfig().mergeData, params = command.params;\n                if (!params) return;\n                const { range: range } = params, isRowOperation = command.id.includes(\"row\"), isAddOperation = command.id.includes(\"insert\"), operationStart = isRowOperation ? range.startRow : range.startColumn, operationEnd = isRowOperation ? range.endRow : range.endColumn, operationCount = operationEnd - operationStart + 1, adjustedMergedCells = [];\n                mergeData.forEach((merge2)=>{\n                    let { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn, rangeType: rangeType } = merge2;\n                    isAddOperation ? isRowOperation ? operationStart <= startRow && (startRow += operationCount, endRow += operationCount) : operationStart <= startColumn && (startColumn += operationCount, endColumn += operationCount) : isRowOperation ? operationEnd < startRow && (startRow -= operationCount, endRow -= operationCount) : operationEnd < startColumn && (startColumn -= operationCount, endColumn -= operationCount), merge2.startRow === merge2.endRow && merge2.startColumn === merge2.endColumn || adjustedMergedCells.push({\n                        startRow: startRow,\n                        endRow: endRow,\n                        startColumn: startColumn,\n                        endColumn: endColumn,\n                        rangeType: rangeType\n                    });\n                }), worksheet.setMergeData(adjustedMergedCells), this.disposableCollection.dispose();\n                const { unitId: unitId, subUnitId: subUnitId } = command.params, handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n                adjustedMergedCells.forEach((range2)=>{\n                    this.disposableCollection.add(this._refRangeService.registerRefRange(range2, handler, unitId, subUnitId));\n                });\n            }\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a11, \"MergeCellController\"), $a6ab01cd18fda354$var$_a11);\n$a6ab01cd18fda354$export$bef537c190ad4a94 = $a6ab01cd18fda354$var$__decorateClass$8([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Steady, $a6ab01cd18fda354$export$bef537c190ad4a94),\n    $a6ab01cd18fda354$var$__decorateParam$8(0, (0, $7yNYd.Inject)((0, $7yNYd.ICommandService))),\n    $a6ab01cd18fda354$var$__decorateParam$8(1, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9c9d0dbacf6b589e)),\n    $a6ab01cd18fda354$var$__decorateParam$8(2, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$8(3, (0, $7yNYd.Inject)((0, $7yNYd.Injector))),\n    $a6ab01cd18fda354$var$__decorateParam$8(4, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$80833ae4acf64dfd)),\n    $a6ab01cd18fda354$var$__decorateParam$8(5, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$c93d00f3ceba73b5))\n], $a6ab01cd18fda354$export$bef537c190ad4a94);\nfunction $a6ab01cd18fda354$var$getWorkbook(univerInstanceService, unitId) {\n    return unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getWorkbook, \"getWorkbook\");\nfunction $a6ab01cd18fda354$var$getWorksheet(workbook, subUnitId) {\n    return subUnitId ? workbook.getSheetBySheetId(subUnitId) : workbook.getActiveSheet();\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getWorksheet, \"getWorksheet\");\nvar $a6ab01cd18fda354$var$__defProp$7 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$7 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$7 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$7(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$7(target, key, result), result;\n}, \"__decorateClass$7\"), $a6ab01cd18fda354$var$__decorateParam$7 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$7\"), $a6ab01cd18fda354$var$_a12;\nlet $a6ab01cd18fda354$export$ad982eb150538b20 = ($a6ab01cd18fda354$var$_a12 = class extends (0, $7yNYd.Disposable) {\n    constructor(_resourceManagerService, _univerInstanceService, _logService){\n        super(), this._resourceManagerService = _resourceManagerService, this._univerInstanceService = _univerInstanceService, this._logService = _logService;\n    }\n    getValue(unitId, subUnitId, row, col) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) return;\n        const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n        if (!worksheet) return;\n        const styles = workbook.getStyles(), cell = worksheet.getCellRaw(row, col);\n        if (cell != null && cell.s) {\n            const style = styles.get(cell.s);\n            if (style != null && style.n) return style.n;\n        }\n        return null;\n    }\n    deleteValues(unitId, subUnitId, values) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) return;\n        const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n        if (!worksheet) return;\n        const styles = workbook.getStyles();\n        values.forEach((range)=>{\n            (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                const cell = worksheet.getCellRaw(row, col);\n                if (!cell) return;\n                const oldStyleId = cell == null ? void 0 : cell.s, newStyle = {\n                    ...oldStyleId && styles.get(oldStyleId) || {}\n                };\n                delete newStyle.n;\n                const newStyleId = styles.setValue(newStyle);\n                cell.s = newStyleId;\n            });\n        });\n    }\n    setValues(unitId, subUnitId, values) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) return;\n        const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n        if (!worksheet) return;\n        const styles = workbook.getStyles(), matrix = worksheet.getCellMatrix();\n        values.forEach((value)=>{\n            value.ranges.forEach((range)=>{\n                (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                    const cell = worksheet.getCellRaw(row, col);\n                    if (cell) {\n                        const newStyle = {\n                            ...styles.getStyleByCell(cell) || {},\n                            n: {\n                                pattern: value.pattern\n                            }\n                        }, styleId = styles.setValue(newStyle);\n                        cell.s = styleId;\n                        const type = $a6ab01cd18fda354$var$getCellTypeByPattern(cell, value.pattern);\n                        cell.v !== void 0 && (cell.t = type, cell.v = $a6ab01cd18fda354$var$getCellValue(type, cell));\n                    } else {\n                        const style = {\n                            n: {\n                                pattern: value.pattern\n                            }\n                        }, styleId = styles.setValue(style);\n                        styleId && matrix.setValue(row, col, {\n                            s: styleId\n                        });\n                    }\n                });\n            });\n        });\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a12, \"NumfmtService\"), $a6ab01cd18fda354$var$_a12);\n$a6ab01cd18fda354$export$ad982eb150538b20 = $a6ab01cd18fda354$var$__decorateClass$7([\n    $a6ab01cd18fda354$var$__decorateParam$7(0, (0, $7yNYd.IResourceManagerService)),\n    $a6ab01cd18fda354$var$__decorateParam$7(1, (0, $7yNYd.IUniverInstanceService)),\n    $a6ab01cd18fda354$var$__decorateParam$7(2, (0, $7yNYd.ILogService))\n], $a6ab01cd18fda354$export$ad982eb150538b20);\nconst $a6ab01cd18fda354$export$634975f236ef0829 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>[\n        $a6ab01cd18fda354$export$f9b2f3564b55cfea,\n        $a6ab01cd18fda354$export$43e77b32507eab8a,\n        $a6ab01cd18fda354$export$e954801e3efd9751,\n        $a6ab01cd18fda354$export$e4dfc7ee612de8ae,\n        $a6ab01cd18fda354$export$5f9719a2213742db,\n        $a6ab01cd18fda354$export$caea44377896d45b,\n        $a6ab01cd18fda354$export$633ee836a7adfb56,\n        $a6ab01cd18fda354$export$d9e9375ef577608a,\n        $a6ab01cd18fda354$export$fc69a7d19430eba1,\n        $a6ab01cd18fda354$export$59ee3b0f12f751e0,\n        $a6ab01cd18fda354$export$6598f0c4b2045039,\n        $a6ab01cd18fda354$export$d15f9d533030e94,\n        $a6ab01cd18fda354$export$41977b635cb41e8,\n        $a6ab01cd18fda354$export$1d2b8eef79a2c4b3,\n        $a6ab01cd18fda354$export$28b6cce327843522,\n        $a6ab01cd18fda354$export$cf10336f63bb5b3e,\n        $a6ab01cd18fda354$export$747f182153c2d1a2\n    ], \"getAllWorkbookPermissionPoint\"), $a6ab01cd18fda354$export$1d76bc5eb946e943 = [\n    $a6ab01cd18fda354$var$P.Edit,\n    $a6ab01cd18fda354$var$P.Print,\n    $a6ab01cd18fda354$var$P.Comment,\n    $a6ab01cd18fda354$var$P.View,\n    $a6ab01cd18fda354$var$P.Copy,\n    $a6ab01cd18fda354$var$P.Export,\n    $a6ab01cd18fda354$var$P.ManageCollaborator,\n    $a6ab01cd18fda354$var$P.CreateSheet,\n    $a6ab01cd18fda354$var$P.DeleteSheet,\n    $a6ab01cd18fda354$var$P.RenameSheet,\n    $a6ab01cd18fda354$var$P.HideSheet,\n    $a6ab01cd18fda354$var$P.Duplicate,\n    $a6ab01cd18fda354$var$P.Share,\n    $a6ab01cd18fda354$var$P.MoveSheet,\n    $a6ab01cd18fda354$var$P.CopySheet,\n    $a6ab01cd18fda354$var$P.RecoverHistory,\n    $a6ab01cd18fda354$var$P.ViewHistory\n];\nvar $a6ab01cd18fda354$var$__defProp$6 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$6 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$6 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$6(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$6(target, key, result), result;\n}, \"__decorateClass$6\"), $a6ab01cd18fda354$var$__decorateParam$6 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$6\"), $a6ab01cd18fda354$var$_a13;\nlet $a6ab01cd18fda354$export$7f2b141f94d7608f = ($a6ab01cd18fda354$var$_a13 = class extends (0, $7yNYd.Disposable) {\n    constructor(_permissionService, _univerInstanceService, _rangeProtectionRuleModel){\n        super(), this._permissionService = _permissionService, this._univerInstanceService = _univerInstanceService, this._rangeProtectionRuleModel = _rangeProtectionRuleModel, this._init();\n    }\n    _init() {\n        const handleWorkbook = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((workbook)=>{\n            const unitId = workbook.getUnitId();\n            $a6ab01cd18fda354$export$634975f236ef0829().forEach((F)=>{\n                const instance = new F(unitId);\n                this._permissionService.addPermissionPoint(instance);\n            });\n        }, \"handleWorkbook\");\n        this._univerInstanceService.getAllUnitsForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).forEach((workbook)=>{\n            handleWorkbook(workbook);\n        }), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitAdded$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>{\n            handleWorkbook(workbook);\n        })), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitDisposed$((0, $7yNYd.UniverInstanceType).UNIVER_SHEET).subscribe((workbook)=>{\n            const unitId = workbook.getUnitId();\n            workbook.getSheets().forEach((worksheet)=>{\n                const subUnitId = worksheet.getSheetId();\n                this._rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule)=>{\n                    [\n                        $a6ab01cd18fda354$export$71b84bcd22831dcf,\n                        $a6ab01cd18fda354$export$3e56ea536ebb655d\n                    ].forEach((F)=>{\n                        const instance = new F(unitId, subUnitId, rule.permissionId);\n                        this._permissionService.deletePermissionPoint(instance.id);\n                    });\n                }), [\n                    ...$a6ab01cd18fda354$export$a1277938b074bee3(),\n                    ...$a6ab01cd18fda354$export$40327ff0e60d0a4a()\n                ].forEach((F)=>{\n                    const instance = new F(unitId, subUnitId);\n                    this._permissionService.deletePermissionPoint(instance.id);\n                });\n            }), $a6ab01cd18fda354$export$634975f236ef0829().forEach((F)=>{\n                const instance = new F(unitId);\n                this._permissionService.deletePermissionPoint(instance.id);\n            });\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a13, \"WorkbookPermissionService\"), $a6ab01cd18fda354$var$_a13);\n$a6ab01cd18fda354$export$7f2b141f94d7608f = $a6ab01cd18fda354$var$__decorateClass$6([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Starting, $a6ab01cd18fda354$export$7f2b141f94d7608f),\n    $a6ab01cd18fda354$var$__decorateParam$6(0, (0, $7yNYd.Inject)((0, $7yNYd.IPermissionService))),\n    $a6ab01cd18fda354$var$__decorateParam$6(1, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$6(2, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9372059621b24e72))\n], $a6ab01cd18fda354$export$7f2b141f94d7608f);\nvar $a6ab01cd18fda354$var$__defProp$5 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$5 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$5 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$5(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$5(target, key, result), result;\n}, \"__decorateClass$5\"), $a6ab01cd18fda354$var$__decorateParam$5 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$5\");\nconst $a6ab01cd18fda354$var$SHEET_DEFINED_NAME_PLUGIN = \"SHEET_DEFINED_NAME_PLUGIN\";\nvar $a6ab01cd18fda354$var$_a14;\nlet $a6ab01cd18fda354$export$dbb912bdd067f353 = ($a6ab01cd18fda354$var$_a14 = class extends (0, $7yNYd.Disposable) {\n    constructor(_definedNamesService, _resourceManagerService){\n        super(), this._definedNamesService = _definedNamesService, this._resourceManagerService = _resourceManagerService, this._initialize();\n    }\n    _initialize() {\n        this._initSnapshot();\n    }\n    _initSnapshot() {\n        const toJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>{\n            const map2 = this._definedNamesService.getDefinedNameMap(unitId);\n            return map2 ? JSON.stringify(map2) : \"\";\n        }, \"toJson\"), parseJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((json)=>{\n            if (!json) return {};\n            try {\n                return JSON.parse(json);\n            } catch  {\n                return {};\n            }\n        }, \"parseJson\");\n        this.disposeWithMe(this._resourceManagerService.registerPluginResource({\n            pluginName: $a6ab01cd18fda354$var$SHEET_DEFINED_NAME_PLUGIN,\n            businesses: [\n                (0, $7yNYd.UniverInstanceType).UNIVER_SHEET\n            ],\n            toJson: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>toJson(unitId), \"toJson\"),\n            parseJson: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((json)=>parseJson(json), \"parseJson\"),\n            onUnLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>{\n                this._definedNamesService.removeUnitDefinedName(unitId);\n            }, \"onUnLoad\"),\n            onLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, value)=>{\n                this._definedNamesService.registerDefinedNames(unitId, value);\n            }, \"onLoad\")\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a14, \"DefinedNameDataController\"), $a6ab01cd18fda354$var$_a14);\n$a6ab01cd18fda354$export$dbb912bdd067f353 = $a6ab01cd18fda354$var$__decorateClass$5([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$export$dbb912bdd067f353),\n    $a6ab01cd18fda354$var$__decorateParam$5(0, (0, $86b1c.IDefinedNamesService)),\n    $a6ab01cd18fda354$var$__decorateParam$5(1, (0, $7yNYd.IResourceManagerService))\n], $a6ab01cd18fda354$export$dbb912bdd067f353);\nconst $a6ab01cd18fda354$export$d78cad71acf986b9 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name(()=>[\n        $a6ab01cd18fda354$export$3e56ea536ebb655d,\n        $a6ab01cd18fda354$export$71b84bcd22831dcf\n    ], \"getAllRangePermissionPoint\"), $a6ab01cd18fda354$export$d9c8fc811f453f7e = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId = \"unitId\", subUnitId = \"subUnitId\", permissionId = \"permissionId\")=>$a6ab01cd18fda354$export$d78cad71acf986b9().reduce((r, F)=>{\n        const i = new F(unitId, subUnitId, permissionId);\n        return r[i.subType] = i.value, r;\n    }, {}), \"getDefaultRangePermission\");\nvar $a6ab01cd18fda354$var$__defProp$4 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$4 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$4 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$4(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$4(target, key, result), result;\n}, \"__decorateClass$4\"), $a6ab01cd18fda354$var$__decorateParam$4 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$4\"), $a6ab01cd18fda354$var$_a15;\nlet $a6ab01cd18fda354$export$ff6acb0e8081cbe3 = ($a6ab01cd18fda354$var$_a15 = class {\n    constructor(_selectionProtectionRuleModel, _permissionService){\n        $a6ab01cd18fda354$var$__publicField(this, \"_cache\", new (0, $7yNYd.LRUMap)(1e4));\n        this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._permissionService = _permissionService, this._init();\n    }\n    _init() {\n        this._permissionService.permissionPointUpdate$.pipe((0, $lMvMU.filter)((permission)=>permission.type === $a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange), (0, $lMvMU.filter)((permission)=>$a6ab01cd18fda354$export$d78cad71acf986b9().some((F)=>permission instanceof F)), (0, $hciHF.map)((permission)=>permission)).subscribe((permission)=>{\n            const ruleMap = this._selectionProtectionRuleModel.getSubunitRuleList(permission.unitId, permission.subUnitId);\n            for (const rule of ruleMap)rule.permissionId === permission.permissionId && rule.ranges.forEach((range)=>{\n                (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                    const key = this._createKey(permission.unitId, permission.subUnitId, row, col);\n                    this._cache.delete(key);\n                });\n            });\n        }), this._selectionProtectionRuleModel.ruleChange$.subscribe((info)=>{\n            var _a20;\n            info.rule.ranges.forEach((range)=>{\n                (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                    const key = this._createKey(info.unitId, info.subUnitId, row, col);\n                    this._cache.delete(key);\n                });\n            }), info.type === \"set\" && ((_a20 = info.oldRule) == null || _a20.ranges.forEach((range)=>{\n                (0, $7yNYd.Range).foreach(range, (row, col)=>{\n                    const key = this._createKey(info.unitId, info.subUnitId, row, col);\n                    this._cache.delete(key);\n                });\n            }));\n        });\n    }\n    _createKey(unitId, subUnitId, row, col) {\n        return `${unitId}_${subUnitId}_${row}_${col}`;\n    }\n    getCellInfo(unitId, subUnitId, row, col) {\n        const key = this._createKey(unitId, subUnitId, row, col), cacheValue = this._cache.get(key);\n        if (cacheValue) return cacheValue;\n        const ruleMap = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId), defaultV = [];\n        if (!ruleMap || !ruleMap.length) return defaultV;\n        const result = [];\n        for (const rule of ruleMap)if (rule.ranges.some((range)=>range.startRow <= row && range.endRow >= row && range.startColumn <= col && range.endColumn >= col)) {\n            const permissionMap = $a6ab01cd18fda354$export$d78cad71acf986b9().reduce((result2, F)=>{\n                var _a20;\n                const instance = new F(unitId, subUnitId, rule.permissionId), permission = this._permissionService.getPermissionPoint(instance.id);\n                return result2[instance.subType] = (_a20 = permission == null ? void 0 : permission.value) != null ? _a20 : instance.value, result2;\n            }, {});\n            result.push({\n                ...permissionMap,\n                ruleId: rule.id,\n                ranges: rule.ranges\n            });\n        }\n        return this._cache.set(key, result), result;\n    }\n    clear() {\n        this._cache.clear();\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a15, \"RangeProtectionRenderModel\"), $a6ab01cd18fda354$var$_a15);\n$a6ab01cd18fda354$export$ff6acb0e8081cbe3 = $a6ab01cd18fda354$var$__decorateClass$4([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$export$ff6acb0e8081cbe3),\n    $a6ab01cd18fda354$var$__decorateParam$4(0, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9372059621b24e72)),\n    $a6ab01cd18fda354$var$__decorateParam$4(1, (0, $7yNYd.Inject)((0, $7yNYd.IPermissionService)))\n], $a6ab01cd18fda354$export$ff6acb0e8081cbe3);\nvar $a6ab01cd18fda354$var$__defProp$3 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$3 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$3 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$3(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$3(target, key, result), result;\n}, \"__decorateClass$3\"), $a6ab01cd18fda354$var$__decorateParam$3 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$3\");\nconst $a6ab01cd18fda354$var$mutationIdByRowCol = [\n    $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n    $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n    $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n    $a6ab01cd18fda354$export$9642f6b705de590b.id\n], $a6ab01cd18fda354$var$mutationIdArrByMove = [\n    $a6ab01cd18fda354$export$63ddef9080d565c8.id,\n    $a6ab01cd18fda354$export$b98040a300ab6f6e.id\n];\nvar $a6ab01cd18fda354$var$_a16;\nlet $a6ab01cd18fda354$export$5678530e7d08deeb = ($a6ab01cd18fda354$var$_a16 = class extends (0, $7yNYd.Disposable) {\n    constructor(_selectionProtectionRuleModel, _univerInstanceService, _commandService, _refRangeService, _selectionProtectionRenderModel){\n        super();\n        $a6ab01cd18fda354$var$__publicField(this, \"disposableCollection\", new (0, $7yNYd.DisposableCollection)());\n        this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._univerInstanceService = _univerInstanceService, this._commandService = _commandService, this._refRangeService = _refRangeService, this._selectionProtectionRenderModel = _selectionProtectionRenderModel, this._onRefRangeChange(), this._correctPermissionRange();\n    }\n    _onRefRangeChange() {\n        const registerRefRange = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, subUnitId)=>{\n            const workbook2 = this._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n            if (!workbook2 || !(workbook2 == null ? void 0 : workbook2.getSheetBySheetId(subUnitId))) return;\n            this.disposableCollection.dispose();\n            const handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n            this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c)=>[\n                    ...p,\n                    ...c.ranges\n                ], []).forEach((range)=>{\n                this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n            });\n        }, \"registerRefRange\");\n        this.disposeWithMe(this._commandService.onCommandExecuted((commandInfo)=>{\n            if (commandInfo.id === $a6ab01cd18fda354$export$142e5a7a79066467.id) {\n                const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n                if (!sheetId || !unitId) return;\n                registerRefRange(unitId, sheetId);\n            }\n            if (commandInfo.id === $a6ab01cd18fda354$export$154632b354a236eb.id || commandInfo.id === $a6ab01cd18fda354$export$f2ad0bf0273e0229.id) {\n                const params = commandInfo.params, subUnitId = params.subUnitId, unitId = params.unitId;\n                if (!subUnitId || !unitId) return;\n                registerRefRange(unitId, subUnitId);\n            }\n        }));\n        const workbook = this._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (workbook) {\n            const sheet = workbook.getActiveSheet();\n            if (!sheet) return;\n            registerRefRange(workbook.getUnitId(), sheet.getSheetId());\n        }\n    }\n    refRangeHandle(config, unitId, subUnitId) {\n        switch(config.id){\n            case $a6ab01cd18fda354$export$a28b199505e3f35b.id:\n                return this._getRefRangeMutationsByMoveRows(config.params, unitId, subUnitId);\n            case $a6ab01cd18fda354$export$5effa9283a7d9d05.id:\n                return this._getRefRangeMutationsByMoveCols(config.params, unitId, subUnitId);\n            case $a6ab01cd18fda354$export$59824d5e29c20d3b.id:\n                return this._getRefRangeMutationsByInsertRows(config.params, unitId, subUnitId);\n            case $a6ab01cd18fda354$export$e8353cee7bda512a.id:\n                return this._getRefRangeMutationsByInsertCols(config.params, unitId, subUnitId);\n            case $a6ab01cd18fda354$export$177b3716bfce6b2d.id:\n                return this._getRefRangeMutationsByDeleteCols(config.params, unitId, subUnitId);\n            case $a6ab01cd18fda354$export$d6b85d28467bc6ff.id:\n                return this._getRefRangeMutationsByDeleteRows(config.params, unitId, subUnitId);\n        }\n        return {\n            redos: [],\n            undos: []\n        };\n    }\n    _getRefRangeMutationsByDeleteCols(params, unitId, subUnitId) {\n        const permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>(0, $7yNYd.Rectangle).intersects(range, params.range))), removeRange = params.range;\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule), rangesByRemove = cloneRule.ranges.reduce((p, c)=>{\n                    if ((0, $7yNYd.Rectangle).intersects(c, removeRange)) {\n                        const cloneRange = (0, $7yNYd.Tools).deepClone(c), { startColumn: startColumn, endColumn: endColumn } = removeRange;\n                        if (startColumn <= cloneRange.startColumn && endColumn >= cloneRange.endColumn) return p;\n                        startColumn >= cloneRange.startColumn && endColumn <= cloneRange.endColumn ? cloneRange.endColumn -= endColumn - startColumn + 1 : startColumn < cloneRange.startColumn ? (cloneRange.startColumn = startColumn, cloneRange.endColumn -= endColumn - startColumn + 1) : endColumn > cloneRange.endColumn && (cloneRange.endColumn = startColumn - 1), this._checkIsRightRange(cloneRange) && p.push(cloneRange);\n                    }\n                    return p;\n                }, []);\n                cloneRule.ranges = rangesByRemove, cloneRule.ranges.length ? (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                })) : (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$b457d93c336efe6a.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        ruleIds: [\n                            rule.id\n                        ]\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$f2ad0bf0273e0229.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        name: \"\",\n                        rules: [\n                            rule\n                        ]\n                    }\n                }));\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _getRefRangeMutationsByDeleteRows(params, unitId, subUnitId) {\n        const permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>(0, $7yNYd.Rectangle).intersects(range, params.range))), removeRange = params.range;\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule), rangesByRemove = cloneRule.ranges.reduce((p, c)=>{\n                    if ((0, $7yNYd.Rectangle).intersects(c, removeRange)) {\n                        const cloneRange = (0, $7yNYd.Tools).deepClone(c), { startRow: startRow, endRow: endRow } = removeRange;\n                        if (startRow <= cloneRange.startRow && endRow >= cloneRange.endRow) return p;\n                        startRow >= cloneRange.startRow && endRow <= cloneRange.endRow ? cloneRange.endRow -= endRow - startRow + 1 : startRow < cloneRange.startRow ? (cloneRange.startRow = startRow, cloneRange.endRow -= endRow - startRow + 1) : endRow > cloneRange.endRow && (cloneRange.endRow = startRow - 1), this._checkIsRightRange(cloneRange) && p.push(cloneRange);\n                    }\n                    return p;\n                }, []);\n                cloneRule.ranges = rangesByRemove, redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                });\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _getRefRangeMutationsByInsertCols(params, unitId, subUnitId) {\n        const insertStart = params.range.startColumn, insertLength = params.range.endColumn - params.range.startColumn + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>insertStart > range.startColumn && insertStart <= range.endColumn));\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule);\n                let hasLap = !1;\n                cloneRule.ranges.forEach((range)=>{\n                    insertStart > range.startColumn && insertStart <= range.endColumn && (range.endColumn += insertLength, hasLap = !0);\n                }), hasLap && (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                }));\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _getRefRangeMutationsByInsertRows(params, unitId, subUnitId) {\n        const insertStart = params.range.startRow, insertLength = params.range.endRow - params.range.startRow + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>insertStart > range.startRow && insertStart <= range.endRow));\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule);\n                let hasLap = !1;\n                cloneRule.ranges.forEach((range)=>{\n                    insertStart > range.startRow && insertStart <= range.endRow && (range.endRow += insertLength, hasLap = !0);\n                }), hasLap && (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                }));\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _getRefRangeMutationsByMoveRows(params, unitId, subUnitId) {\n        const toRange = params.toRange, moveToStartRow = toRange.startRow, moveLength = toRange.endRow - toRange.startRow + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>moveToStartRow > range.startRow && moveToStartRow <= range.endRow));\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule), moveFromStartRow = params.fromRange.startRow;\n                let hasLap = !1;\n                cloneRule.ranges.forEach((range)=>{\n                    moveToStartRow > range.startRow && moveToStartRow <= range.endRow && (moveFromStartRow < range.startRow && (range.startRow = range.startRow - moveLength, range.endRow = range.endRow - moveLength), range.endRow += moveLength, hasLap = !0);\n                }), hasLap && (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                }));\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _getRefRangeMutationsByMoveCols(params, unitId, subUnitId) {\n        const toRange = params.toRange, moveToStartCol = toRange.startColumn, moveLength = toRange.endColumn - toRange.startColumn + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((range)=>moveToStartCol > range.startColumn && moveToStartCol <= range.endColumn));\n        if (permissionRangeLapRules.length) {\n            const redoMutations = [], undoMutations = [];\n            return permissionRangeLapRules.forEach((rule)=>{\n                const cloneRule = (0, $7yNYd.Tools).deepClone(rule), moveFromStartCol = params.fromRange.startColumn;\n                let hasLap = !1;\n                cloneRule.ranges.forEach((range)=>{\n                    moveToStartCol > range.startColumn && moveToStartCol <= range.endColumn && (moveFromStartCol < range.startColumn && (range.startColumn = range.startColumn - moveLength, range.endColumn = range.endColumn - moveLength), range.endColumn += moveLength, hasLap = !0);\n                }), hasLap && (redoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: cloneRule,\n                        ruleId: rule.id\n                    }\n                }), undoMutations.push({\n                    id: $a6ab01cd18fda354$export$154632b354a236eb.id,\n                    params: {\n                        unitId: unitId,\n                        subUnitId: subUnitId,\n                        rule: rule,\n                        ruleId: rule.id\n                    }\n                }));\n            }), {\n                redos: redoMutations,\n                undos: undoMutations\n            };\n        }\n        return {\n            undos: [],\n            redos: []\n        };\n    }\n    _correctPermissionRange() {\n        this.disposeWithMe(this._commandService.onCommandExecuted((command)=>{\n            if ($a6ab01cd18fda354$var$mutationIdArrByMove.includes(command.id)) {\n                if (!command.params) return;\n                const workbook = this._univerInstanceService.getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n                if (!workbook) return;\n                const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n                if (!worksheet) return;\n                const { sourceRange: sourceRange, targetRange: targetRange } = command.params, isRowMove = sourceRange.startColumn === targetRange.startColumn && sourceRange.endColumn === targetRange.endColumn, moveLength = isRowMove ? sourceRange.endRow - sourceRange.startRow + 1 : sourceRange.endColumn - sourceRange.startColumn + 1, sourceStart = isRowMove ? sourceRange.startRow : sourceRange.startColumn, targetStart = isRowMove ? targetRange.startRow : targetRange.startColumn;\n                this._selectionProtectionRuleModel.getSubunitRuleList(workbook.getUnitId(), worksheet.getSheetId()).forEach((rule)=>{\n                    rule.ranges.forEach((range)=>{\n                        let { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range;\n                        (0, $7yNYd.Rectangle).intersects(range, sourceRange) || (isRowMove ? sourceStart < startRow && targetStart > endRow ? (startRow -= moveLength, endRow -= moveLength) : sourceStart > endRow && targetStart <= startRow && (startRow += moveLength, endRow += moveLength) : sourceStart < startColumn && targetStart > endColumn ? (startColumn -= moveLength, endColumn -= moveLength) : sourceStart > endColumn && targetStart <= startColumn && (startColumn += moveLength, endColumn += moveLength)), this._checkIsRightRange({\n                            startRow: startRow,\n                            endRow: endRow,\n                            startColumn: startColumn,\n                            endColumn: endColumn\n                        }) && (range.startColumn = startColumn, range.endColumn = endColumn, range.startRow = startRow, range.endRow = endRow);\n                    });\n                }), this.disposableCollection.dispose();\n                const { unitId: unitId, subUnitId: subUnitId } = command.params, handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n                this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c)=>[\n                        ...p,\n                        ...c.ranges\n                    ], []).forEach((range)=>{\n                    this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n                }), this._selectionProtectionRenderModel.clear();\n            }\n            if ($a6ab01cd18fda354$var$mutationIdByRowCol.includes(command.id)) {\n                const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n                if (!workbook) return;\n                const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n                if (!worksheet) return;\n                const params = command.params;\n                if (!params) return;\n                const { range: range } = params, isRowOperation = command.id.includes(\"row\"), isAddOperation = command.id.includes(\"insert\"), operationStart = isRowOperation ? range.startRow : range.startColumn, operationEnd = isRowOperation ? range.endRow : range.endColumn, operationCount = operationEnd - operationStart + 1;\n                this._selectionProtectionRuleModel.getSubunitRuleList(workbook.getUnitId(), worksheet.getSheetId()).forEach((rule)=>{\n                    rule.ranges.forEach((range2)=>{\n                        let { startRow: startRow, endRow: endRow, startColumn: startColumn, endColumn: endColumn } = range2;\n                        isAddOperation ? isRowOperation ? operationStart <= startRow && (startRow += operationCount, endRow += operationCount) : operationStart <= startColumn && (startColumn += operationCount, endColumn += operationCount) : isRowOperation ? operationEnd < startRow && (startRow -= operationCount, endRow -= operationCount) : operationEnd < startColumn && (startColumn -= operationCount, endColumn -= operationCount), this._checkIsRightRange({\n                            startRow: startRow,\n                            endRow: endRow,\n                            startColumn: startColumn,\n                            endColumn: endColumn\n                        }) && (range2.startColumn = startColumn, range2.endColumn = endColumn, range2.startRow = startRow, range2.endRow = endRow);\n                    });\n                }), this.disposableCollection.dispose();\n                const { unitId: unitId, subUnitId: subUnitId } = command.params, handler = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((config)=>this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n                this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c)=>[\n                        ...p,\n                        ...c.ranges\n                    ], []).forEach((range2)=>{\n                    this.disposableCollection.add(this._refRangeService.registerRefRange(range2, handler, unitId, subUnitId));\n                }), this._selectionProtectionRenderModel.clear();\n            }\n        }));\n    }\n    _checkIsRightRange(range) {\n        return range.startRow <= range.endRow && range.startColumn <= range.endColumn;\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a16, \"RangeProtectionRefRangeService\"), $a6ab01cd18fda354$var$_a16);\n$a6ab01cd18fda354$export$5678530e7d08deeb = $a6ab01cd18fda354$var$__decorateClass$3([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$export$5678530e7d08deeb),\n    $a6ab01cd18fda354$var$__decorateParam$3(0, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9372059621b24e72)),\n    $a6ab01cd18fda354$var$__decorateParam$3(1, (0, $7yNYd.Inject)((0, $7yNYd.IUniverInstanceService))),\n    $a6ab01cd18fda354$var$__decorateParam$3(2, (0, $7yNYd.ICommandService)),\n    $a6ab01cd18fda354$var$__decorateParam$3(3, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9c9d0dbacf6b589e)),\n    $a6ab01cd18fda354$var$__decorateParam$3(4, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$ff6acb0e8081cbe3))\n], $a6ab01cd18fda354$export$5678530e7d08deeb);\nvar $a6ab01cd18fda354$var$__defProp$2 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$2 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$2(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$2(target, key, result), result;\n}, \"__decorateClass$2\"), $a6ab01cd18fda354$var$__decorateParam$2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$2\");\nconst $a6ab01cd18fda354$var$PLUGIN_NAME$1 = \"SHEET_RANGE_PROTECTION_PLUGIN\";\nvar $a6ab01cd18fda354$var$_a17;\nlet $a6ab01cd18fda354$export$6c91eef2b3ff9a08 = ($a6ab01cd18fda354$var$_a17 = class extends (0, $7yNYd.Disposable) {\n    constructor(_selectionProtectionRuleModel, _permissionService, _resourceManagerService){\n        super(), this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._permissionService = _permissionService, this._resourceManagerService = _resourceManagerService, this._initSnapshot(), this._initRuleChange();\n    }\n    _initRuleChange() {\n        this.disposeWithMe(this._selectionProtectionRuleModel.ruleChange$.subscribe((info)=>{\n            switch(info.type){\n                case \"add\":\n                    $a6ab01cd18fda354$export$d78cad71acf986b9().forEach((F)=>{\n                        const instance = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n                        this._permissionService.addPermissionPoint(instance);\n                    });\n                    break;\n                case \"delete\":\n                    $a6ab01cd18fda354$export$d78cad71acf986b9().forEach((F)=>{\n                        const instance = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n                        this._permissionService.deletePermissionPoint(instance.id);\n                    });\n                    break;\n                case \"set\":\n                    info.oldRule.permissionId !== info.rule.permissionId && $a6ab01cd18fda354$export$d78cad71acf986b9().forEach((F)=>{\n                        const oldPermissionPoint = new F(info.unitId, info.subUnitId, info.oldRule.permissionId);\n                        this._permissionService.deletePermissionPoint(oldPermissionPoint.id);\n                        const newPermissionPoint = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n                        this._permissionService.addPermissionPoint(newPermissionPoint);\n                    });\n                    break;\n            }\n        }));\n    }\n    _initSnapshot() {\n        const toJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitID)=>{\n            const v = this._selectionProtectionRuleModel.toObject()[unitID];\n            return v ? JSON.stringify(v) : \"\";\n        }, \"toJson\"), parseJson = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((json)=>{\n            if (!json) return {};\n            try {\n                return JSON.parse(json);\n            } catch  {\n                return {};\n            }\n        }, \"parseJson\");\n        this.disposeWithMe(this._resourceManagerService.registerPluginResource({\n            toJson: toJson,\n            parseJson: parseJson,\n            pluginName: $a6ab01cd18fda354$var$PLUGIN_NAME$1,\n            businesses: [\n                $a6ab01cd18fda354$var$I.UNIVER_SHEET\n            ],\n            onLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId, resources)=>{\n                const result = this._selectionProtectionRuleModel.toObject();\n                result[unitId] = resources, this._selectionProtectionRuleModel.fromObject(result);\n                const allAllowedParams = [];\n                Object.keys(resources).forEach((subUnitId)=>{\n                    const list = resources[subUnitId];\n                    this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule)=>{\n                        allAllowedParams.push({\n                            objectID: rule.permissionId,\n                            unitID: unitId,\n                            objectType: $a6ab01cd18fda354$export$31f289fd4edee7cf.SelectRange,\n                            actions: [\n                                $a6ab01cd18fda354$var$P.View,\n                                $a6ab01cd18fda354$var$P.Edit\n                            ]\n                        });\n                    }), list.forEach((rule)=>{\n                        $a6ab01cd18fda354$export$d78cad71acf986b9().forEach((Factor)=>{\n                            const instance = new Factor(unitId, subUnitId, rule.permissionId);\n                            instance.value = !1, this._permissionService.addPermissionPoint(instance);\n                        });\n                    });\n                });\n            }, \"onLoad\"),\n            onUnLoad: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((unitId)=>{\n                this._selectionProtectionRuleModel.deleteUnitModel(unitId);\n            }, \"onUnLoad\")\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a17, \"RangeProtectionService\"), $a6ab01cd18fda354$var$_a17);\n$a6ab01cd18fda354$export$6c91eef2b3ff9a08 = $a6ab01cd18fda354$var$__decorateClass$2([\n    $a6ab01cd18fda354$var$__decorateParam$2(0, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$9372059621b24e72)),\n    $a6ab01cd18fda354$var$__decorateParam$2(1, (0, $7yNYd.Inject)((0, $7yNYd.IPermissionService))),\n    $a6ab01cd18fda354$var$__decorateParam$2(2, (0, $7yNYd.Inject)((0, $7yNYd.IResourceManagerService)))\n], $a6ab01cd18fda354$export$6c91eef2b3ff9a08);\nvar $a6ab01cd18fda354$var$__defProp$1 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc$1 = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__decorateClass$1 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc$1(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp$1(target, key, result), result;\n}, \"__decorateClass$1\"), $a6ab01cd18fda354$var$__decorateParam$1 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam$1\"), $a6ab01cd18fda354$var$_a18;\nlet $a6ab01cd18fda354$var$NumberCellDisplayController = ($a6ab01cd18fda354$var$_a18 = class extends (0, $7yNYd.Disposable) {\n    constructor(_sheetInterceptorService){\n        super(), this._sheetInterceptorService = _sheetInterceptorService, this._initialize();\n    }\n    _initialize() {\n        this._initInterceptorCellContent();\n    }\n    _initInterceptorCellContent() {\n        this.disposeWithMe(this._sheetInterceptorService.intercept($a6ab01cd18fda354$export$35a9432a9b2d0ac0.CELL_CONTENT, {\n            priority: 11,\n            handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((cell, location, next)=>{\n                var _a20;\n                const style = location.workbook.getStyles().getStyleByCell(cell);\n                return (_a20 = style == null ? void 0 : style.n) != null && _a20.pattern ? next({\n                    ...cell\n                }) : (cell == null ? void 0 : cell.t) === (0, $7yNYd.CellValueType).NUMBER && typeof (cell == null ? void 0 : cell.v) == \"number\" ? next({\n                    ...cell,\n                    v: (0, $86b1c.stripErrorMargin)(cell.v)\n                }) : next({\n                    ...cell\n                });\n            }, \"handler\")\n        }));\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a18, \"NumberCellDisplayController\"), $a6ab01cd18fda354$var$_a18);\n$a6ab01cd18fda354$var$NumberCellDisplayController = $a6ab01cd18fda354$var$__decorateClass$1([\n    (0, $7yNYd.OnLifecycle)((0, $7yNYd.LifecycleStages).Ready, $a6ab01cd18fda354$var$NumberCellDisplayController),\n    $a6ab01cd18fda354$var$__decorateParam$1(0, (0, $7yNYd.Inject)($a6ab01cd18fda354$export$80833ae4acf64dfd))\n], $a6ab01cd18fda354$var$NumberCellDisplayController);\nconst $a6ab01cd18fda354$export$6898a18180f3219 = (0, $7yNYd.createIdentifier)(\"univer.exclusive-range-service\"), $a6ab01cd18fda354$var$_ExclusiveRangeService = class _ExclusiveRangeService extends (0, $7yNYd.Disposable) {\n    constructor(){\n        super(...arguments);\n        /**\n     * Exclusive range data structure is as follows: unitId -> sheetId -> feature -> range\n     */ $a6ab01cd18fda354$var$__publicField(this, \"_exclusiveRanges\", /* @__PURE__ */ new Map());\n    }\n    _ensureUnitMap(unitId) {\n        return this._exclusiveRanges.has(unitId) || this._exclusiveRanges.set(unitId, /* @__PURE__ */ new Map()), this._exclusiveRanges.get(unitId);\n    }\n    _ensureSubunitMap(unitId, sheetId) {\n        const unitMap = this._ensureUnitMap(unitId);\n        return unitMap.has(sheetId) || unitMap.set(sheetId, /* @__PURE__ */ new Map()), unitMap.get(sheetId);\n    }\n    _ensureFeature(unitId, sheetId, feature) {\n        const subunitMap = this._ensureSubunitMap(unitId, sheetId);\n        return subunitMap.has(feature) || subunitMap.set(feature, []), subunitMap.get(feature);\n    }\n    addExclusiveRange(unitId, sheetId, feature, ranges) {\n        this._ensureFeature(unitId, sheetId, feature).push(...ranges);\n    }\n    getExclusiveRanges(unitId, sheetId, feature) {\n        var _a20, _b;\n        return (_b = (_a20 = this._exclusiveRanges.get(unitId)) == null ? void 0 : _a20.get(sheetId)) == null ? void 0 : _b.get(feature);\n    }\n    clearExclusiveRanges(unitId, sheetId, feature) {\n        this._ensureFeature(unitId, sheetId, feature), this._exclusiveRanges.get(unitId).get(sheetId).set(feature, []);\n    }\n    clearExclusiveRangesByGroupId(unitId, sheetId, feature, groupId) {\n        const featureMap = this.getExclusiveRanges(unitId, sheetId, feature);\n        if (featureMap) {\n            const newFeatureMap = featureMap.filter((item)=>item.groupId !== groupId);\n            this._exclusiveRanges.get(unitId).get(sheetId).set(feature, newFeatureMap);\n        }\n    }\n    getInterestGroupId(selections) {\n        const interestGroupId = [];\n        return selections.forEach((selection)=>{\n            var _a20;\n            const range = selection.range, { unitId: unitId, sheetId: sheetId } = range;\n            if (!unitId || !sheetId) return;\n            const featureMap = (_a20 = this._exclusiveRanges.get(unitId)) == null ? void 0 : _a20.get(sheetId);\n            if (featureMap) for (const feature of featureMap.keys()){\n                const featureMapRanges = featureMap.get(feature);\n                if (featureMapRanges) {\n                    for (const featureMapRange of featureMapRanges)if ((0, $7yNYd.Rectangle).intersects(range, featureMapRange.range)) {\n                        interestGroupId.push(feature);\n                        break;\n                    }\n                }\n            }\n        }), interestGroupId;\n    }\n};\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_ExclusiveRangeService, \"ExclusiveRangeService\");\nlet $a6ab01cd18fda354$export$70b1c37eeb9a7f1d = $a6ab01cd18fda354$var$_ExclusiveRangeService;\nconst $a6ab01cd18fda354$var$PLUGIN_CONFIG_KEY = \"sheets.config\", $a6ab01cd18fda354$var$defaultPluginConfig = {};\nvar $a6ab01cd18fda354$var$__defProp2 = Object.defineProperty, $a6ab01cd18fda354$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor, $a6ab01cd18fda354$var$__defNormalProp2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((obj, key, value)=>key in obj ? $a6ab01cd18fda354$var$__defProp2(obj, key, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: value\n    }) : obj[key] = value, \"__defNormalProp\"), $a6ab01cd18fda354$var$__decorateClass = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((decorators, target, key, kind)=>{\n    for(var result = kind > 1 ? void 0 : kind ? $a6ab01cd18fda354$var$__getOwnPropDesc(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)(decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n    return kind && result && $a6ab01cd18fda354$var$__defProp2(target, key, result), result;\n}, \"__decorateClass\"), $a6ab01cd18fda354$var$__decorateParam = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((index, decorator)=>(target, key)=>decorator(target, key, index), \"__decorateParam\"), $a6ab01cd18fda354$var$__publicField2 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((obj, key, value)=>$a6ab01cd18fda354$var$__defNormalProp2(obj, typeof key != \"symbol\" ? key + \"\" : key, value), \"__publicField\");\nconst $a6ab01cd18fda354$var$PLUGIN_NAME = \"SHEET_PLUGIN\";\nvar $a6ab01cd18fda354$var$_a19;\nlet $a6ab01cd18fda354$export$e6fdaa2df602be0f = ($a6ab01cd18fda354$var$_a19 = class extends (0, $7yNYd.Plugin) {\n    constructor(_config = $a6ab01cd18fda354$var$defaultPluginConfig, _injector, _configService){\n        super(), this._config = _config, this._injector = _injector, this._configService = _configService;\n        const { ...rest } = this._config;\n        this._configService.setConfig($a6ab01cd18fda354$var$PLUGIN_CONFIG_KEY, rest), this._initConfig(), this._initDependencies(_injector);\n    }\n    onRendered() {}\n    _initConfig() {\n        var _a20;\n        (_a20 = this._config) != null && _a20.onlyRegisterFormulaRelatedMutations && this._configService.setConfig($a6ab01cd18fda354$var$ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY, !0);\n    }\n    _initDependencies(sheetInjector) {\n        var _a20, _b;\n        const dependencies = [\n            // services\n            [\n                $a6ab01cd18fda354$export$3717d01cc8329f85\n            ],\n            [\n                $a6ab01cd18fda354$export$c93d00f3ceba73b5\n            ],\n            [\n                $a6ab01cd18fda354$export$9c9d0dbacf6b589e\n            ],\n            [\n                $a6ab01cd18fda354$export$7f2b141f94d7608f\n            ],\n            [\n                $a6ab01cd18fda354$export$6b26f3da37fc66b,\n                {\n                    useClass: $a6ab01cd18fda354$export$ad982eb150538b20\n                }\n            ],\n            [\n                $a6ab01cd18fda354$export$80833ae4acf64dfd\n            ],\n            // controllers\n            [\n                $a6ab01cd18fda354$var$BasicWorksheetController\n            ],\n            [\n                $a6ab01cd18fda354$export$bef537c190ad4a94\n            ],\n            [\n                $a6ab01cd18fda354$var$NumberCellDisplayController\n            ],\n            [\n                $a6ab01cd18fda354$export$dbb912bdd067f353\n            ],\n            // permission\n            [\n                $a6ab01cd18fda354$export$f9f5265b129298d6\n            ],\n            [\n                $a6ab01cd18fda354$export$e82d59a730eac89c\n            ],\n            [\n                $a6ab01cd18fda354$export$5b8cbe97d6c75b92\n            ],\n            // range protection\n            [\n                $a6ab01cd18fda354$export$ff6acb0e8081cbe3\n            ],\n            [\n                $a6ab01cd18fda354$export$9372059621b24e72\n            ],\n            [\n                $a6ab01cd18fda354$export$5678530e7d08deeb\n            ],\n            [\n                $a6ab01cd18fda354$export$6c91eef2b3ff9a08\n            ],\n            [\n                $a6ab01cd18fda354$export$6898a18180f3219,\n                {\n                    useClass: $a6ab01cd18fda354$export$70b1c37eeb9a7f1d,\n                    deps: [\n                        $a6ab01cd18fda354$export$c93d00f3ceba73b5\n                    ]\n                }\n            ]\n        ];\n        (_a20 = this._config) != null && _a20.notExecuteFormula || dependencies.push([\n            $a6ab01cd18fda354$var$CalculateResultApplyController\n        ]), (0, $7yNYd.mergeOverrideWithDependencies)(dependencies, (_b = this._config) == null ? void 0 : _b.override).forEach((d)=>{\n            sheetInjector.add(d);\n        }), this._injector.get($a6ab01cd18fda354$export$80833ae4acf64dfd), this._injector.get($a6ab01cd18fda354$export$6c91eef2b3ff9a08), this._injector.get($a6ab01cd18fda354$export$6898a18180f3219);\n    }\n}, $a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$_a19, \"UniverSheetsPlugin\"), $a6ab01cd18fda354$var$_a19);\n$a6ab01cd18fda354$var$__publicField2($a6ab01cd18fda354$export$e6fdaa2df602be0f, \"pluginName\", $a6ab01cd18fda354$var$PLUGIN_NAME);\n$a6ab01cd18fda354$var$__publicField2($a6ab01cd18fda354$export$e6fdaa2df602be0f, \"type\", (0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n$a6ab01cd18fda354$export$e6fdaa2df602be0f = $a6ab01cd18fda354$var$__decorateClass([\n    (0, $7yNYd.DependentOn)((0, $86b1c.UniverFormulaEnginePlugin)),\n    $a6ab01cd18fda354$var$__decorateParam(1, (0, $7yNYd.Inject)((0, $7yNYd.Injector))),\n    $a6ab01cd18fda354$var$__decorateParam(2, (0, $7yNYd.IConfigService))\n], $a6ab01cd18fda354$export$e6fdaa2df602be0f);\nconst $a6ab01cd18fda354$export$9b1e05f88a2cd27b = [\n    $a6ab01cd18fda354$export$d7b494254bbf476f.id,\n    $a6ab01cd18fda354$export$784e15c60e3adf6c.id,\n    $a6ab01cd18fda354$export$92a6672d4df31cfb.id,\n    $a6ab01cd18fda354$export$7067bfb95d30a5c3.id,\n    $a6ab01cd18fda354$export$501905adef850859.id,\n    $a6ab01cd18fda354$export$63ddef9080d565c8.id,\n    $a6ab01cd18fda354$export$b98040a300ab6f6e.id,\n    $a6ab01cd18fda354$export$7257073ee36b52d2.id,\n    $a6ab01cd18fda354$export$e2c06a117868669c.id,\n    $a6ab01cd18fda354$export$3c29e82821fa0859.id,\n    $a6ab01cd18fda354$export$cd9a5b2737870ea6.id,\n    $a6ab01cd18fda354$export$2e1cbe0a40f11cd4.id,\n    $a6ab01cd18fda354$export$823dff2590c7c5ff.id,\n    $a6ab01cd18fda354$export$1b784c21f081e76a.id,\n    $a6ab01cd18fda354$export$9642f6b705de590b.id\n], $a6ab01cd18fda354$export$30f0a6c2c92d64f5 = [\n    $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n    $a6ab01cd18fda354$export$5535d7f795e5bded.id,\n    $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n    $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n    $a6ab01cd18fda354$export$e583b3721377d199.id\n], $a6ab01cd18fda354$export$b7a28ca33510185e = 1.5, $a6ab01cd18fda354$export$1a55b7f08fc0eb8c = \"rgba(255, 255, 255, 0.01)\";\nfunction $a6ab01cd18fda354$export$f9f44c52c4a3c2aa(themeService) {\n    const styleSheet = themeService.getCurrentTheme(), fill = new (0, $7yNYd.ColorKit)(styleSheet.primaryColor).setAlpha(0.07).toRgbString();\n    return {\n        strokeWidth: 1,\n        stroke: styleSheet.primaryColor,\n        fill: fill,\n        // widgets: { tl: true, tc: true, tr: true, ml: true, mr: true, bl: true, bc: true, br: true },\n        widgets: {},\n        widgetSize: 6,\n        widgetStrokeWidth: 1,\n        widgetStroke: styleSheet.colorWhite,\n        hasAutoFill: !0,\n        AutofillSize: 6,\n        AutofillStrokeWidth: 1,\n        AutofillStroke: styleSheet.colorWhite,\n        hasRowHeader: !0,\n        rowHeaderFill: fill,\n        rowHeaderStroke: styleSheet.primaryColor,\n        rowHeaderStrokeWidth: 1,\n        hasColumnHeader: !0,\n        columnHeaderFill: fill,\n        columnHeaderStroke: styleSheet.primaryColor,\n        columnHeaderStrokeWidth: 1,\n        expandCornerSize: 40\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$f9f44c52c4a3c2aa, \"getNormalSelectionStyle\");\nfunction $a6ab01cd18fda354$export$fa3823819a78529f(selectionWithCoordAndStyle) {\n    const { rangeWithCoord: rangeWithCoord, primaryWithCoord: primaryWithCoord, style: style } = selectionWithCoordAndStyle, result = {\n        range: {\n            startRow: rangeWithCoord.startRow,\n            startColumn: rangeWithCoord.startColumn,\n            endRow: rangeWithCoord.endRow,\n            endColumn: rangeWithCoord.endColumn,\n            rangeType: rangeWithCoord.rangeType,\n            unitId: rangeWithCoord.unitId,\n            sheetId: rangeWithCoord.sheetId\n        },\n        primary: null,\n        style: style\n    };\n    return primaryWithCoord != null && (result.primary = $a6ab01cd18fda354$export$dcdb281620f47c11(primaryWithCoord)), result;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$fa3823819a78529f, \"convertSelectionDataToRange\");\nfunction $a6ab01cd18fda354$export$dcdb281620f47c11(primaryWithCoord) {\n    const { actualRow: actualRow, actualColumn: actualColumn, isMerged: isMerged, isMergedMainCell: isMergedMainCell } = primaryWithCoord, { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = primaryWithCoord.mergeInfo;\n    return {\n        actualRow: actualRow,\n        actualColumn: actualColumn,\n        isMerged: isMerged,\n        isMergedMainCell: isMergedMainCell,\n        startRow: startRow,\n        startColumn: startColumn,\n        endRow: endRow,\n        endColumn: endColumn\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$dcdb281620f47c11, \"convertPrimaryWithCoordToPrimary\");\nfunction $a6ab01cd18fda354$export$6e0275a6f772a899(row, column, mergeData) {\n    const newCellRange = (0, $7yNYd.getCellInfoInMergeData)(row, column, mergeData), newSelectionData = (0, $7yNYd.makeCellRangeToRangeData)(newCellRange);\n    if (newSelectionData) return {\n        range: newSelectionData,\n        primary: newCellRange,\n        style: null\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$6e0275a6f772a899, \"transformCellDataToSelectionData\");\nconst $a6ab01cd18fda354$export$3df564390c983961 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params, ranges)=>{\n    const selectionsBeforeMutation = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections(), { value: value, selections: selections, unitId: unitId, subUnitId: subUnitId } = params;\n    if (selectionsBeforeMutation) {\n        const primaryBeforeMutation = selectionsBeforeMutation[(selectionsBeforeMutation == null ? void 0 : selectionsBeforeMutation.length) - 1].primary;\n        if (primaryBeforeMutation) {\n            const { actualColumn: actualColumn, actualRow: actualRow } = primaryBeforeMutation;\n            let { startRow: startRow, startColumn: startColumn, endRow: endRow, endColumn: endColumn } = selections[selections.length - 1];\n            if (value === (0, $7yNYd.Dimension).COLUMNS) {\n                const rangeByColumn = ranges.find((item)=>item.startColumn === actualColumn && item.endColumn === actualColumn && actualRow === item.startRow);\n                rangeByColumn && (endColumn = rangeByColumn.endColumn, startRow = rangeByColumn.startRow, endRow = rangeByColumn.endRow);\n            } else if (value === (0, $7yNYd.Dimension).ROWS) {\n                const rangeByRow = ranges.find((item)=>item.startRow === actualRow && item.endRow === actualRow && actualColumn === item.startColumn);\n                rangeByRow && (endRow = rangeByRow.endRow, startColumn = rangeByRow.startColumn, endColumn = rangeByRow.endColumn);\n            }\n            const primary = {\n                startRow: startRow,\n                startColumn: startColumn,\n                endRow: endRow,\n                endColumn: endColumn,\n                actualRow: actualRow,\n                actualColumn: actualColumn,\n                isMerged: !0,\n                isMergedMainCell: startRow === actualRow && startColumn === actualColumn\n            }, selectionsByRedo = selectionsBeforeMutation.map((selection, index, selections2)=>({\n                    range: selection.range,\n                    style: null,\n                    primary: index === selections2.length - 1 ? primary : null\n                })), setSelectionsParamByRedo = {\n                unitId: unitId,\n                subUnitId: subUnitId,\n                selections: selectionsByRedo\n            };\n            return {\n                id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n                params: setSelectionsParamByRedo\n            };\n        }\n        return null;\n    }\n    return null;\n}, \"AddMergeRedoSelectionsOperationFactory\"), $a6ab01cd18fda354$export$524a51095d4bc057 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const selectionsBeforeMutation = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections(), { unitId: unitId, subUnitId: subUnitId } = params;\n    if (selectionsBeforeMutation && selectionsBeforeMutation[(selectionsBeforeMutation == null ? void 0 : selectionsBeforeMutation.length) - 1].primary) {\n        const setSelectionsParamByUndo = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            selections: [\n                ...selectionsBeforeMutation\n            ]\n        };\n        return {\n            id: $a6ab01cd18fda354$export$9fe459fc1a6ecb2d.id,\n            params: setSelectionsParamByUndo\n        };\n    }\n    return null;\n}, \"AddMergeUndoSelectionsOperationFactory\");\nfunction $a6ab01cd18fda354$var$cellHasValue(cell) {\n    return cell == null ? !1 : cell.v !== void 0 && cell.v !== null && cell.v !== \"\" || cell.p !== void 0;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$cellHasValue, \"cellHasValue\");\nfunction $a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo(cell, matrix) {\n    return cell && cell.spanAnchor ? $a6ab01cd18fda354$var$cellHasValue(matrix.getValue(cell.spanAnchor.startRow, cell.spanAnchor.startColumn)) : $a6ab01cd18fda354$var$cellHasValue(cell);\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo, \"hasValueFromMatrixWithSpanInfo\");\nfunction $a6ab01cd18fda354$var$getMatrixWithSpanInfo(worksheet, startRow, startColumn, endRow, endColumn) {\n    const matrix = worksheet.getCellMatrix(), mergedCellsInRange = worksheet.getSpanModel().getMergedCellRange(startRow, startColumn, endRow, endColumn), returnCellMatrix = new (0, $7yNYd.ObjectMatrix)();\n    return matrix.forValue((row, col)=>{\n        const v = matrix.getValue(row, col);\n        v && returnCellMatrix.setValue(row, col, v);\n    }), mergedCellsInRange.forEach((mergedCell)=>{\n        const { startColumn: startColumn2, startRow: startRow2, endColumn: endColumn2, endRow: endRow2 } = mergedCell;\n        (0, $7yNYd.createRowColIter)(startRow2, endRow2, startColumn2, endColumn2).forEach((row, col)=>{\n            row === startRow2 && col === startColumn2 && returnCellMatrix.setValue(row, col, {\n                ...matrix.getValue(row, col),\n                spanAnchor: {\n                    startRow: startRow2,\n                    endRow: endRow2,\n                    startColumn: startColumn2,\n                    endColumn: endColumn2\n                }\n            }), (row !== startRow2 || col !== startColumn2) && (returnCellMatrix.realDeleteValue(row, col), returnCellMatrix.setValue(row, col, {\n                spanAnchor: {\n                    startRow: startRow2,\n                    endRow: endRow2,\n                    startColumn: startColumn2,\n                    endColumn: endColumn2\n                }\n            }));\n        });\n    }), returnCellMatrix;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getMatrixWithSpanInfo, \"getMatrixWithSpanInfo\");\nfunction $a6ab01cd18fda354$var$getExpandedRangeLeft(range, allMatrixWithSpan, leftOffset, isWorksheetHasSpan) {\n    const { startRow: startRow, startColumn: startColumn, endRow: endRow } = range;\n    let spanAnchor = null, hasValue = !1;\n    for(let i = startRow; i <= endRow; i++){\n        const cell = allMatrixWithSpan.getValue(i, startColumn - leftOffset);\n        if (hasValue = hasValue || $a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue) break;\n        cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n            startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n            startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n            endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n            endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n        } : spanAnchor = {\n            startRow: cell.spanAnchor.startRow,\n            startColumn: cell.spanAnchor.startColumn,\n            endRow: cell.spanAnchor.endRow,\n            endColumn: cell.spanAnchor.endColumn\n        });\n    }\n    return hasValue ? (range.startColumn = range.startColumn - leftOffset, {\n        spanAnchor: spanAnchor,\n        hasValue: !0,\n        range: range\n    }) : {\n        spanAnchor: null,\n        hasValue: !1,\n        range: range\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getExpandedRangeLeft, \"getExpandedRangeLeft\");\nfunction $a6ab01cd18fda354$var$getExpandedRangeRight(range, allMatrixWithSpan, rightOffset, isWorksheetHasSpan) {\n    const { startRow: startRow, endColumn: endColumn, endRow: endRow } = range;\n    let spanAnchor = null, hasValue = !1;\n    for(let i = startRow; i <= endRow; i++){\n        const cell = allMatrixWithSpan.getValue(i, endColumn + rightOffset);\n        if (hasValue = hasValue || $a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue) break;\n        cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n            startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n            startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n            endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n            endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n        } : spanAnchor = {\n            startRow: cell.spanAnchor.startRow,\n            startColumn: cell.spanAnchor.startColumn,\n            endRow: cell.spanAnchor.endRow,\n            endColumn: cell.spanAnchor.endColumn\n        });\n    }\n    return hasValue ? (range.endColumn = range.endColumn + rightOffset, {\n        spanAnchor: spanAnchor,\n        hasValue: !0,\n        range: range\n    }) : {\n        spanAnchor: null,\n        hasValue: !1,\n        range: range\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getExpandedRangeRight, \"getExpandedRangeRight\");\nfunction $a6ab01cd18fda354$var$getExpandedRangeUp(range, allMatrixWithSpan, upOffset, isWorksheetHasSpan) {\n    const { startRow: startRow, startColumn: startColumn, endColumn: endColumn } = range;\n    let spanAnchor = null, hasValue = !1;\n    for(let i = startColumn; i <= endColumn; i++){\n        const cell = allMatrixWithSpan.getValue(startRow - upOffset, i);\n        if (hasValue = hasValue || $a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue) break;\n        cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n            startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n            startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n            endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n            endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n        } : spanAnchor = {\n            startRow: cell.spanAnchor.startRow,\n            startColumn: cell.spanAnchor.startColumn,\n            endRow: cell.spanAnchor.endRow,\n            endColumn: cell.spanAnchor.endColumn\n        });\n    }\n    return hasValue ? (range.startRow = range.startRow - upOffset, {\n        spanAnchor: spanAnchor,\n        hasValue: !0,\n        range: range\n    }) : {\n        spanAnchor: null,\n        hasValue: !1,\n        range: range\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getExpandedRangeUp, \"getExpandedRangeUp\");\nfunction $a6ab01cd18fda354$var$getExpandedRangeDown(range, allMatrixWithSpan, downOffset, isWorksheetHasSpan) {\n    const { startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range;\n    let spanAnchor = null, hasValue = !1;\n    for(let i = startColumn; i <= endColumn; i++){\n        const cell = allMatrixWithSpan.getValue(endRow + downOffset, i);\n        if (hasValue = hasValue || $a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue) break;\n        cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n            startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n            startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n            endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n            endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n        } : spanAnchor = {\n            startRow: cell.spanAnchor.startRow,\n            startColumn: cell.spanAnchor.startColumn,\n            endRow: cell.spanAnchor.endRow,\n            endColumn: cell.spanAnchor.endColumn\n        });\n    }\n    return hasValue ? (range.endRow = range.endRow + downOffset, {\n        spanAnchor: spanAnchor,\n        hasValue: !0,\n        range: range\n    }) : {\n        spanAnchor: null,\n        hasValue: !1,\n        range: range\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getExpandedRangeDown, \"getExpandedRangeDown\");\nfunction $a6ab01cd18fda354$export$195ef1b6b0ee9b53(startRange, directions, worksheet) {\n    const maxRow = worksheet.getMaxRows(), maxColumn = worksheet.getMaxColumns(), allMatrixWithSpan = $a6ab01cd18fda354$var$getMatrixWithSpanInfo(worksheet, 0, 0, maxRow - 1, maxColumn - 1), worksheetHasSpan = worksheet.getSnapshot().mergeData.length > 0, { left: left, right: right, up: up, down: down } = directions;\n    let changed = !0, destRange = {\n        ...startRange\n    };\n    const spanAnchors = [];\n    for(; changed;){\n        if (changed = !1, up && destRange.startRow !== 0) {\n            const { hasValue: hasValue, range: range, spanAnchor: spanAnchor } = $a6ab01cd18fda354$var$getExpandedRangeUp(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n            if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n                destRange = range, changed = !0;\n                continue;\n            }\n        }\n        if (down && destRange.endRow !== maxRow - 1) {\n            const { hasValue: hasValue, range: range, spanAnchor: spanAnchor } = $a6ab01cd18fda354$var$getExpandedRangeDown(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n            if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n                destRange = range, changed = !0;\n                continue;\n            }\n        }\n        if (left && destRange.startColumn !== 0) {\n            const { hasValue: hasValue, range: range, spanAnchor: spanAnchor } = $a6ab01cd18fda354$var$getExpandedRangeLeft(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n            if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n                destRange = range, changed = !0;\n                continue;\n            }\n        }\n        if (right && destRange.endColumn !== maxColumn - 1) {\n            const { hasValue: hasValue, range: range, spanAnchor: spanAnchor } = $a6ab01cd18fda354$var$getExpandedRangeRight(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n            if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n                destRange = range, changed = !0;\n                continue;\n            }\n        }\n    }\n    return spanAnchors.length > 0 && (destRange = (0, $7yNYd.Rectangle).union(destRange, ...spanAnchors)), destRange;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$195ef1b6b0ee9b53, \"expandToContinuousRange\");\nconst $a6ab01cd18fda354$export$8513f6f00a6f17 = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, unitId, subUnitId, ranges)=>{\n    const permissionService = accessor.get((0, $7yNYd.IPermissionService)), rangeProtectionRuleModel = accessor.get((0, $a6ab01cd18fda354$export$9372059621b24e72)), workbookEditablePermission = permissionService.getPermissionPoint(new (0, $a6ab01cd18fda354$export$f9b2f3564b55cfea)(unitId).id);\n    if (!(workbookEditablePermission != null && workbookEditablePermission.value)) return !1;\n    const worksheetEditPermission = permissionService.getPermissionPoint(new (0, $a6ab01cd18fda354$export$d9c4797b23318374)(unitId, subUnitId).id);\n    if (!(worksheetEditPermission != null && worksheetEditPermission.value)) return !1;\n    const ruleList = rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule)=>rule.ranges.some((ruleRange)=>ranges.some((range)=>(0, $7yNYd.Rectangle).intersects(ruleRange, range))));\n    return ruleList.length ? ruleList.every((rule)=>{\n        const permissionId = rule.permissionId, permissionPoint = permissionService.getPermissionPoint(new (0, $a6ab01cd18fda354$export$71b84bcd22831dcf)(unitId, subUnitId, permissionId).id);\n        return !!(permissionPoint != null && permissionPoint.value);\n    }) : !0;\n}, \"checkRangesEditablePermission\");\nfunction $a6ab01cd18fda354$var$checkCellContentInRanges(worksheet, ranges) {\n    return ranges.some((range)=>$a6ab01cd18fda354$var$checkCellContentInRange(worksheet, range));\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$checkCellContentInRanges, \"checkCellContentInRanges\");\nfunction $a6ab01cd18fda354$var$checkCellContentInRange(worksheet, range) {\n    const { startRow: startRow, startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range, cellMatrix = worksheet.getMatrixWithMergedCells(startRow, startColumn, endRow, endColumn);\n    let someCellGoingToBeRemoved = !1;\n    return cellMatrix.forValue((row, col, cellData)=>{\n        if (cellData && (row !== startRow || col !== startColumn) && worksheet.cellHasValue(cellData)) return someCellGoingToBeRemoved = !0, !1;\n    }), someCellGoingToBeRemoved;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$checkCellContentInRange, \"checkCellContentInRange\");\nfunction $a6ab01cd18fda354$var$getClearContentMutationParamsForRanges(accessor, unitId, worksheet, ranges) {\n    const undos = [], redos = [], subUnitId = worksheet.getSheetId();\n    return ranges.forEach((range)=>{\n        const redoMatrix = $a6ab01cd18fda354$var$getClearContentMutationParamForRange(worksheet, range), redoMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            cellValue: redoMatrix.getData()\n        }, undoMutationParams = $a6ab01cd18fda354$export$8414704275a3cbbf(accessor, redoMutationParams);\n        undos.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: undoMutationParams\n        }), redos.push({\n            id: $a6ab01cd18fda354$export$ce2b970bc67fd9bc.id,\n            params: redoMutationParams\n        });\n    }), {\n        undos: undos,\n        redos: redos\n    };\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getClearContentMutationParamsForRanges, \"getClearContentMutationParamsForRanges\");\nfunction $a6ab01cd18fda354$var$getClearContentMutationParamForRange(worksheet, range) {\n    const { startRow: startRow, startColumn: startColumn, endColumn: endColumn, endRow: endRow } = range, cellMatrix = worksheet.getMatrixWithMergedCells(startRow, startColumn, endRow, endColumn, !0), redoMatrix = new (0, $7yNYd.ObjectMatrix)();\n    return cellMatrix.forValue((row, col, cellData)=>{\n        cellData && (row !== startRow || col !== startColumn) && redoMatrix.setValue(row, col, null);\n    }), redoMatrix;\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$var$getClearContentMutationParamForRange, \"getClearContentMutationParamForRange\");\nconst $a6ab01cd18fda354$export$6308c73384741c53 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.add-worksheet-merge\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), unitId = params.unitId, subUnitId = params.subUnitId, selections = params.selections, ranges = $a6ab01cd18fda354$export$7dd3f8a552d30610(selections, params.value), worksheet = univerInstanceService.getUniverSheetInstance(unitId).getSheetBySheetId(subUnitId), redoMutations = [], undoMutations = [], willRemoveSomeCell = $a6ab01cd18fda354$var$checkCellContentInRanges(worksheet, ranges), removeMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        }, addMergeMutationParams = {\n            unitId: unitId,\n            subUnitId: subUnitId,\n            ranges: ranges\n        };\n        redoMutations.push({\n            id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n            params: removeMergeMutationParams\n        }), redoMutations.push({\n            id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n            params: addMergeMutationParams\n        });\n        const undoRemoveMergeMutationParams = $a6ab01cd18fda354$export$328feb80d2f892b2(accessor, removeMergeMutationParams), undoMutationParams = $a6ab01cd18fda354$export$28cf35492035648a(accessor, addMergeMutationParams);\n        if (undoMutations.push({\n            id: $a6ab01cd18fda354$export$9bbe8f9ee2bc5646.id,\n            params: undoMutationParams\n        }), undoMutations.push({\n            id: $a6ab01cd18fda354$export$2cd10fd9284040fa.id,\n            params: undoRemoveMergeMutationParams\n        }), willRemoveSomeCell) {\n            const data = $a6ab01cd18fda354$var$getClearContentMutationParamsForRanges(accessor, unitId, worksheet, ranges);\n            redoMutations.unshift(...data.redos), undoMutations.push(...data.undos);\n        }\n        return (0, $7yNYd.sequenceExecute)(redoMutations, commandService).result ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: undoMutations,\n            redoMutations: redoMutations\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$8c43ba6ae41f68ca = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.add-worksheet-merge-all\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), selections = (_a20 = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const workSheet = workbook.getActiveSheet();\n        if (!workSheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n        return commandService.executeCommand($a6ab01cd18fda354$export$6308c73384741c53.id, {\n            selections: selections,\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$43ee41af5024abda = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.add-worksheet-merge-vertical\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), selections = (_a20 = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const workSheet = workbook.getActiveSheet();\n        if (!workSheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n        return commandService.executeCommand($a6ab01cd18fda354$export$6308c73384741c53.id, {\n            value: (0, $7yNYd.Dimension).COLUMNS,\n            selections: selections,\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$d964723ec7a30fd7 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.add-worksheet-merge-horizontal\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), selections = (_a20 = accessor.get($a6ab01cd18fda354$export$c93d00f3ceba73b5).getCurrentSelections()) == null ? void 0 : _a20.map((s)=>s.range);\n        if (!(selections != null && selections.length)) return !1;\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getCurrentUnitForType((0, $7yNYd.UniverInstanceType).UNIVER_SHEET);\n        if (!workbook) return !1;\n        const workSheet = workbook.getActiveSheet();\n        if (!workSheet) return !1;\n        const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n        return commandService.executeCommand($a6ab01cd18fda354$export$6308c73384741c53.id, {\n            value: (0, $7yNYd.Dimension).ROWS,\n            selections: selections,\n            unitId: unitId,\n            subUnitId: subUnitId\n        });\n    }, \"handler\")\n};\nasync function $a6ab01cd18fda354$export$b5b2c55d7bbb1a20(injector, unitId, subUnitId, ranges) {\n    const univerInstanceService = injector.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService, {\n        unitId: unitId,\n        subUnitId: subUnitId\n    });\n    if (!target) return;\n    const { worksheet: worksheet } = target;\n    if (worksheet.getMergeData().some((mergeRange)=>ranges.some((range)=>(0, $7yNYd.Rectangle).intersects(range, mergeRange)))) throw new Error(\"The ranges to be merged overlap with the existing merged cells\");\n    await injector.get((0, $7yNYd.ICommandService)).executeCommand($a6ab01cd18fda354$export$6308c73384741c53.id, {\n        unitId: unitId,\n        subUnitId: subUnitId,\n        selections: ranges\n    });\n}\n$a6ab01cd18fda354$var$__name($a6ab01cd18fda354$export$b5b2c55d7bbb1a20, \"addMergeCellsUtil\");\nconst $a6ab01cd18fda354$var$SetHideGridlinesUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const oldStatus = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().showGridlines;\n    return {\n        ...(0, $7yNYd.Tools).deepClone(params),\n        hideGridlines: oldStatus\n    };\n}, \"SetHideGridlinesUndoMutationFactory\"), $a6ab01cd18fda354$export$ded5baff375d10f = {\n    id: \"sheet.mutation.set-hide-gridlines\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!workbook) return !1;\n        const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const config = worksheet.getConfig();\n        return config.showGridlines = params.hideGridlines, !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$2a37c70c4b329cde = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-hide-gridlines\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), univerInstanceService = accessor.get((0, $7yNYd.IUniverInstanceService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(univerInstanceService);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target;\n        let hideGridlines = (0, $7yNYd.BooleanNumber).FALSE;\n        params && (hideGridlines = (_a20 = params.hideGridlines) != null ? _a20 : (0, $7yNYd.BooleanNumber).FALSE);\n        const workbook = univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook || !workbook.getSheetBySheetId(subUnitId)) return !1;\n        const setHideGridlinesMutationParams = {\n            hideGridlines: hideGridlines,\n            unitId: unitId,\n            subUnitId: subUnitId\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetHideGridlinesUndoMutationFactory(accessor, setHideGridlinesMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$ded5baff375d10f.id, setHideGridlinesMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ded5baff375d10f.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ded5baff375d10f.id,\n                    params: setHideGridlinesMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n}, $a6ab01cd18fda354$var$SetWorksheetRightToLeftUndoMutationFactory = /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n    const oldState = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().rightToLeft;\n    return {\n        ...(0, $7yNYd.Tools).deepClone(params),\n        rightToLeft: oldState\n    };\n}, \"SetWorksheetRightToLeftUndoMutationFactory\"), $a6ab01cd18fda354$export$ec74e7dca9d497c3 = {\n    id: \"sheet.mutation.set-worksheet-right-to-left\",\n    type: (0, $7yNYd.CommandType).MUTATION,\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name((accessor, params)=>{\n        const workbook = accessor.get((0, $7yNYd.IUniverInstanceService)).getUniverSheetInstance(params.unitId);\n        if (!workbook) return !1;\n        const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n        if (!worksheet) return !1;\n        const config = worksheet.getConfig();\n        return config.rightToLeft = params.rightToLeft, !0;\n    }, \"handler\")\n}, $a6ab01cd18fda354$export$5f8be240945abc07 = {\n    type: (0, $7yNYd.CommandType).COMMAND,\n    id: \"sheet.command.set-worksheet-right-to-left\",\n    handler: /* @__PURE__ */ $a6ab01cd18fda354$var$__name(async (accessor, params)=>{\n        var _a20;\n        const commandService = accessor.get((0, $7yNYd.ICommandService)), undoRedoService = accessor.get((0, $7yNYd.IUndoRedoService)), target = $a6ab01cd18fda354$export$7172ac1f96d9c125(accessor.get((0, $7yNYd.IUniverInstanceService)), params);\n        if (!target) return !1;\n        const { unitId: unitId, subUnitId: subUnitId } = target;\n        let rightToLeft = (0, $7yNYd.BooleanNumber).FALSE;\n        params && (rightToLeft = (_a20 = params.rightToLeft) != null ? _a20 : (0, $7yNYd.BooleanNumber).FALSE);\n        const setWorksheetRightToLeftMutationParams = {\n            rightToLeft: rightToLeft,\n            unitId: unitId,\n            subUnitId: subUnitId\n        }, undoMutationParams = $a6ab01cd18fda354$var$SetWorksheetRightToLeftUndoMutationFactory(accessor, setWorksheetRightToLeftMutationParams);\n        return commandService.syncExecuteCommand($a6ab01cd18fda354$export$ec74e7dca9d497c3.id, setWorksheetRightToLeftMutationParams) ? (undoRedoService.pushUndoRedo({\n            unitID: unitId,\n            undoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ec74e7dca9d497c3.id,\n                    params: undoMutationParams\n                }\n            ],\n            redoMutations: [\n                {\n                    id: $a6ab01cd18fda354$export$ec74e7dca9d497c3.id,\n                    params: setWorksheetRightToLeftMutationParams\n                }\n            ]\n        }), !0) : !1;\n    }, \"handler\")\n};\n\n});\nparcelRegister(\"23cfA\", function(module, exports) {\n\n$parcel$export(module.exports, \"switchMap\", function () { return $17e55d3dbb81e39c$export$9f6ea8e48bc26eab; });\n\nvar $b7gpN = parcelRequire(\"b7gpN\");\n\nvar $jSzwf = parcelRequire(\"jSzwf\");\n\nvar $iNetn = parcelRequire(\"iNetn\");\nfunction $17e55d3dbb81e39c$export$9f6ea8e48bc26eab(project, resultSelector) {\n    return (0, $jSzwf.operate)(function(source, subscriber) {\n        var innerSubscriber = null;\n        var index = 0;\n        var isComplete = false;\n        var checkComplete = function() {\n            return isComplete && !innerSubscriber && subscriber.complete();\n        };\n        source.subscribe((0, $iNetn.createOperatorSubscriber)(subscriber, function(value) {\n            innerSubscriber === null || innerSubscriber === void 0 || innerSubscriber.unsubscribe();\n            var innerIndex = 0;\n            var outerIndex = index++;\n            (0, $b7gpN.innerFrom)(project(value, outerIndex)).subscribe(innerSubscriber = (0, $iNetn.createOperatorSubscriber)(subscriber, function(innerValue) {\n                return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);\n            }, function() {\n                innerSubscriber = null;\n                checkComplete();\n            }));\n        }, function() {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n\n});\n\nparcelRegister(\"2BOVU\", function(module, exports) {\n\n$parcel$export(module.exports, \"DEFAULT_TEXT_FORMAT\", function () { return $1e668bb1143ccf68$export$2c6e686c0c450ac0; });\nconst $1e668bb1143ccf68$export$2c6e686c0c450ac0 = \"@@@\";\n\n});\n\n\n\n//# sourceMappingURL=es.9d442354.js.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: !0 });\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nimport { RxDisposable, UniverInstanceType, Disposable, IUniverInstanceService, createInterceptorKey, toDisposable, remove, composeInterceptors, DisposableCollection, Tools, normalizeTextRuns, CellValueType, isRealNum, isBooleanString, isSafeNumeric, CommandType, ObjectMatrix, ICommandService, IUndoRedoService, sequenceExecute, LocaleService, createIdentifier, IContextService, selectionToArray, Rectangle, RANGE_TYPE, ErrorService, Range, cellToRange, PermissionStatus, IPermissionService, isICellData, Dimension, getArrayLength, insertMatrixArray, spliceArray, sliceMatrixArray, concatMatrixArray, BooleanNumber, Direction, mergeWorksheetSnapshotWithDefault, moveMatrixArray, BorderType, BorderStyleTypes, FontWeight, FontItalic, runOnLifecycle, LifecycleStages, OnLifecycle, Inject, Injector, IResourceManagerService, Optional, IConfigService, queryObjectMatrix, InterceptorManager, ILogService, LRUMap, DependentOn, Plugin, mergeOverrideWithDependencies, ColorKit, getCellInfoInMergeData, makeCellRangeToRangeData, createRowColIter } from \"@univerjs/core\";\nimport { SetDefinedNameMutation, RemoveDefinedNameMutation, SetFormulaCalculationResultMutation, handleNumfmtInCell, IDefinedNamesService, stripErrorMargin, UniverFormulaEnginePlugin } from \"@univerjs/engine-formula\";\nimport { DataSyncPrimaryController } from \"@univerjs/rpc\";\nimport { shareReplay, takeUntil, switchMap, of, Subject, BehaviorSubject, merge, map } from \"rxjs\";\nimport { DEFAULT_TEXT_FORMAT } from \"@univerjs/engine-numfmt\";\nimport { takeUntil as takeUntil$1, filter, map as map$1 } from \"rxjs/operators\";\nimport { RangeProtectionRuleModel as RangeProtectionRuleModel$1, WorkbookEditablePermission as WorkbookEditablePermission$1, WorksheetEditPermission as WorksheetEditPermission$1, RangeProtectionPermissionEditPoint as RangeProtectionPermissionEditPoint$1 } from \"@univerjs/sheets\";\nvar __defProp$i = Object.defineProperty, __getOwnPropDesc$i = Object.getOwnPropertyDescriptor, __decorateClass$i = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$i(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$i(target, key, result), result;\n}, \"__decorateClass$i\"), __decorateParam$f = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$f\"), SelectionMoveType = /* @__PURE__ */ ((SelectionMoveType2) => (SelectionMoveType2[SelectionMoveType2.MOVE_START = 0] = \"MOVE_START\", SelectionMoveType2[SelectionMoveType2.MOVING = 1] = \"MOVING\", SelectionMoveType2[SelectionMoveType2.MOVE_END = 2] = \"MOVE_END\", SelectionMoveType2))(SelectionMoveType || {}), _a;\nlet SheetsSelectionsService = (_a = class extends RxDisposable {\n  constructor(_instanceSrv) {\n    super();\n    __publicField(this, \"selectionMoveStart$\");\n    __publicField(this, \"selectionMoving$\");\n    __publicField(this, \"selectionMoveEnd$\");\n    __publicField(this, \"_workbookSelections\", /* @__PURE__ */ new Map());\n    this._instanceSrv = _instanceSrv, this._init();\n  }\n  get _currentSelectionPos() {\n    const workbook = this._instanceSrv.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return null;\n    const worksheet = workbook.getActiveSheet();\n    return { unitId: workbook.getUnitId(), sheetId: worksheet.getSheetId() };\n  }\n  get currentSelectionParam() {\n    return this._currentSelectionPos;\n  }\n  _init() {\n    const c$ = this._instanceSrv.getCurrentTypeOfUnit$(UniverInstanceType.UNIVER_SHEET).pipe(shareReplay(1), takeUntil(this.dispose$));\n    this.selectionMoveStart$ = c$.pipe(switchMap((workbook) => workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoveStart$ : of())), this.selectionMoving$ = c$.pipe(switchMap((workbook) => workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoving$ : of())), this.selectionMoveEnd$ = c$.pipe(switchMap((workbook) => workbook ? this._ensureWorkbookSelection(workbook.getUnitId()).selectionMoveEnd$ : of([]))), this._instanceSrv.getTypeOfUnitDisposed$(UniverInstanceType.UNIVER_SHEET).pipe(takeUntil(this.dispose$)).subscribe((workbook) => {\n      this._removeWorkbookSelection(workbook.getUnitId());\n    });\n  }\n  /**\n   * Clear all selections in all workbooks.\n   * invoked by prompt.controller\n   */\n  clear() {\n    this._workbookSelections.forEach((wbSelection) => wbSelection.clear());\n  }\n  getCurrentSelections() {\n    return this._getCurrentSelections();\n  }\n  getCurrentLastSelection() {\n    const selectionData = this._getCurrentSelections();\n    return selectionData == null ? void 0 : selectionData[selectionData.length - 1];\n  }\n  addSelections(unitIdOrSelections, worksheetId, selectionDatas) {\n    if (typeof unitIdOrSelections == \"string\") {\n      this._ensureWorkbookSelection(unitIdOrSelections).addSelections(worksheetId, selectionDatas);\n      return;\n    }\n    const current = this._currentSelectionPos;\n    if (!current)\n      throw new Error(\"[SheetsSelectionsService]: cannot find current selection position!\");\n    const { unitId, sheetId } = current;\n    this._ensureWorkbookSelection(unitId).addSelections(sheetId, unitIdOrSelections);\n  }\n  /**\n   * Set selection data to WorkbookSelections.\n   * If type is not specified, this method would clear all existing selections.\n   * @param unitIdOrSelections\n   * @param worksheetIdOrType\n   * @param selectionDatas\n   * @param type\n   */\n  setSelections(unitIdOrSelections, worksheetIdOrType, selectionDatas, type) {\n    if (typeof unitIdOrSelections == \"string\") {\n      this._ensureWorkbookSelection(unitIdOrSelections).setSelections(\n        worksheetIdOrType,\n        selectionDatas,\n        type != null ? type : 2\n        /* MOVE_END */\n      );\n      return;\n    }\n    const current = this._currentSelectionPos;\n    if (!current)\n      throw new Error(\"[SheetsSelectionsService]: cannot find current selection position!\");\n    const { unitId, sheetId } = current;\n    this._ensureWorkbookSelection(unitId).setSelections(\n      sheetId,\n      unitIdOrSelections != null ? unitIdOrSelections : selectionDatas,\n      worksheetIdOrType != null ? worksheetIdOrType : 2\n      /* MOVE_END */\n    );\n  }\n  clearCurrentSelections() {\n    this._getCurrentSelections().splice(0);\n  }\n  /**\n   * Determine whether multiple current selections overlap\n   *\n   * @deprecated this should be extracted to an pure function\n   */\n  isOverlapping() {\n    const selectionDataList = this.getCurrentSelections();\n    return selectionDataList == null ? !1 : selectionDataList.some(\n      ({ range }, index) => selectionDataList.some(({ range: range2 }, index2) => index === index2 ? !1 : range.startRow <= range2.endRow && range.endRow >= range2.startRow && range.startColumn <= range2.endColumn && range.endColumn >= range2.startColumn)\n    );\n  }\n  _getCurrentSelections() {\n    const current = this._currentSelectionPos;\n    if (!current)\n      return [];\n    const { unitId, sheetId } = current;\n    return this._ensureWorkbookSelection(unitId).getSelectionOfWorksheet(sheetId);\n  }\n  getWorkbookSelections(unitId) {\n    return this._ensureWorkbookSelection(unitId);\n  }\n  _ensureWorkbookSelection(unitId) {\n    let wbSelection = this._workbookSelections.get(unitId);\n    if (!wbSelection) {\n      const workbook = this._instanceSrv.getUnit(unitId);\n      if (!workbook)\n        throw new Error(`[SheetsSelectionsService]: cannot resolve unit with id \"${unitId}\"!`);\n      wbSelection = new WorkbookSelections(workbook), this._workbookSelections.set(unitId, wbSelection);\n    }\n    return wbSelection;\n  }\n  _removeWorkbookSelection(unitId) {\n    this._workbookSelections.delete(unitId);\n  }\n}, __name(_a, \"SheetsSelectionsService\"), _a);\nSheetsSelectionsService = __decorateClass$i([\n  __decorateParam$f(0, IUniverInstanceService)\n], SheetsSelectionsService);\nconst _WorkbookSelections = class _WorkbookSelections extends Disposable {\n  constructor(_workbook) {\n    super();\n    __publicField(this, \"_selectionMoveStart$\", new Subject());\n    __publicField(this, \"selectionMoveStart$\", this._selectionMoveStart$.asObservable());\n    __publicField(this, \"_selectionMoving$\", new Subject());\n    __publicField(this, \"selectionMoving$\", this._selectionMoving$.asObservable());\n    __publicField(this, \"_selectionMoveEnd$\", new BehaviorSubject([]));\n    __publicField(this, \"selectionMoveEnd$\", this._selectionMoveEnd$.asObservable());\n    __publicField(this, \"_beforeSelectionMoveEnd$\", new BehaviorSubject([]));\n    __publicField(this, \"beforeSelectionMoveEnd$\", this._beforeSelectionMoveEnd$.asObservable());\n    __publicField(this, \"_worksheetSelections\", /* @__PURE__ */ new Map());\n    this._workbook = _workbook;\n  }\n  dispose() {\n    super.dispose(), this._beforeSelectionMoveEnd$.complete(), this._selectionMoveEnd$.complete(), this._selectionMoving$.complete(), this._selectionMoveStart$.complete();\n  }\n  /** Clear all selections in this workbook. */\n  clear() {\n    this._worksheetSelections.clear(), this._emitOnEnd([]);\n  }\n  addSelections(sheetId, selectionDatas) {\n    const selections = this._ensureSheetSelection(sheetId);\n    selections.push(...selectionDatas), this._emitOnEnd(selections);\n  }\n  /**\n   * Set selectionDatas to _worksheetSelections, and emit selectionDatas by type.\n   * If type is not specfied, this method would clear all existing selections.\n   * @param sheetId\n   * @param selectionDatas\n   * @param type\n   */\n  setSelections(sheetId, selectionDatas = [], type) {\n    switch (this._ensureSheetSelection(sheetId).length = 0, this._ensureSheetSelection(sheetId).push(...selectionDatas), type) {\n      case 0:\n        this._selectionMoveStart$.next(selectionDatas);\n        break;\n      case 1:\n        this._selectionMoving$.next(selectionDatas);\n        break;\n      case 2:\n        this._emitOnEnd(selectionDatas);\n        break;\n      default:\n        this._emitOnEnd(selectionDatas);\n        break;\n    }\n  }\n  getCurrentSelections() {\n    return this._getCurrentSelections();\n  }\n  getSelectionOfWorksheet(sheetId) {\n    return this._worksheetSelections.has(sheetId) ? this._worksheetSelections.get(sheetId) : [];\n  }\n  _getCurrentSelections() {\n    return this.getSelectionOfWorksheet(this._workbook.getActiveSheet().getSheetId());\n  }\n  getCurrentLastSelection() {\n    const selectionData = this._getCurrentSelections();\n    return selectionData[selectionData.length - 1];\n  }\n  /**\n   * Same as _getCurrentSelections(which return this._worksheetSelections), but this method would set [] if no selection.\n   * @param sheetId\n   * @returns this._worksheetSelections\n   */\n  _ensureSheetSelection(sheetId) {\n    let worksheetSelection = this._worksheetSelections.get(sheetId);\n    return worksheetSelection || (worksheetSelection = [], this._worksheetSelections.set(sheetId, worksheetSelection)), worksheetSelection;\n  }\n  _emitOnEnd(selections) {\n    this._beforeSelectionMoveEnd$.next(selections), this._selectionMoveEnd$.next(selections);\n  }\n};\n__name(_WorkbookSelections, \"WorkbookSelections\");\nlet WorkbookSelections = _WorkbookSelections;\nconst DISABLE_NORMAL_SELECTIONS = \"DISABLE_NORMAL_SELECTIONS\", CELL_CONTENT = createInterceptorKey(\"CELL_CONTENT\"), ROW_FILTERED = createInterceptorKey(\"ROW_FILTERED\"), INTERCEPTOR_POINT = {\n  CELL_CONTENT,\n  ROW_FILTERED\n};\nvar InterceptCellContentPriority = /* @__PURE__ */ ((InterceptCellContentPriority2) => (InterceptCellContentPriority2[InterceptCellContentPriority2.DATA_VALIDATION = 9] = \"DATA_VALIDATION\", InterceptCellContentPriority2[InterceptCellContentPriority2.NUMFMT = 10] = \"NUMFMT\", InterceptCellContentPriority2))(InterceptCellContentPriority || {}), __defProp$h = Object.defineProperty, __getOwnPropDesc$h = Object.getOwnPropertyDescriptor, __decorateClass$h = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$h(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$h(target, key, result), result;\n}, \"__decorateClass$h\"), __decorateParam$e = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$e\"), _a2;\nlet SheetInterceptorService = (_a2 = class extends Disposable {\n  /** @ignore */\n  constructor(_univerInstanceService) {\n    super();\n    __publicField(this, \"_interceptorsByName\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_commandInterceptors\", []);\n    __publicField(this, \"_rangeInterceptors\", []);\n    __publicField(this, \"_beforeCommandInterceptor\", []);\n    __publicField(this, \"_workbookDisposables\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_worksheetDisposables\", /* @__PURE__ */ new Map());\n    this._univerInstanceService = _univerInstanceService, this.disposeWithMe(this._univerInstanceService.getTypeOfUnitAdded$(UniverInstanceType.UNIVER_SHEET).subscribe((workbook) => {\n      this._interceptWorkbook(workbook);\n    })), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitDisposed$(UniverInstanceType.UNIVER_SHEET).subscribe(\n      (workbook) => this._disposeWorkbookInterceptor(workbook)\n    )), this.intercept(INTERCEPTOR_POINT.CELL_CONTENT, {\n      priority: -1,\n      handler(value, context) {\n        const rawData = context.worksheet.getCellRaw(context.row, context.col);\n        return value ? { ...rawData, ...value } : rawData;\n      }\n    });\n  }\n  dispose() {\n    super.dispose(), this._workbookDisposables.forEach((disposable) => disposable.dispose()), this._workbookDisposables.clear(), this._worksheetDisposables.clear();\n  }\n  interceptCommand(interceptor) {\n    if (this._commandInterceptors.includes(interceptor))\n      throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n    return this._commandInterceptors.push(interceptor), this._commandInterceptors.sort((a, b) => {\n      var _a20, _b;\n      return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n    }), this.disposeWithMe(toDisposable(() => remove(this._commandInterceptors, interceptor)));\n  }\n  // Add a listener function to the command, which will be run before the command is run to get whether it can be executed the command\n  interceptBeforeCommand(interceptor) {\n    if (this._beforeCommandInterceptor.includes(interceptor))\n      throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n    return this._beforeCommandInterceptor.push(interceptor), this._beforeCommandInterceptor.sort((a, b) => {\n      var _a20, _b;\n      return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n    }), this.disposeWithMe(toDisposable(() => remove(this._beforeCommandInterceptor, interceptor)));\n  }\n  /**\n   * before command execute, call this method to get the flag of whether it can be executed the command，\n   * @param info ICommandInfo\n   * @returns Promise<boolean>\n   */\n  async beforeCommandExecute(info) {\n    return (await Promise.all(this._beforeCommandInterceptor.map((i) => i.performCheck(info)))).every((perform) => perform);\n  }\n  /**\n   * By adding callbacks to some Ranges can get some additional mutations, such as clearing all plugin data in a certain area.\n   * @param interceptor IRangeInterceptors\n   * @returns IDisposable\n   */\n  interceptRanges(interceptor) {\n    if (this._rangeInterceptors.includes(interceptor))\n      throw new Error(\"[SheetInterceptorService]: Interceptor already exists!\");\n    return this._rangeInterceptors.push(interceptor), this._rangeInterceptors.sort((a, b) => {\n      var _a20, _b;\n      return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n    }), this.disposeWithMe(toDisposable(() => remove(this._rangeInterceptors, interceptor)));\n  }\n  /**\n   * When command is executing, call this method to gether undo redo mutations from upper features.\n   * @param command\n   * @returns\n   */\n  onCommandExecute(info) {\n    const infos = this._commandInterceptors.map((i) => i.getMutations(info));\n    return {\n      preUndos: infos.map((i) => {\n        var _a20;\n        return (_a20 = i.preUndos) != null ? _a20 : [];\n      }).flat(),\n      undos: infos.map((i) => i.undos).flat(),\n      preRedos: infos.map((i) => {\n        var _a20;\n        return (_a20 = i.preRedos) != null ? _a20 : [];\n      }).flat(),\n      redos: infos.map((i) => i.redos).flat()\n    };\n  }\n  generateMutationsByRanges(info) {\n    const infos = this._rangeInterceptors.map((i) => i.getMutations(info));\n    return {\n      preUndos: infos.map((i) => {\n        var _a20;\n        return (_a20 = i.preUndos) != null ? _a20 : [];\n      }).flat(),\n      undos: infos.map((i) => i.undos).flat(),\n      preRedos: infos.map((i) => {\n        var _a20;\n        return (_a20 = i.preRedos) != null ? _a20 : [];\n      }).flat(),\n      redos: infos.map((i) => i.redos).flat()\n    };\n  }\n  intercept(name, interceptor) {\n    const key = name;\n    this._interceptorsByName.has(key) || this._interceptorsByName.set(key, []);\n    const interceptors = this._interceptorsByName.get(key);\n    return interceptors.push(interceptor), this._interceptorsByName.set(\n      key,\n      interceptors.sort((a, b) => {\n        var _a20, _b;\n        return ((_a20 = b.priority) != null ? _a20 : 0) - ((_b = a.priority) != null ? _b : 0);\n      })\n    ), this.disposeWithMe(toDisposable(() => remove(this._interceptorsByName.get(key), interceptor)));\n  }\n  fetchThroughInterceptors(name) {\n    const key = name, interceptors = this._interceptorsByName.get(key);\n    return composeInterceptors(interceptors || []);\n  }\n  _interceptWorkbook(workbook) {\n    const disposables = new DisposableCollection(), unitId = workbook.getUnitId(), sheetInterceptorService = this, interceptViewModel = /* @__PURE__ */ __name((worksheet) => {\n      const subUnitId = worksheet.getSheetId();\n      worksheet.__interceptViewModel((viewModel) => {\n        const sheetDisposables = new DisposableCollection();\n        sheetInterceptorService._worksheetDisposables.set(getWorksheetDisposableID(unitId, worksheet), sheetDisposables), sheetDisposables.add(viewModel.registerCellContentInterceptor({\n          getCell(row, col) {\n            return sheetInterceptorService.fetchThroughInterceptors(INTERCEPTOR_POINT.CELL_CONTENT)(\n              worksheet.getCellRaw(row, col),\n              {\n                unitId,\n                subUnitId,\n                row,\n                col,\n                worksheet,\n                workbook\n              }\n            );\n          }\n        })), sheetDisposables.add(viewModel.registerRowFilteredInterceptor({\n          getRowFiltered(row) {\n            return !!sheetInterceptorService.fetchThroughInterceptors(INTERCEPTOR_POINT.ROW_FILTERED)(\n              !1,\n              {\n                unitId,\n                subUnitId,\n                row,\n                workbook,\n                worksheet\n              }\n            );\n          }\n        }));\n      });\n    }, \"interceptViewModel\");\n    workbook.getSheets().forEach((worksheet) => interceptViewModel(worksheet)), disposables.add(workbook.sheetCreated$.subscribe((worksheet) => interceptViewModel(worksheet))), disposables.add(toDisposable(() => workbook.getSheets().forEach((worksheet) => this._disposeSheetInterceptor(unitId, worksheet)))), disposables.add(workbook.sheetDisposed$.subscribe((worksheet) => this._disposeSheetInterceptor(unitId, worksheet))), this._workbookDisposables.set(unitId, disposables);\n  }\n  _disposeWorkbookInterceptor(workbook) {\n    const unitId = workbook.getUnitId(), disposable = this._workbookDisposables.get(unitId);\n    disposable && (disposable.dispose(), this._workbookDisposables.delete(unitId));\n  }\n  _disposeSheetInterceptor(unitId, worksheet) {\n    const disposableId = getWorksheetDisposableID(unitId, worksheet), disposable = this._worksheetDisposables.get(disposableId);\n    disposable && (disposable.dispose(), this._worksheetDisposables.delete(disposableId));\n  }\n}, __name(_a2, \"SheetInterceptorService\"), _a2);\nSheetInterceptorService = __decorateClass$h([\n  __decorateParam$e(0, IUniverInstanceService)\n], SheetInterceptorService);\nfunction getWorksheetDisposableID(unitId, worksheet) {\n  return `${unitId}|${worksheet.getSheetId()}`;\n}\n__name(getWorksheetDisposableID, \"getWorksheetDisposableID\");\nfunction handleStyle(styles, oldVal, newVal) {\n  var _a20;\n  const oldStyle = styles.getStyleByCell(oldVal);\n  oldStyle == null && delete oldVal.s, typeof newVal.s == \"string\" && (newVal.s = styles.get(newVal.s));\n  const merge2 = mergeStyle(oldStyle, newVal.s ? newVal.s : null);\n  merge2 && Tools.removeNull(merge2), Tools.isEmptyObject(merge2) ? delete oldVal.s : oldVal.s = styles.setValue(merge2);\n  const newValueStream = newVal.v ? `${newVal.v}\\r\n` : \"\";\n  !newVal.p && oldVal.p && (newValueStream && newValueStream !== ((_a20 = oldVal.p.body) == null ? void 0 : _a20.dataStream) ? delete oldVal.p : mergeRichTextStyle(oldVal.p, newVal.s ? newVal.s : null));\n}\n__name(handleStyle, \"handleStyle\");\nfunction transformStyle(oldStyle, newStyle) {\n  if (!newStyle || !Object.keys(newStyle).length)\n    return oldStyle;\n  const backupStyle = oldStyle || {};\n  for (const k in newStyle)\n    k === \"bd\" ? backupStyle[k] = transformBorders(backupStyle[k] || {}, newStyle[k]) : k in backupStyle || (backupStyle[k] = null);\n  return backupStyle;\n}\n__name(transformStyle, \"transformStyle\");\nfunction transformBorders(oldBorders, newBorders) {\n  if (!newBorders || !Object.keys(newBorders).length)\n    return oldBorders;\n  for (const k in newBorders)\n    k in oldBorders || (oldBorders[k] = null);\n  return oldBorders;\n}\n__name(transformBorders, \"transformBorders\");\nfunction mergeStyle(oldStyle, newStyle, isRichText = !1) {\n  if (newStyle === null) return newStyle;\n  if (newStyle === void 0) return oldStyle;\n  const backupStyle = Tools.deepClone(oldStyle) || {};\n  for (const k in newStyle)\n    isRichText && [\"bd\", \"tr\", \"td\", \"ht\", \"vt\", \"tb\", \"pd\", \"bg\"].includes(k) || (k in backupStyle && k === \"bd\" ? backupStyle[k] = Object.assign(backupStyle[k], newStyle[k]) : backupStyle[k] = newStyle[k]);\n  return \"cl\" in backupStyle && (\"ul\" in backupStyle && backupStyle.ul && (backupStyle.ul.cl = backupStyle.cl), \"ol\" in backupStyle && backupStyle.ol && (backupStyle.ol.cl = backupStyle.cl), \"st\" in backupStyle && backupStyle.st && (backupStyle.st.cl = backupStyle.cl)), backupStyle;\n}\n__name(mergeStyle, \"mergeStyle\");\nfunction skipParagraphs(paragraphs, offset) {\n  return paragraphs.some((p) => p.startIndex === offset) ? skipParagraphs(paragraphs, offset + 1) : offset;\n}\n__name(skipParagraphs, \"skipParagraphs\");\nfunction mergeRichTextStyle(p, newStyle) {\n  var _a20;\n  if (p.body == null)\n    return;\n  Array.isArray(p.body.textRuns) || (p.body.textRuns = []);\n  let index = 0;\n  const newTextRuns = [], paragraphs = ((_a20 = p.body) == null ? void 0 : _a20.paragraphs) || [];\n  for (const textRun of p.body.textRuns) {\n    const { st, ed, ts = {} } = textRun;\n    if (index < st) {\n      const tr = {\n        st: index,\n        ed: st\n      }, merge22 = mergeStyle({}, newStyle, !0);\n      merge22 && Tools.removeNull(merge22), Tools.isEmptyObject(merge22) || (tr.ts = merge22), newTextRuns.push(tr);\n    }\n    const merge2 = mergeStyle(ts, newStyle, !0);\n    merge2 && Tools.removeNull(merge2), Tools.isEmptyObject(merge2) ? delete textRun.ts : textRun.ts = merge2, newTextRuns.push(textRun), index = skipParagraphs(paragraphs, ed);\n  }\n  const endIndex = p.body.dataStream.endsWith(`\\r\n`) ? p.body.dataStream.length - 2 : p.body.dataStream.length;\n  if (index < endIndex) {\n    const tr = {\n      st: index,\n      ed: endIndex\n    }, merge2 = mergeStyle({}, newStyle, !0);\n    merge2 && Tools.removeNull(merge2), Tools.isEmptyObject(merge2) || (tr.ts = merge2), newTextRuns.push(tr);\n  }\n  p.body.textRuns = normalizeTextRuns(newTextRuns);\n}\n__name(mergeRichTextStyle, \"mergeRichTextStyle\");\nfunction getCellType(styles, newVal, oldVal) {\n  if (newVal.t) return newVal.t;\n  if (newVal.v === null) return null;\n  const newStyle = styles.getStyleByCell(newVal), oldStyle = styles.getStyleByCell(oldVal);\n  if (oldVal.t === CellValueType.FORCE_STRING) {\n    if (!isTextFormat(oldStyle) && newVal.v !== void 0) {\n      if (isRealNum(newVal.v))\n        return CellValueType.NUMBER;\n      if (isBooleanString(`${newVal.v}`))\n        return CellValueType.BOOLEAN;\n    }\n    return CellValueType.FORCE_STRING;\n  }\n  return hasNumberFormat(newStyle) ? isTextFormat(newStyle) ? CellValueType.STRING : checkCellValueTypeByValue(newVal, oldVal) : isTextFormat(oldStyle) ? CellValueType.STRING : checkCellValueTypeByValue(newVal, oldVal);\n}\n__name(getCellType, \"getCellType\");\nfunction checkCellValueTypeByValue(newVal, oldVal) {\n  return newVal.v !== void 0 ? checkCellValueType(newVal.v, newVal.t) : checkCellValueType(oldVal.v, oldVal.t);\n}\n__name(checkCellValueTypeByValue, \"checkCellValueTypeByValue\");\nfunction hasNumberFormat(style) {\n  var _a20;\n  return !!((_a20 = style == null ? void 0 : style.n) != null && _a20.pattern);\n}\n__name(hasNumberFormat, \"hasNumberFormat\");\nfunction isTextFormat(style) {\n  var _a20;\n  return ((_a20 = style == null ? void 0 : style.n) == null ? void 0 : _a20.pattern) === DEFAULT_TEXT_FORMAT;\n}\n__name(isTextFormat, \"isTextFormat\");\nfunction checkCellValueType(v, type) {\n  return v === null ? null : typeof v == \"string\" ? isRealNum(v) ? (+v == 0 || +v == 1) && type === CellValueType.BOOLEAN ? CellValueType.BOOLEAN : CellValueType.NUMBER : isBooleanString(v) ? CellValueType.BOOLEAN : CellValueType.STRING : typeof v == \"number\" ? (v === 0 || v === 1) && type === CellValueType.BOOLEAN ? CellValueType.BOOLEAN : CellValueType.NUMBER : typeof v == \"boolean\" ? CellValueType.BOOLEAN : CellValueType.FORCE_STRING;\n}\n__name(checkCellValueType, \"checkCellValueType\");\nfunction getCellTypeByPattern(cell, pattern) {\n  return cell.t === CellValueType.FORCE_STRING ? CellValueType.FORCE_STRING : pattern === DEFAULT_TEXT_FORMAT ? CellValueType.STRING : checkCellValueType(cell.v, cell.t);\n}\n__name(getCellTypeByPattern, \"getCellTypeByPattern\");\nfunction getCellValue(type, cell) {\n  return type === CellValueType.NUMBER ? Number(cell.v) : type === CellValueType.BOOLEAN ? extractBooleanValue(cell.v) ? 1 : 0 : type === CellValueType.STRING || type === CellValueType.FORCE_STRING ? `${cell.v}` : cell.v;\n}\n__name(getCellValue, \"getCellValue\");\nfunction extractBooleanValue(value) {\n  if (typeof value == \"string\") {\n    if (value.toUpperCase() === \"TRUE\")\n      return !0;\n    if (value.toUpperCase() === \"FALSE\")\n      return !1;\n    if (isSafeNumeric(value)) {\n      if (Number(value) === 0)\n        return !1;\n      if (Number(value) === 1)\n        return !0;\n    }\n  }\n  if (typeof value == \"number\") {\n    if (value === 0)\n      return !1;\n    if (value === 1)\n      return !0;\n  }\n  return typeof value == \"boolean\" ? value : null;\n}\n__name(extractBooleanValue, \"extractBooleanValue\");\nfunction setNull(value) {\n  return value == null ? null : (value.f === void 0 && (value.f = null), value.si === void 0 && (value.si = null), value.p === void 0 && (value.p = null), value.v === void 0 && (value.v = null), value.t === void 0 && (value.t = null), value.s === void 0 && (value.s = null), value.custom === void 0 && (value.custom = null), value);\n}\n__name(setNull, \"setNull\");\nconst SetRangeValuesUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const { unitId, subUnitId, cellValue } = params, workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(unitId);\n  if (workbook == null)\n    throw new Error(\"workbook is null error!\");\n  const worksheet = workbook.getSheetBySheetId(subUnitId);\n  if (worksheet == null)\n    throw new Error(\"worksheet is null error!\");\n  const cellMatrix = worksheet.getCellMatrix(), styles = workbook.getStyles(), undoData = new ObjectMatrix();\n  return new ObjectMatrix(cellValue).forValue((row, col, newVal) => {\n    const cell = Tools.deepClone(cellMatrix == null ? void 0 : cellMatrix.getValue(row, col)) || {}, oldStyle = styles.getStyleByCell(cell), newStyle = styles.getStyleByCell(newVal);\n    cell.s = transformStyle(oldStyle, newStyle), undoData.setValue(row, col, setNull(cell));\n  }), {\n    ...params,\n    options: {},\n    cellValue: undoData.getMatrix()\n  };\n}, \"SetRangeValuesUndoMutationFactory\"), SetRangeValuesMutation = {\n  id: \"sheet.mutation.set-range-values\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { cellValue, subUnitId, unitId } = params, workbook = accessor.get(IUniverInstanceService).getUnit(unitId);\n    if (!workbook)\n      return !1;\n    const worksheet = workbook.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      return !1;\n    const cellMatrix = worksheet.getCellMatrix(), styles = workbook.getStyles();\n    return new ObjectMatrix(cellValue).forValue((row, col, newVal) => {\n      if (!newVal)\n        cellMatrix == null || cellMatrix.setValue(row, col, {});\n      else {\n        const oldVal = cellMatrix.getValue(row, col) || {}, type = getCellType(styles, newVal, oldVal);\n        newVal.f !== void 0 && (oldVal.f = newVal.f), newVal.si !== void 0 && (oldVal.si = newVal.si), newVal.p !== void 0 && (oldVal.p = newVal.p), newVal.v !== void 0 && (oldVal.v = getCellValue(type, newVal)), oldVal.v !== void 0 && (oldVal.t = type, oldVal.v = getCellValue(type, oldVal)), newVal.s !== void 0 && handleStyle(styles, oldVal, newVal), newVal.custom !== void 0 && (oldVal.custom = newVal.custom), cellMatrix.setValue(row, col, Tools.removeNull(oldVal));\n      }\n    }), !0;\n  }, \"handler\")\n}, groupByKey = /* @__PURE__ */ __name((arr, key, blankKey = \"\") => arr.reduce(\n  (result, current) => {\n    const value = current && current[key];\n    return typeof value != \"string\" ? (console.warn(current, `${key} is not string`), result) : (value ? (result[value] || (result[value] = []), result[value].push(current)) : result[blankKey].push(current), result);\n  },\n  {}\n), \"groupByKey\"), createUniqueKey = /* @__PURE__ */ __name((initValue = 0) => {\n  let _initValue = initValue;\n  return /* @__PURE__ */ __name(function() {\n    return _initValue++;\n  }, \"getKey\");\n}, \"createUniqueKey\");\nfunction generateNullCell(range) {\n  const cellValue = new ObjectMatrix();\n  return range.forEach((range2) => {\n    const { startRow, startColumn, endRow, endColumn } = range2;\n    for (let i = startRow; i <= endRow; i++)\n      for (let j = startColumn; j <= endColumn; j++)\n        cellValue.setValue(i, j, null);\n  }), cellValue.clone();\n}\n__name(generateNullCell, \"generateNullCell\");\nfunction generateNullCellValue(range) {\n  const cellValue = new ObjectMatrix();\n  return range.forEach((range2) => {\n    const { startRow, startColumn, endRow, endColumn } = range2;\n    for (let i = startRow; i <= endRow; i++)\n      for (let j = startColumn; j <= endColumn; j++)\n        cellValue.setValue(i, j, {\n          v: null,\n          p: null,\n          f: null,\n          si: null,\n          custom: null\n        });\n  }), cellValue.clone();\n}\n__name(generateNullCellValue, \"generateNullCellValue\");\nfunction generateNullCellStyle(ranges) {\n  const cellValue = new ObjectMatrix();\n  return ranges.forEach((range) => {\n    const { startRow, startColumn, endRow, endColumn } = range;\n    for (let i = startRow; i <= endRow; i++)\n      for (let j = startColumn; j <= endColumn; j++)\n        cellValue.setValue(i, j, {\n          s: null\n        });\n  }), cellValue.clone();\n}\n__name(generateNullCellStyle, \"generateNullCellStyle\");\nconst ClearSelectionAllCommand = {\n  id: \"sheet.command.clear-selection-all\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const univerInstanceService = accessor.get(IUniverInstanceService), commandService = accessor.get(ICommandService), selectionManagerService = accessor.get(SheetsSelectionsService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n    if (!worksheet) return !1;\n    const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const sequenceExecuteList = [], sequenceExecuteUndoList = [], clearMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: generateNullCell(selections)\n    }, undoClearMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      clearMutationParams\n    );\n    sequenceExecuteList.push({\n      id: SetRangeValuesMutation.id,\n      params: clearMutationParams\n    }), sequenceExecuteUndoList.push({\n      id: SetRangeValuesMutation.id,\n      params: undoClearMutationParams\n    });\n    const intercepted = sheetInterceptorService.onCommandExecute({ id: ClearSelectionAllCommand.id });\n    return sequenceExecuteList.push(...intercepted.redos), sequenceExecuteUndoList.unshift(...intercepted.undos), sequenceExecute(sequenceExecuteList, commandService) ? (undoRedoService.pushUndoRedo({\n      // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n      // Hooks can be used to hook the code of external controllers to add new actions.\n      unitID: unitId,\n      undoMutations: sequenceExecuteUndoList,\n      redoMutations: sequenceExecuteList\n    }), !0) : !1;\n  }, \"handler\")\n}, ClearSelectionContentCommand = {\n  id: \"sheet.command.clear-selection-content\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const univerInstanceService = accessor.get(IUniverInstanceService), commandService = accessor.get(ICommandService), selectionManagerService = accessor.get(SheetsSelectionsService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n    if (!worksheet) return !1;\n    const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const clearMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: generateNullCellValue(selections)\n    }, undoClearMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      clearMutationParams\n    ), intercepted = sheetInterceptorService.onCommandExecute({ id: ClearSelectionContentCommand.id }), redos = [{ id: SetRangeValuesMutation.id, params: clearMutationParams }, ...intercepted.redos], undos = [...intercepted.undos, { id: SetRangeValuesMutation.id, params: undoClearMutationParams }];\n    return sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n      // Hooks can be used to hook the code of external controllers to add new actions.\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, ClearSelectionFormatCommand = {\n  id: \"sheet.command.clear-selection-format\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const univerInstanceService = accessor.get(IUniverInstanceService), commandService = accessor.get(ICommandService), selectionManagerService = accessor.get(SheetsSelectionsService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n    if (!worksheet) return !1;\n    const subUnitId = worksheet.getSheetId(), selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const sequenceExecuteList = [], sequenceExecuteUndoList = [], clearMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: generateNullCellStyle(selections)\n    }, undoClearMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      clearMutationParams\n    );\n    sequenceExecuteList.push({\n      id: SetRangeValuesMutation.id,\n      params: clearMutationParams\n    }), sequenceExecuteUndoList.push({\n      id: SetRangeValuesMutation.id,\n      params: undoClearMutationParams\n    });\n    const intercepted = sheetInterceptorService.onCommandExecute({ id: ClearSelectionFormatCommand.id });\n    return sequenceExecuteList.push(...intercepted.redos), sequenceExecuteUndoList.unshift(...intercepted.undos), sequenceExecute(sequenceExecuteList, commandService) ? (undoRedoService.pushUndoRedo({\n      // If there are multiple mutations that form an encapsulated project, they must be encapsulated in the same undo redo element.\n      // Hooks can be used to hook the code of external controllers to add new actions.\n      unitID: unitId,\n      undoMutations: sequenceExecuteUndoList,\n      redoMutations: sequenceExecuteList\n    }), !0) : !1;\n  }, \"handler\")\n}, InsertSheetUndoMutationFactory = /* @__PURE__ */ __name((_accessor, params) => ({\n  subUnitId: params.sheet.id,\n  unitId: params.unitId,\n  subUnitName: params.sheet.name\n}), \"InsertSheetUndoMutationFactory\"), InsertSheetMutation = {\n  id: \"sheet.mutation.insert-sheet\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const univerInstanceService = accessor.get(IUniverInstanceService), { sheet, index, unitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n    return workbook ? workbook.addWorksheet(sheet.id, index, sheet) : !1;\n  }, \"handler\")\n};\nfunction getSheetCommandTargetWorkbook(univerInstanceService, params) {\n  const { unitId } = params, workbook = unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n  return workbook ? {\n    workbook,\n    unitId: workbook.getUnitId()\n  } : null;\n}\n__name(getSheetCommandTargetWorkbook, \"getSheetCommandTargetWorkbook\");\nfunction getSheetCommandTarget(univerInstanceService, params = {}) {\n  const { unitId, subUnitId } = params, workbook = unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n  if (!workbook) return null;\n  const worksheet = subUnitId ? workbook.getSheetBySheetId(subUnitId) : workbook.getActiveSheet(!0);\n  return worksheet ? {\n    worksheet,\n    workbook,\n    unitId: workbook.getUnitId(),\n    subUnitId: worksheet.getSheetId()\n  } : null;\n}\n__name(getSheetCommandTarget, \"getSheetCommandTarget\");\nfunction getSheetMutationTarget(univerInstanceService, params) {\n  const { unitId, subUnitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n  if (!workbook) return null;\n  const worksheet = workbook.getSheetBySheetId(subUnitId);\n  return worksheet ? {\n    worksheet,\n    workbook\n  } : null;\n}\n__name(getSheetMutationTarget, \"getSheetMutationTarget\");\nconst RemoveSheetUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const univerInstanceService = accessor.get(IUniverInstanceService), { subUnitId, unitId } = params, target = getSheetMutationTarget(univerInstanceService, params);\n  if (!target)\n    throw new Error(\"[RemoveSheetUndoMutationFactory]: Worksheet is null error!\");\n  const { workbook, worksheet } = target, sheet = worksheet.getConfig();\n  return {\n    index: workbook.getConfig().sheetOrder.findIndex((id) => id === subUnitId),\n    sheet,\n    unitId\n  };\n}, \"RemoveSheetUndoMutationFactory\"), RemoveSheetMutation = {\n  id: \"sheet.mutation.remove-sheet\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const univerInstanceService = accessor.get(IUniverInstanceService), { subUnitId, unitId } = params, workbook = univerInstanceService.getUniverSheetInstance(unitId);\n    return workbook ? workbook.removeSheet(subUnitId) : !1;\n  }, \"handler\")\n}, CopySheetCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.copy-sheet\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), localeService = accessor.get(LocaleService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target)\n      return !1;\n    const { workbook, worksheet, unitId } = target, config = Tools.deepClone(worksheet.getConfig());\n    config.name = getCopyUniqueSheetName(workbook, localeService, config.name), config.id = Tools.generateRandomId();\n    const insertSheetMutationParams = {\n      index: workbook.getSheetIndex(worksheet) + 1,\n      sheet: config,\n      unitId\n    }, removeSheetMutationParams = InsertSheetUndoMutationFactory(\n      accessor,\n      insertSheetMutationParams\n    );\n    return commandService.syncExecuteCommand(InsertSheetMutation.id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: RemoveSheetMutation.id, params: removeSheetMutationParams }],\n      redoMutations: [{ id: InsertSheetMutation.id, params: insertSheetMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction getCopyUniqueSheetName(workbook, localeService, name) {\n  let output = name + localeService.t(\"sheets.tabs.sheetCopy\", \"\"), count = 2;\n  for (; workbook.checkSheetName(output); )\n    output = name + localeService.t(\"sheets.tabs.sheetCopy\", `${count}`), count++;\n  return output;\n}\n__name(getCopyUniqueSheetName, \"getCopyUniqueSheetName\");\nconst MoveRangeMutation = {\n  id: \"sheet.mutation.move-range\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { from, to } = params;\n    if (!from || !to)\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook)\n      return !1;\n    const fromWorksheet = workbook.getSheetBySheetId(params.from.subUnitId), toWorksheet = workbook.getSheetBySheetId(params.to.subUnitId);\n    if (!fromWorksheet || !toWorksheet)\n      return !1;\n    const fromCellMatrix = fromWorksheet.getCellMatrix(), toCellMatrix = toWorksheet.getCellMatrix();\n    return new ObjectMatrix(from.value).forValue((row, col, newVal) => {\n      fromCellMatrix.setValue(row, col, newVal);\n    }), new ObjectMatrix(to.value).forValue((row, col, newVal) => {\n      toCellMatrix.setValue(row, col, newVal);\n    }), !0;\n  }, \"handler\")\n};\nvar __defProp$g = Object.defineProperty, __getOwnPropDesc$g = Object.getOwnPropertyDescriptor, __decorateClass$g = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$g(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$g(target, key, result), result;\n}, \"__decorateClass$g\"), __decorateParam$d = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$d\");\nconst IRefSelectionsService = createIdentifier(\"sheets-formula.ref-selections.service\");\nvar _a3;\nlet RefSelectionsService = (_a3 = class extends SheetsSelectionsService {\n  constructor(_instanceSrv) {\n    super(_instanceSrv);\n  }\n  _init() {\n    const $ = this._getAliveWorkbooks$().pipe(takeUntil(this.dispose$));\n    this.selectionMoveStart$ = $.pipe(switchMap((ss) => merge(...ss.map((s) => s.selectionMoveStart$)))), this.selectionMoving$ = $.pipe(switchMap((ss) => merge(...ss.map((s) => s.selectionMoving$)))), this.selectionMoveEnd$ = $.pipe(switchMap((ss) => merge(...ss.map((s) => s.selectionMoveEnd$))));\n  }\n  _getAliveWorkbooks$() {\n    const aliveWorkbooks = this._instanceSrv.getAllUnitsForType(UniverInstanceType.UNIVER_SHEET);\n    aliveWorkbooks.forEach((workbook) => this._ensureWorkbookSelection(workbook.getUnitId()));\n    const workbooks$ = new BehaviorSubject(aliveWorkbooks);\n    return this.disposeWithMe(this._instanceSrv.getTypeOfUnitAdded$(UniverInstanceType.UNIVER_SHEET).subscribe((workbook) => {\n      this._ensureWorkbookSelection(workbook.getUnitId()), workbooks$.next([...workbooks$.getValue(), workbook]);\n    })), this.disposeWithMe(this._instanceSrv.getTypeOfUnitDisposed$(UniverInstanceType.UNIVER_SHEET).subscribe((workbook) => {\n      this._removeWorkbookSelection(workbook.getUnitId()), workbooks$.next(workbooks$.getValue().filter((unit) => unit !== workbook));\n    })), workbooks$.pipe(map((workbooks) => workbooks.map((w) => this._ensureWorkbookSelection(w.getUnitId()))));\n  }\n}, __name(_a3, \"RefSelectionsService\"), _a3);\nRefSelectionsService = __decorateClass$g([\n  __decorateParam$d(0, IUniverInstanceService)\n], RefSelectionsService);\nfunction getSelectionsService(accessor) {\n  const disabledNormalSelections = accessor.get(IContextService).getContextValue(DISABLE_NORMAL_SELECTIONS);\n  return accessor.get(disabledNormalSelections ? IRefSelectionsService : SheetsSelectionsService);\n}\n__name(getSelectionsService, \"getSelectionsService\");\nconst SetSelectionsOperation = {\n  id: \"sheet.operation.set-selections\",\n  type: CommandType.OPERATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    if (!params) return !1;\n    const { selections, type, unitId, subUnitId } = params;\n    return getSelectionsService(accessor).setSelections(unitId, subUnitId, [...selections], type), !0;\n  }, \"handler\")\n};\nfunction alignToMergedCellsBorders(startRange, worksheet, shouldRecursive = !0) {\n  const coveredMergedCells = worksheet.getMatrixWithMergedCells(...selectionToArray(startRange)), exceededMergedCells = [];\n  if (coveredMergedCells.forValue((row, col, value) => {\n    if (value.colSpan !== void 0 && value.rowSpan !== void 0) {\n      const mergedCellRange = {\n        startRow: row,\n        startColumn: col,\n        endRow: row + value.rowSpan - 1,\n        endColumn: col + value.colSpan - 1\n      };\n      Rectangle.contains(startRange, mergedCellRange) || exceededMergedCells.push(mergedCellRange);\n    }\n  }), exceededMergedCells.length === 0)\n    return startRange;\n  const union = Rectangle.union(startRange, ...exceededMergedCells);\n  return shouldRecursive ? alignToMergedCellsBorders(union, worksheet, shouldRecursive) : union;\n}\n__name(alignToMergedCellsBorders, \"alignToMergedCellsBorders\");\nfunction getCellAtRowCol(row, col, worksheet) {\n  let destRange = null;\n  return worksheet.getMatrixWithMergedCells(row, col, row, col).forValue((row2, col2, value) => (destRange = {\n    actualRow: row2,\n    actualColumn: col2,\n    startRow: row2,\n    startColumn: col2,\n    isMerged: value.rowSpan !== void 0 || value.colSpan !== void 0,\n    isMergedMainCell: value.rowSpan !== void 0 && value.colSpan !== void 0,\n    endRow: row2 + (value.rowSpan !== void 0 ? value.rowSpan - 1 : 0),\n    endColumn: col2 + (value.colSpan !== void 0 ? value.colSpan - 1 : 0),\n    rangeType: RANGE_TYPE.NORMAL\n  }, !1)), destRange || {\n    actualColumn: col,\n    actualRow: row,\n    startRow: row,\n    startColumn: col,\n    endRow: row,\n    endColumn: col,\n    isMerged: !1,\n    isMergedMainCell: !1,\n    rangeType: RANGE_TYPE.NORMAL\n  };\n}\n__name(getCellAtRowCol, \"getCellAtRowCol\");\nfunction setEndForRange(range, rowCount, columnCount) {\n  const { startRow, startColumn, endRow, endColumn } = range;\n  return Number.isNaN(startRow) && (range.startRow = 0), Number.isNaN(endRow) && (range.endRow = rowCount - 1), Number.isNaN(startColumn) && (range.startColumn = 0), Number.isNaN(endColumn) && (range.endColumn = columnCount - 1), range;\n}\n__name(setEndForRange, \"setEndForRange\");\nfunction getPrimaryForRange(range, worksheet) {\n  const startRow = Number.isNaN(range.startRow) ? 0 : range.startRow, startColumn = Number.isNaN(range.startColumn) ? 0 : range.startColumn, mergedRange = worksheet.getMergedCell(startRow, startColumn);\n  return mergedRange ? {\n    ...mergedRange,\n    actualRow: startRow,\n    actualColumn: startColumn,\n    rangeType: RANGE_TYPE.NORMAL,\n    isMerged: !0,\n    isMergedMainCell: !0\n  } : {\n    startRow,\n    startColumn,\n    endRow: range.startRow,\n    endColumn: range.startColumn,\n    actualRow: startRow,\n    actualColumn: startColumn,\n    rangeType: RANGE_TYPE.NORMAL,\n    isMerged: !1,\n    isMergedMainCell: !1\n  };\n}\n__name(getPrimaryForRange, \"getPrimaryForRange\");\nconst followSelectionOperation = /* @__PURE__ */ __name((range, workbook, worksheet) => ({\n  id: SetSelectionsOperation.id,\n  params: {\n    unitId: workbook.getUnitId(),\n    subUnitId: worksheet.getSheetId(),\n    selections: [{ range, primary: getPrimaryForRange(range, worksheet) }]\n  }\n}), \"followSelectionOperation\");\nfunction isSingleCellSelection(selection) {\n  if (!selection)\n    return !1;\n  const { range, primary } = selection;\n  return Rectangle.equals(range, primary);\n}\n__name(isSingleCellSelection, \"isSingleCellSelection\");\nfunction createRangeIteratorWithSkipFilteredRows(sheet) {\n  function forOperableEach(ranges, operator) {\n    function iterate(range) {\n      for (let r = range.startRow; r <= range.endRow; r++)\n        if (!sheet.getRowFiltered(r))\n          for (let c = range.startColumn; c <= range.endColumn; c++)\n            operator(r, c, range);\n    }\n    __name(iterate, \"iterate\"), iterate(ranges);\n  }\n  return __name(forOperableEach, \"forOperableEach\"), {\n    forOperableEach\n  };\n}\n__name(createRangeIteratorWithSkipFilteredRows, \"createRangeIteratorWithSkipFilteredRows\");\nfunction copyRangeStyles(worksheet, startRow, endRow, startColumn, endColumn, isRow, styleRowOrColumn) {\n  const cellValue = {};\n  for (let row = startRow; row <= endRow; row++)\n    for (let column = startColumn; column <= endColumn; column++) {\n      const cell = isRow ? worksheet.getCell(styleRowOrColumn, column) : worksheet.getCell(row, styleRowOrColumn);\n      !cell || !cell.s || (cellValue[row] || (cellValue[row] = {}), cellValue[row][column] = { s: cell.s });\n    }\n  return cellValue;\n}\n__name(copyRangeStyles, \"copyRangeStyles\");\nconst MoveRangeCommandId = \"sheet.command.move-range\", MoveRangeCommand = {\n  type: CommandType.COMMAND,\n  id: MoveRangeCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target || !await sheetInterceptorService.beforeCommandExecute({ id: MoveRangeCommand.id, params }))\n      return !1;\n    const { worksheet, subUnitId, unitId } = target, moveRangeMutations = getMoveRangeUndoRedoMutations(\n      accessor,\n      { unitId, subUnitId, range: params.fromRange },\n      { unitId, subUnitId, range: params.toRange }\n    );\n    if (moveRangeMutations === null)\n      return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n    const interceptorCommands = sheetInterceptorService.onCommandExecute({\n      id: MoveRangeCommand.id,\n      params: { ...params }\n    }), redos = [\n      ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n      ...moveRangeMutations.redos,\n      ...interceptorCommands.redos,\n      {\n        id: SetSelectionsOperation.id,\n        params: {\n          unitId,\n          subUnitId,\n          selections: [{ range: params.toRange, primary: getPrimaryForRange(params.toRange, worksheet) }]\n        }\n      }\n    ], undos = [\n      ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n      ...moveRangeMutations.undos,\n      ...interceptorCommands.undos,\n      {\n        id: SetSelectionsOperation.id,\n        params: {\n          unitId,\n          subUnitId,\n          selections: [{ range: params.fromRange, primary: getPrimaryForRange(params.fromRange, worksheet) }]\n        }\n      }\n    ];\n    return sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction getMoveRangeUndoRedoMutations(accessor, from, to, ignoreMerge = !1) {\n  const redos = [], undos = [], { range: fromRange, subUnitId: fromSubUnitId, unitId } = from, { range: toRange, subUnitId: toSubUnitId } = to, workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(unitId), toWorksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(toSubUnitId), fromWorksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(fromSubUnitId), toCellMatrix = toWorksheet == null ? void 0 : toWorksheet.getCellMatrix(), fromCellMatrix = fromWorksheet == null ? void 0 : fromWorksheet.getCellMatrix();\n  if (toWorksheet && fromWorksheet && toCellMatrix && fromCellMatrix) {\n    const alignedRangeWithToRange = alignToMergedCellsBorders(toRange, toWorksheet, !1);\n    if (!Rectangle.equals(toRange, alignedRangeWithToRange) && !ignoreMerge)\n      return null;\n    const fromCellValue = new ObjectMatrix(), newFromCellValue = new ObjectMatrix();\n    Range.foreach(fromRange, (row, col) => {\n      fromCellValue.setValue(row, col, Tools.deepClone(fromCellMatrix.getValue(row, col))), newFromCellValue.setValue(row, col, null);\n    });\n    const toCellValue = new ObjectMatrix(), newToCellValue = new ObjectMatrix();\n    Range.foreach(toRange, (row, col) => {\n      toCellValue.setValue(row, col, Tools.deepClone(toCellMatrix.getValue(row, col)));\n    }), Range.foreach(fromRange, (row, col) => {\n      const cellRange = cellToRange(row, col), relativeRange = Rectangle.getRelativeRange(cellRange, fromRange), range = Rectangle.getPositionRange(relativeRange, toRange);\n      newToCellValue.setValue(range.startRow, range.startColumn, Tools.deepClone(fromCellMatrix.getValue(row, col)));\n    });\n    const doMoveRangeMutation = {\n      fromRange: from.range,\n      toRange: to.range,\n      from: {\n        value: newFromCellValue.getMatrix(),\n        subUnitId: fromSubUnitId\n      },\n      to: {\n        value: newToCellValue.getMatrix(),\n        subUnitId: toSubUnitId\n      },\n      unitId\n    }, undoMoveRangeMutation = {\n      fromRange: to.range,\n      toRange: from.range,\n      from: {\n        value: fromCellValue.getMatrix(),\n        subUnitId: fromSubUnitId\n      },\n      to: {\n        value: toCellValue.getMatrix(),\n        subUnitId: toSubUnitId\n      },\n      unitId\n    };\n    redos.push({ id: MoveRangeMutation.id, params: doMoveRangeMutation }), undos.push({ id: MoveRangeMutation.id, params: undoMoveRangeMutation });\n  }\n  return {\n    redos,\n    undos\n  };\n}\n__name(getMoveRangeUndoRedoMutations, \"getMoveRangeUndoRedoMutations\");\nvar I = /* @__PURE__ */ ((E) => (E[E.UNIVER_UNKNOWN = 0] = \"UNIVER_UNKNOWN\", E[E.UNIVER_DOC = 1] = \"UNIVER_DOC\", E[E.UNIVER_SHEET = 2] = \"UNIVER_SHEET\", E[E.UNIVER_SLIDE = 3] = \"UNIVER_SLIDE\", E[E.UNIVER_PROJECT = 4] = \"UNIVER_PROJECT\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))(I || {}), P = /* @__PURE__ */ ((E) => (E[E.View = 0] = \"View\", E[E.Edit = 1] = \"Edit\", E[E.ManageCollaborator = 2] = \"ManageCollaborator\", E[E.Print = 3] = \"Print\", E[E.Duplicate = 4] = \"Duplicate\", E[E.Comment = 5] = \"Comment\", E[E.Copy = 6] = \"Copy\", E[E.Share = 7] = \"Share\", E[E.Export = 8] = \"Export\", E[E.MoveWorksheet = 9] = \"MoveWorksheet\", E[E.DeleteWorksheet = 10] = \"DeleteWorksheet\", E[E.HideWorksheet = 11] = \"HideWorksheet\", E[E.RenameWorksheet = 12] = \"RenameWorksheet\", E[E.CreateWorksheet = 13] = \"CreateWorksheet\", E[E.SetWorksheetStyle = 14] = \"SetWorksheetStyle\", E[E.EditWorksheetCell = 15] = \"EditWorksheetCell\", E[E.InsertHyperlink = 16] = \"InsertHyperlink\", E[E.Sort = 17] = \"Sort\", E[E.Filter = 18] = \"Filter\", E[E.PivotTable = 19] = \"PivotTable\", E[E.FloatImg = 20] = \"FloatImg\", E[E.History = 21] = \"History\", E[E.RwHgtClWdt = 22] = \"RwHgtClWdt\", E[E.ViemRwHgtClWdt = 23] = \"ViemRwHgtClWdt\", E[E.ViewFilter = 24] = \"ViewFilter\", E[E.MoveSheet = 25] = \"MoveSheet\", E[E.DeleteSheet = 26] = \"DeleteSheet\", E[E.HideSheet = 27] = \"HideSheet\", E[E.CopySheet = 28] = \"CopySheet\", E[E.RenameSheet = 29] = \"RenameSheet\", E[E.CreateSheet = 30] = \"CreateSheet\", E[E.SelectProtectedCells = 31] = \"SelectProtectedCells\", E[E.SelectUnProtectedCells = 32] = \"SelectUnProtectedCells\", E[E.SetCellStyle = 33] = \"SetCellStyle\", E[E.SetCellValue = 34] = \"SetCellValue\", E[E.SetRowStyle = 35] = \"SetRowStyle\", E[E.SetColumnStyle = 36] = \"SetColumnStyle\", E[E.InsertRow = 37] = \"InsertRow\", E[E.InsertColumn = 38] = \"InsertColumn\", E[E.DeleteRow = 39] = \"DeleteRow\", E[E.DeleteColumn = 40] = \"DeleteColumn\", E[E.EditExtraObject = 41] = \"EditExtraObject\", E[E.Delete = 42] = \"Delete\", E[E.RecoverHistory = 43] = \"RecoverHistory\", E[E.ViewHistory = 44] = \"ViewHistory\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))(P || {}), M = /* @__PURE__ */ ((E) => (E[E.Unkonwn = 0] = \"Unkonwn\", E[E.Workbook = 1] = \"Workbook\", E[E.Worksheet = 2] = \"Worksheet\", E[E.SelectRange = 3] = \"SelectRange\", E[E.Document = 4] = \"Document\", E[E.Slide = 5] = \"Slide\", E[E.UNRECOGNIZED = -1] = \"UNRECOGNIZED\", E))(M || {});\nconst _WorksheetCopyPermission = class _WorksheetCopyPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.Copy);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.Copy}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetCopyPermission, \"WorksheetCopyPermission\");\nlet WorksheetCopyPermission = _WorksheetCopyPermission;\nconst _WorksheetSelectProtectedCellsPermission = class _WorksheetSelectProtectedCellsPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SelectProtectedCells);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SelectProtectedCells}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSelectProtectedCellsPermission, \"WorksheetSelectProtectedCellsPermission\");\nlet WorksheetSelectProtectedCellsPermission = _WorksheetSelectProtectedCellsPermission;\nconst _WorksheetSelectUnProtectedCellsPermission = class _WorksheetSelectUnProtectedCellsPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SelectUnProtectedCells);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SelectUnProtectedCells}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSelectUnProtectedCellsPermission, \"WorksheetSelectUnProtectedCellsPermission\");\nlet WorksheetSelectUnProtectedCellsPermission = _WorksheetSelectUnProtectedCellsPermission;\nconst _WorksheetSetCellStylePermission = class _WorksheetSetCellStylePermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SetCellStyle);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SetCellStyle}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSetCellStylePermission, \"WorksheetSetCellStylePermission\");\nlet WorksheetSetCellStylePermission = _WorksheetSetCellStylePermission;\nconst _WorksheetSetCellValuePermission = class _WorksheetSetCellValuePermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SetCellValue);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SetCellValue}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSetCellValuePermission, \"WorksheetSetCellValuePermission\");\nlet WorksheetSetCellValuePermission = _WorksheetSetCellValuePermission;\nconst _WorksheetViewPermission = class _WorksheetViewPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.View);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.View}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetViewPermission, \"WorksheetViewPermission\");\nlet WorksheetViewPermission = _WorksheetViewPermission;\nconst _WorksheetSetRowStylePermission = class _WorksheetSetRowStylePermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SetRowStyle);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SetRowStyle}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSetRowStylePermission, \"WorksheetSetRowStylePermission\");\nlet WorksheetSetRowStylePermission = _WorksheetSetRowStylePermission;\nconst _WorksheetSetColumnStylePermission = class _WorksheetSetColumnStylePermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.SetColumnStyle);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.SetColumnStyle}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSetColumnStylePermission, \"WorksheetSetColumnStylePermission\");\nlet WorksheetSetColumnStylePermission = _WorksheetSetColumnStylePermission;\nconst _WorksheetInsertRowPermission = class _WorksheetInsertRowPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.InsertRow);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.InsertRow}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetInsertRowPermission, \"WorksheetInsertRowPermission\");\nlet WorksheetInsertRowPermission = _WorksheetInsertRowPermission;\nconst _WorksheetInsertColumnPermission = class _WorksheetInsertColumnPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.InsertColumn);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.InsertColumn}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetInsertColumnPermission, \"WorksheetInsertColumnPermission\");\nlet WorksheetInsertColumnPermission = _WorksheetInsertColumnPermission;\nconst _WorksheetInsertHyperlinkPermission = class _WorksheetInsertHyperlinkPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.InsertHyperlink);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.InsertHyperlink}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetInsertHyperlinkPermission, \"WorksheetInsertHyperlinkPermission\");\nlet WorksheetInsertHyperlinkPermission = _WorksheetInsertHyperlinkPermission;\nconst _WorksheetDeleteRowPermission = class _WorksheetDeleteRowPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.DeleteRow);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.DeleteRow}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetDeleteRowPermission, \"WorksheetDeleteRowPermission\");\nlet WorksheetDeleteRowPermission = _WorksheetDeleteRowPermission;\nconst _WorksheetDeleteColumnPermission = class _WorksheetDeleteColumnPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.DeleteColumn);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.DeleteColumn}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetDeleteColumnPermission, \"WorksheetDeleteColumnPermission\");\nlet WorksheetDeleteColumnPermission = _WorksheetDeleteColumnPermission;\nconst _WorksheetSortPermission = class _WorksheetSortPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.Sort);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.Sort}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetSortPermission, \"WorksheetSortPermission\");\nlet WorksheetSortPermission = _WorksheetSortPermission;\nconst _WorksheetFilterPermission = class _WorksheetFilterPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.Filter);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.Filter}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetFilterPermission, \"WorksheetFilterPermission\");\nlet WorksheetFilterPermission = _WorksheetFilterPermission;\nconst _WorksheetPivotTablePermission = class _WorksheetPivotTablePermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.PivotTable);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.PivotTable}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetPivotTablePermission, \"WorksheetPivotTablePermission\");\nlet WorksheetPivotTablePermission = _WorksheetPivotTablePermission;\nconst _WorksheetEditExtraObjectPermission = class _WorksheetEditExtraObjectPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.EditExtraObject);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.EditExtraObject}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetEditExtraObjectPermission, \"WorksheetEditExtraObjectPermission\");\nlet WorksheetEditExtraObjectPermission = _WorksheetEditExtraObjectPermission;\nconst _WorksheetManageCollaboratorPermission = class _WorksheetManageCollaboratorPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.ManageCollaborator);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.ManageCollaborator}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetManageCollaboratorPermission, \"WorksheetManageCollaboratorPermission\");\nlet WorksheetManageCollaboratorPermission = _WorksheetManageCollaboratorPermission;\nconst _WorksheetEditPermission = class _WorksheetEditPermission {\n  constructor(unitId, subUnitId) {\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Worksheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"id\");\n    __publicField(this, \"subType\", P.Edit);\n    this.unitId = unitId, this.subUnitId = subUnitId, this.id = `${this.type}.${P.Edit}_${unitId}_${subUnitId}`;\n  }\n};\n__name(_WorksheetEditPermission, \"WorksheetEditPermission\");\nlet WorksheetEditPermission = _WorksheetEditPermission;\nconst _WorkbookCommentPermission = class _WorkbookCommentPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Comment);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Comment}_${unitId}`;\n  }\n};\n__name(_WorkbookCommentPermission, \"WorkbookCommentPermission\");\nlet WorkbookCommentPermission = _WorkbookCommentPermission;\nconst _WorkbookEditablePermission = class _WorkbookEditablePermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Edit);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Edit}_${unitId}`;\n  }\n};\n__name(_WorkbookEditablePermission, \"WorkbookEditablePermission\");\nlet WorkbookEditablePermission = _WorkbookEditablePermission;\nconst _WorkbookDuplicatePermission = class _WorkbookDuplicatePermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Duplicate);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Duplicate}_${unitId}`;\n  }\n};\n__name(_WorkbookDuplicatePermission, \"WorkbookDuplicatePermission\");\nlet WorkbookDuplicatePermission = _WorkbookDuplicatePermission;\nconst _WorkbookPrintPermission = class _WorkbookPrintPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Print);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Print}_${unitId}`;\n  }\n};\n__name(_WorkbookPrintPermission, \"WorkbookPrintPermission\");\nlet WorkbookPrintPermission = _WorkbookPrintPermission;\nconst _WorkbookExportPermission = class _WorkbookExportPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Export);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Export}_${unitId}`;\n  }\n};\n__name(_WorkbookExportPermission, \"WorkbookExportPermission\");\nlet WorkbookExportPermission = _WorkbookExportPermission;\nconst _WorkbookMoveSheetPermission = class _WorkbookMoveSheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.MoveSheet);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.MoveSheet}_${unitId}`;\n  }\n};\n__name(_WorkbookMoveSheetPermission, \"WorkbookMoveSheetPermission\");\nlet WorkbookMoveSheetPermission = _WorkbookMoveSheetPermission;\nconst _WorkbookDeleteSheetPermission = class _WorkbookDeleteSheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.DeleteSheet);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.DeleteSheet}_${unitId}`;\n  }\n};\n__name(_WorkbookDeleteSheetPermission, \"WorkbookDeleteSheetPermission\");\nlet WorkbookDeleteSheetPermission = _WorkbookDeleteSheetPermission;\nconst _WorkbookHideSheetPermission = class _WorkbookHideSheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.HideSheet);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.HideSheet}_${unitId}`;\n  }\n};\n__name(_WorkbookHideSheetPermission, \"WorkbookHideSheetPermission\");\nlet WorkbookHideSheetPermission = _WorkbookHideSheetPermission;\nconst _WorkbookRenameSheetPermission = class _WorkbookRenameSheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.RenameSheet);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.RenameSheet}_${unitId}`;\n  }\n};\n__name(_WorkbookRenameSheetPermission, \"WorkbookRenameSheetPermission\");\nlet WorkbookRenameSheetPermission = _WorkbookRenameSheetPermission;\nconst _WorkbookCreateSheetPermission = class _WorkbookCreateSheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.CreateSheet);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.CreateSheet}_${unitId}`;\n  }\n};\n__name(_WorkbookCreateSheetPermission, \"WorkbookCreateSheetPermission\");\nlet WorkbookCreateSheetPermission = _WorkbookCreateSheetPermission;\nconst _WorkbookHistoryPermission = class _WorkbookHistoryPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.History);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.History}_${unitId}`;\n  }\n};\n__name(_WorkbookHistoryPermission, \"WorkbookHistoryPermission\");\nlet WorkbookHistoryPermission = _WorkbookHistoryPermission;\nconst _WorkbookViewPermission = class _WorkbookViewPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.View);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.View}_${unitId}`;\n  }\n};\n__name(_WorkbookViewPermission, \"WorkbookViewPermission\");\nlet WorkbookViewPermission = _WorkbookViewPermission;\nconst _WorkbookSharePermission = class _WorkbookSharePermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Share);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Share}_${unitId}`;\n  }\n};\n__name(_WorkbookSharePermission, \"WorkbookSharePermission\");\nlet WorkbookSharePermission = _WorkbookSharePermission;\nconst _WorkbookCopyPermission = class _WorkbookCopyPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.Copy);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.Copy}_${unitId}`;\n  }\n};\n__name(_WorkbookCopyPermission, \"WorkbookCopyPermission\");\nlet WorkbookCopyPermission = _WorkbookCopyPermission;\nconst _WorkbookCopySheetPermission = class _WorkbookCopySheetPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"subType\", P.CopySheet);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.CopySheet}_${unitId}`;\n  }\n};\n__name(_WorkbookCopySheetPermission, \"WorkbookCopySheetPermission\");\nlet WorkbookCopySheetPermission = _WorkbookCopySheetPermission;\nconst _WorkbookManageCollaboratorPermission = class _WorkbookManageCollaboratorPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.ManageCollaborator);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.ManageCollaborator}_${unitId}`;\n  }\n};\n__name(_WorkbookManageCollaboratorPermission, \"WorkbookManageCollaboratorPermission\");\nlet WorkbookManageCollaboratorPermission = _WorkbookManageCollaboratorPermission;\nconst _WorkbookViewHistoryPermission = class _WorkbookViewHistoryPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.ViewHistory);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.ViewHistory}_${unitId}`;\n  }\n};\n__name(_WorkbookViewHistoryPermission, \"WorkbookViewHistoryPermission\");\nlet WorkbookViewHistoryPermission = _WorkbookViewHistoryPermission;\nconst _WorkbookRecoverHistoryPermission = class _WorkbookRecoverHistoryPermission {\n  constructor(unitId) {\n    __publicField(this, \"id\");\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"type\", M.Workbook);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"subType\", P.RecoverHistory);\n    this.unitId = unitId, this.unitId = unitId, this.id = `${this.type}.${P.RecoverHistory}_${unitId}`;\n  }\n};\n__name(_WorkbookRecoverHistoryPermission, \"WorkbookRecoverHistoryPermission\");\nlet WorkbookRecoverHistoryPermission = _WorkbookRecoverHistoryPermission;\nconst _RangeProtectionPermissionEditPoint = class _RangeProtectionPermissionEditPoint {\n  constructor(unitId, subUnitId, permissionId) {\n    __publicField(this, \"type\", M.SelectRange);\n    __publicField(this, \"subType\", P.Edit);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"id\");\n    __publicField(this, \"unitId\");\n    __publicField(this, \"subUnitId\");\n    __publicField(this, \"permissionId\");\n    this.unitId = unitId, this.subUnitId = subUnitId, this.permissionId = permissionId, this.id = `${M.SelectRange}.${P.Edit}.${permissionId}`;\n  }\n};\n__name(_RangeProtectionPermissionEditPoint, \"RangeProtectionPermissionEditPoint\");\nlet RangeProtectionPermissionEditPoint = _RangeProtectionPermissionEditPoint;\nconst _RangeProtectionPermissionViewPoint = class _RangeProtectionPermissionViewPoint {\n  constructor(unitId, subUnitId, permissionId) {\n    __publicField(this, \"type\", M.SelectRange);\n    __publicField(this, \"subType\", P.View);\n    __publicField(this, \"status\", PermissionStatus.INIT);\n    __publicField(this, \"value\", !0);\n    __publicField(this, \"id\");\n    __publicField(this, \"unitId\");\n    __publicField(this, \"subUnitId\");\n    __publicField(this, \"permissionId\");\n    this.unitId = unitId, this.subUnitId = subUnitId, this.permissionId = permissionId, this.id = `${M.SelectRange}.${P.View}.${permissionId}`;\n  }\n};\n__name(_RangeProtectionPermissionViewPoint, \"RangeProtectionPermissionViewPoint\");\nlet RangeProtectionPermissionViewPoint = _RangeProtectionPermissionViewPoint;\nconst SetRangeValuesCommand = {\n  id: \"sheet.command.set-range-values\",\n  type: CommandType.COMMAND,\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), permissionService = accessor.get(IPermissionService), target = getSheetCommandTarget(univerInstanceService, {\n      subUnitId: params.subUnitId,\n      unitId: params.unitId\n    });\n    if (!target)\n      return !1;\n    const { subUnitId, unitId } = target, { value, range } = params, currentSelections = range ? [range] : (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!currentSelections || !currentSelections.length || !permissionService.getPermissionPoint(new WorksheetEditPermission(unitId, subUnitId).id))\n      return !1;\n    const cellValue = new ObjectMatrix();\n    let realCellValue;\n    if (Tools.isArray(value))\n      for (let i = 0; i < currentSelections.length; i++) {\n        const { startRow, startColumn, endRow, endColumn } = currentSelections[i];\n        for (let r = 0; r <= endRow - startRow; r++)\n          for (let c = 0; c <= endColumn - startColumn; c++)\n            cellValue.setValue(r + startRow, c + startColumn, value[r][c]);\n      }\n    else if (isICellData(value))\n      for (let i = 0; i < currentSelections.length; i++) {\n        const { startRow, startColumn, endRow, endColumn } = currentSelections[i];\n        for (let r = startRow; r <= endRow; r++)\n          for (let c = startColumn; c <= endColumn; c++)\n            cellValue.setValue(r, c, value);\n      }\n    else\n      realCellValue = value;\n    const setRangeValuesMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: realCellValue != null ? realCellValue : cellValue.getMatrix()\n    }, undoSetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(accessor, setRangeValuesMutationParams), setValueMutationResult = commandService.syncExecuteCommand(\n      SetRangeValuesMutation.id,\n      setRangeValuesMutationParams\n    ), { undos, redos } = sheetInterceptorService.onCommandExecute({\n      id: SetRangeValuesCommand.id,\n      params: { ...setRangeValuesMutationParams, range: currentSelections }\n    }), result = sequenceExecute([...redos], commandService);\n    return setValueMutationResult && result.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetRangeValuesMutation.id, params: undoSetRangeValuesMutationParams }, ...undos],\n      redoMutations: [{ id: SetRangeValuesMutation.id, params: setRangeValuesMutationParams }, ...redos]\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction getInsertRangeMutations(accessor, params) {\n  const redo = [], undo = [], { unitId, subUnitId, range, shiftDimension, cellValue = {} } = params, instanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = instanceService.getUniverSheetInstance(unitId), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n  if (worksheet) {\n    const cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange();\n    if (range.startColumn <= dataRange.endColumn || range.startRow <= dataRange.endRow) {\n      let moveFromRange, moveToRange;\n      if (shiftDimension === Dimension.COLUMNS) {\n        const endRow = Math.min(range.endRow, dataRange.endRow);\n        let endColumn = 0;\n        for (let row = range.startRow; row <= endRow; row++) {\n          const rowData = cellMatrix.getRow(row), rowLength = rowData ? getArrayLength(rowData) - 1 : 0;\n          endColumn = Math.max(endColumn, rowLength);\n        }\n        moveFromRange = {\n          startRow: range.startRow,\n          startColumn: range.startColumn,\n          endRow,\n          endColumn\n        };\n        const shift = range.endColumn - range.startColumn + 1;\n        moveToRange = {\n          startRow: range.startRow,\n          startColumn: moveFromRange.startColumn + shift,\n          endRow,\n          endColumn: moveFromRange.endColumn + shift\n        };\n      } else {\n        const endColumn = Math.min(range.endColumn, dataRange.endColumn), endRow = dataRange.endRow;\n        moveFromRange = {\n          startRow: range.startRow,\n          startColumn: range.startColumn,\n          endRow,\n          endColumn\n        };\n        const shift = range.endRow - range.startRow + 1;\n        moveToRange = {\n          startRow: moveFromRange.startRow + shift,\n          startColumn: range.startColumn,\n          endRow: moveFromRange.endRow + shift,\n          endColumn\n        };\n      }\n      const moveRangeMutations = getMoveRangeUndoRedoMutations(\n        accessor,\n        { unitId, subUnitId, range: moveFromRange },\n        { unitId, subUnitId, range: moveToRange },\n        !0\n      );\n      moveRangeMutations && (redo.push(...moveRangeMutations.redos), undo.push(...moveRangeMutations.undos));\n    }\n    if (Object.entries(cellValue).length === 0)\n      for (let row = range.startRow; row <= range.endRow; row++) {\n        cellValue[row] || (cellValue[row] = {});\n        for (let column = range.startColumn; column <= range.endColumn; column++)\n          cellValue[row][column] = null;\n      }\n    const setRangeValuesMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue\n    }, undoSetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      setRangeValuesMutationParams\n    ), { undos: interceptorUndos, redos: interceptorRedos } = sheetInterceptorService.onCommandExecute({\n      id: SetRangeValuesCommand.id,\n      params: { ...setRangeValuesMutationParams, range }\n    });\n    redo.push({ id: SetRangeValuesMutation.id, params: setRangeValuesMutationParams }, ...interceptorRedos), undo.push({ id: SetRangeValuesMutation.id, params: undoSetRangeValuesMutationParams }, ...interceptorUndos);\n  }\n  return {\n    redo,\n    undo\n  };\n}\n__name(getInsertRangeMutations, \"getInsertRangeMutations\");\nfunction getRemoveRangeMutations(accessor, params) {\n  const redo = [], undo = [], { unitId, subUnitId, range, shiftDimension } = params, instanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = instanceService.getUniverSheetInstance(unitId), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n  if (worksheet) {\n    const cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), setRangeValuesMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: generateNullCell([range])\n    }, undoSetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      setRangeValuesMutationParams\n    ), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetRangeValuesCommand.id,\n      params: setRangeValuesMutationParams\n    });\n    if (redo.push({ id: SetRangeValuesMutation.id, params: setRangeValuesMutationParams }, ...intercepted.redos), undo.push(...intercepted.undos, {\n      id: SetRangeValuesMutation.id,\n      params: undoSetRangeValuesMutationParams\n    }), range.startColumn <= dataRange.endColumn || range.startRow <= dataRange.endRow) {\n      let moveFromRange = null, moveToRange = null;\n      if (shiftDimension === Dimension.COLUMNS && range.endColumn < dataRange.endColumn) {\n        const endRow = Math.min(range.endRow, dataRange.endRow);\n        let endColumn = 0;\n        for (let row = range.startRow; row <= endRow; row++) {\n          const rowData = cellMatrix.getRow(row), rowLength = rowData ? getArrayLength(rowData) - 1 : 0;\n          endColumn = Math.max(endColumn, rowLength);\n        }\n        moveFromRange = {\n          startRow: range.startRow,\n          startColumn: range.endColumn + 1,\n          endRow,\n          endColumn\n        };\n        const shift = range.endColumn - range.startColumn + 1;\n        moveToRange = {\n          startRow: range.startRow,\n          startColumn: moveFromRange.startColumn - shift,\n          endRow,\n          endColumn: moveFromRange.endColumn - shift\n        };\n      }\n      if (shiftDimension === Dimension.ROWS && range.endRow < dataRange.endRow) {\n        const endColumn = Math.min(range.endColumn, dataRange.endColumn), endRow = dataRange.endRow;\n        moveFromRange = {\n          startRow: range.endRow + 1,\n          startColumn: range.startColumn,\n          endRow,\n          endColumn\n        };\n        const shift = range.endRow - range.startRow + 1;\n        moveToRange = {\n          startRow: moveFromRange.startRow - shift,\n          startColumn: range.startColumn,\n          endRow: moveFromRange.endRow - shift,\n          endColumn\n        };\n      }\n      if (moveFromRange && moveToRange) {\n        const moveRangeMutations = getMoveRangeUndoRedoMutations(\n          accessor,\n          { unitId, subUnitId, range: moveFromRange },\n          { unitId, subUnitId, range: moveToRange },\n          !0\n        );\n        moveRangeMutations && (redo.push(...moveRangeMutations.redos), undo.push(...moveRangeMutations.undos));\n      }\n    }\n  }\n  return {\n    redo,\n    undo\n  };\n}\n__name(getRemoveRangeMutations, \"getRemoveRangeMutations\");\nfunction handleInsertRangeMutation(cellMatrix, range, lastEndRow, lastEndColumn, shiftDimension, cellValue) {\n  const { startRow, endRow, startColumn, endColumn } = range;\n  if (shiftDimension === Dimension.ROWS) {\n    const rows = endRow - startRow + 1;\n    for (let r = lastEndRow; r >= startRow; r--)\n      for (let c = startColumn; c <= endColumn; c++) {\n        const value = cellMatrix.getValue(r, c);\n        value == null ? cellMatrix.realDeleteValue(r + rows, c) : cellMatrix.setValue(r + rows, c, value);\n      }\n    for (let r = endRow; r >= startRow; r--)\n      for (let c = startColumn; c <= endColumn; c++)\n        cellValue && cellValue[r] && cellValue[r][c] ? cellMatrix.setValue(r, c, cellValue[r][c]) : cellMatrix.realDeleteValue(r, c);\n  } else if (shiftDimension === Dimension.COLUMNS) {\n    const columns = endColumn - startColumn + 1;\n    for (let r = startRow; r <= endRow; r++)\n      for (let c = lastEndColumn; c >= startColumn; c--) {\n        const value = cellMatrix.getValue(r, c);\n        value == null ? cellMatrix.realDeleteValue(r, c + columns) : cellMatrix.setValue(r, c + columns, value);\n      }\n    for (let r = startRow; r <= endRow; r++)\n      for (let c = endColumn; c >= startColumn; c--)\n        cellValue && cellValue[r] && cellValue[r][c] ? cellMatrix.setValue(r, c, cellValue[r][c]) : cellMatrix.realDeleteValue(r, c);\n  }\n}\n__name(handleInsertRangeMutation, \"handleInsertRangeMutation\");\nfunction handleDeleteRangeMutation(cellMatrix, range, lastEndRow, lastEndColumn, shiftDimension) {\n  const { startRow, endRow, startColumn, endColumn } = range, rows = endRow - startRow + 1, columns = endColumn - startColumn + 1;\n  if (shiftDimension === Dimension.ROWS)\n    for (let r = startRow; r <= lastEndRow; r++)\n      for (let c = startColumn; c <= endColumn; c++) {\n        const value = cellMatrix.getValue(r + rows, c);\n        value == null ? cellMatrix.realDeleteValue(r, c) : cellMatrix.setValue(r, c, value);\n      }\n  else if (shiftDimension === Dimension.COLUMNS)\n    for (let r = startRow; r <= endRow; r++)\n      for (let c = startColumn; c <= lastEndColumn; c++) {\n        const value = cellMatrix.getValue(r, c + columns);\n        value == null ? cellMatrix.realDeleteValue(r, c) : cellMatrix.setValue(r, c, value);\n      }\n}\n__name(handleDeleteRangeMutation, \"handleDeleteRangeMutation\");\nconst DeleteRangeMoveLeftCommandId = \"sheet.command.delete-range-move-left\", DeleteRangeMoveLeftCommand = {\n  type: CommandType.COMMAND,\n  id: DeleteRangeMoveLeftCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { worksheet, workbook, subUnitId, unitId } = target;\n    let range = params == null ? void 0 : params.range;\n    if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n    const deleteRangeMutationParams = {\n      range,\n      subUnitId,\n      unitId,\n      shiftDimension: Dimension.COLUMNS\n    }, sheetInterceptor = sheetInterceptorService.onCommandExecute({\n      id: DeleteRangeMoveLeftCommand.id,\n      params: { range }\n    }), { redo: removeRangeRedo, undo: removeRangeUndo } = getRemoveRangeMutations(\n      accessor,\n      deleteRangeMutationParams\n    ), redos = [...(_b = sheetInterceptor.preRedos) != null ? _b : [], ...removeRangeRedo], undos = [...sheetInterceptor.undos, ...removeRangeUndo];\n    return redos.push(...sheetInterceptor.redos), redos.push(followSelectionOperation(range, workbook, worksheet)), undos.push(...(_c = sheetInterceptor.preUndos) != null ? _c : []), sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos.reverse(),\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n  // all subsequent mutations should succeed inorder to make the whole process succeed\n  // Promise.all([]).then(() => true),\n}, DeleteRangeMoveUpCommandId = \"sheet.command.delete-range-move-up\", DeleteRangeMoveUpCommand = {\n  type: CommandType.COMMAND,\n  id: DeleteRangeMoveUpCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId, workbook, worksheet } = target;\n    let range = params == null ? void 0 : params.range;\n    if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n    const deleteRangeMutationParams = {\n      range,\n      subUnitId,\n      unitId,\n      shiftDimension: Dimension.ROWS\n    }, sheetInterceptor = sheetInterceptorService.onCommandExecute({\n      id: DeleteRangeMoveUpCommand.id,\n      params: { range }\n    }), { redo: removeRangeRedo, undo: removeRangeUndo } = getRemoveRangeMutations(\n      accessor,\n      deleteRangeMutationParams\n    ), redos = [...(_b = sheetInterceptor.preRedos) != null ? _b : [], ...removeRangeRedo], undos = [...sheetInterceptor.undos, ...removeRangeUndo];\n    return redos.push(...sheetInterceptor.redos), redos.push(followSelectionOperation(range, workbook, worksheet)), undos.push(...(_c = sheetInterceptor.preUndos) != null ? _c : []), sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos.reverse(),\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n  // all subsequent mutations should succeed inorder to make the whole process succeed\n  // Promise.all([]).then(() => true),\n}, InsertRowMutationUndoFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    range: params.range\n  };\n}, \"InsertRowMutationUndoFactory\"), InsertRowMutation = {\n  id: \"sheet.mutation.insert-row\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const { unitId, subUnitId, range, rowInfo } = params, universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(subUnitId);\n    if (worksheet == null)\n      throw new Error(\"worksheet is null error!\");\n    const rowWrapper = worksheet.getRowManager().getRowData(), defaultRowInfo = {\n      h: worksheet.getConfig().defaultRowHeight,\n      hd: 0\n    }, rowIndex = range.startRow, rowCount = range.endRow - range.startRow + 1;\n    for (let j = rowIndex; j < rowIndex + rowCount; j++)\n      rowInfo ? insertMatrixArray(j, (_a20 = rowInfo[j - range.startRow]) != null ? _a20 : defaultRowInfo, rowWrapper) : insertMatrixArray(j, defaultRowInfo, rowWrapper);\n    return worksheet.setRowCount(worksheet.getRowCount() + range.endRow - range.startRow + 1), worksheet.getCellMatrix().insertRows(range.startRow, rowCount), !0;\n  }, \"handler\")\n}, InsertColMutationUndoFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    range: params.range\n  };\n}, \"InsertColMutationUndoFactory\"), InsertColMutation = {\n  id: \"sheet.mutation.insert-col\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const manager = worksheet.getColumnManager(), { range, colInfo } = params, columnWrapper = manager.getColumnData(), colIndex = range.startColumn, colCount = range.endColumn - range.startColumn + 1, defaultColWidth = worksheet.getConfig().defaultColumnWidth;\n    for (let j = colIndex; j < colIndex + colCount; j++) {\n      const defaultColInfo = {\n        w: defaultColWidth,\n        hd: 0\n      };\n      colInfo ? insertMatrixArray(j, (_a20 = colInfo[j - range.startColumn]) != null ? _a20 : defaultColInfo, columnWrapper) : insertMatrixArray(j, defaultColInfo, columnWrapper);\n    }\n    return worksheet.setColumnCount(worksheet.getColumnCount() + range.endColumn - range.startColumn + 1), worksheet.getCellMatrix().insertColumns(range.startColumn, colCount), !0;\n  }, \"handler\")\n}, RemoveRowsUndoMutationFactory = /* @__PURE__ */ __name((params, worksheet) => {\n  const rowWrapper = worksheet.getRowManager().getRowData(), rowInfo = {}, range = params.range, slice = sliceMatrixArray(range.startRow, range.endRow, rowWrapper), _rowInfo = concatMatrixArray(rowInfo, slice);\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    range: params.range,\n    rowInfo: _rowInfo\n  };\n}, \"RemoveRowsUndoMutationFactory\"), RemoveRowMutation = {\n  id: \"sheet.mutation.remove-rows\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const range = params.range, rowPrimitive = worksheet.getRowManager().getRowData();\n    for (let i = range.startRow; i <= range.endRow; i++)\n      worksheet.getRowFiltered(i);\n    const rowCount = range.endRow - range.startRow + 1;\n    return spliceArray(range.startRow, rowCount, rowPrimitive), worksheet.getCellMatrix().removeRows(range.startRow, rowCount), worksheet.setRowCount(worksheet.getRowCount() - rowCount), !0;\n  }, \"handler\")\n}, RemoveColMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n  if (universheet == null)\n    throw new Error(\"universheet is null error!\");\n  const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n  if (worksheet == null)\n    throw new Error(\"worksheet is null error!\");\n  const columnWrapper = worksheet.getColumnManager().getColumnData(), colInfo = {}, range = params.range, slice = sliceMatrixArray(range.startColumn, range.endColumn, columnWrapper), _colInfo = concatMatrixArray(colInfo, slice);\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    range: params.range,\n    colInfo: _colInfo\n  };\n}, \"RemoveColMutationFactory\"), RemoveColMutation = {\n  id: \"sheet.mutation.remove-col\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const range = params.range, colPrimitive = worksheet.getColumnManager().getColumnData(), colCount = range.endColumn - range.startColumn + 1;\n    return spliceArray(range.startColumn, colCount, colPrimitive), worksheet.setColumnCount(worksheet.getColumnCount() - colCount), worksheet.getCellMatrix().removeColumns(range.startColumn, colCount), !0;\n  }, \"handler\")\n}, InsertRangeMoveDownCommandId = \"sheet.command.insert-range-move-down\", InsertRangeMoveDownCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.insert-range-move-down\",\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService);\n    if (selectionManagerService.isOverlapping())\n      return errorService.emit(localeService.t(\"sheets.info.overlappingSelections\")), !1;\n    const target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId, worksheet, workbook } = target;\n    let range = params == null ? void 0 : params.range;\n    if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n    const redoMutations = [], undoMutations = [], cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), sliceMaxRow = cellMatrix.getSlice(dataRange.startRow, dataRange.endRow, range.startColumn, range.endColumn).getDataRange().endRow, insertRowCount = Math.max(sliceMaxRow + (range.endRow - range.startRow + 1) - dataRange.endRow, 0);\n    if (insertRowCount > 0) {\n      const anchorRow = range.startRow - 1, height = worksheet.getRowHeight(anchorRow), insertRowParams = {\n        unitId,\n        subUnitId,\n        range: {\n          startRow: dataRange.endRow + 1,\n          endRow: dataRange.endRow + insertRowCount,\n          startColumn: dataRange.startColumn,\n          endColumn: dataRange.endColumn\n        },\n        rowInfo: new Array(insertRowCount).fill(void 0).map(() => ({\n          h: height,\n          hd: BooleanNumber.FALSE\n        }))\n      };\n      redoMutations.push({\n        id: InsertRowMutation.id,\n        params: insertRowParams\n      });\n      const undoRowInsertionParams = InsertRowMutationUndoFactory(\n        accessor,\n        insertRowParams\n      );\n      undoMutations.push({ id: RemoveRowMutation.id, params: undoRowInsertionParams });\n    }\n    const cellValue = {};\n    Range.foreach(range, (row, col) => {\n      const cell = worksheet.getCell(row, col);\n      cell && (cellValue[row] || (cellValue[row] = {}), cellValue[row][col] = { s: cell.s });\n    });\n    const insertRangeMutationParams = {\n      range,\n      subUnitId,\n      unitId,\n      shiftDimension: Dimension.ROWS,\n      cellValue\n    }, { redo: insertRangeRedo, undo: insertRangeUndo } = getInsertRangeMutations(\n      accessor,\n      insertRangeMutationParams\n    );\n    redoMutations.push(...insertRangeRedo), undoMutations.push(...insertRangeUndo);\n    const sheetInterceptor = sheetInterceptorService.onCommandExecute({\n      id: InsertRangeMoveDownCommand.id,\n      params: { range }\n    });\n    return redoMutations.push(...sheetInterceptor.redos), redoMutations.push(followSelectionOperation(range, workbook, worksheet)), undoMutations.push(...(_b = sheetInterceptor.preUndos) != null ? _b : []), redoMutations.unshift(...(_c = sheetInterceptor.preRedos) != null ? _c : []), undoMutations.unshift(...sheetInterceptor.undos), sequenceExecute(redoMutations, commandService) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undoMutations.reverse(),\n      redoMutations\n    }), !0) : !1;\n  }, \"handler\")\n  // all subsequent mutations should succeed inorder to make the whole process succeed\n  // Promise.all([]).then(() => true),\n}, InsertRangeMoveRightCommandId = \"sheet.command.insert-range-move-right\", InsertRangeMoveRightCommand = {\n  type: CommandType.COMMAND,\n  id: InsertRangeMoveRightCommandId,\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService);\n    if (selectionManagerService.isOverlapping())\n      return errorService.emit(localeService.t(\"sheets.info.overlappingSelections\")), !1;\n    const target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { workbook, worksheet, unitId, subUnitId } = target;\n    let range = params == null ? void 0 : params.range;\n    if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n    const redoMutations = [], undoMutations = [], cellMatrix = worksheet.getCellMatrix(), dataRange = cellMatrix.getDataRange(), sliceMaxCol = cellMatrix.getSlice(range.startRow, range.endRow, dataRange.startColumn, dataRange.endColumn).getDataRange().endColumn, insertColCount = Math.max(\n      sliceMaxCol + (range.endColumn - range.startColumn + 1) - dataRange.endColumn,\n      0\n    );\n    if (insertColCount > 0) {\n      const anchorCol = range.startColumn - 1, width = worksheet.getColumnWidth(anchorCol), insertColParams = {\n        unitId,\n        subUnitId,\n        range: {\n          startRow: dataRange.startRow + 1,\n          endRow: dataRange.endRow,\n          startColumn: dataRange.endColumn + 1,\n          endColumn: dataRange.endColumn + insertColCount\n        },\n        colInfo: new Array(insertColCount).fill(void 0).map(() => ({\n          w: width,\n          hd: BooleanNumber.FALSE\n        }))\n      };\n      redoMutations.push({\n        id: InsertColMutation.id,\n        params: insertColParams\n      });\n      const undoColInsertionParams = InsertColMutationUndoFactory(\n        accessor,\n        insertColParams\n      );\n      undoMutations.push({ id: RemoveColMutation.id, params: undoColInsertionParams });\n    }\n    const cellValue = {};\n    Range.foreach(range, (row, col) => {\n      const cell = worksheet.getCell(row, col);\n      !cell || !cell.s || (cellValue[row] || (cellValue[row] = {}), cellValue[row][col] = { s: cell.s });\n    });\n    const insertRangeMutationParams = {\n      range,\n      subUnitId,\n      unitId,\n      shiftDimension: Dimension.COLUMNS,\n      cellValue\n    }, { redo: insertRangeRedo, undo: insertRangeUndo } = getInsertRangeMutations(\n      accessor,\n      insertRangeMutationParams\n    );\n    redoMutations.push(...insertRangeRedo), undoMutations.push(...insertRangeUndo);\n    const sheetInterceptor = sheetInterceptorService.onCommandExecute({\n      id: InsertRangeMoveRightCommand.id,\n      params: { range }\n    });\n    return redoMutations.push(...sheetInterceptor.redos), redoMutations.push(followSelectionOperation(range, workbook, worksheet)), undoMutations.push(...(_b = sheetInterceptor.preUndos) != null ? _b : []), redoMutations.unshift(...(_c = sheetInterceptor.preRedos) != null ? _c : []), undoMutations.unshift(...sheetInterceptor.undos), sequenceExecute(redoMutations, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undoMutations.reverse(),\n      redoMutations\n    }), !0) : !1;\n  }, \"handler\")\n  // all subsequent mutations should succeed inorder to make the whole process succeed\n  // Promise.all([]).then(() => true),\n}, InsertRowCommandId = \"sheet.command.insert-row\", InsertRowCommand = {\n  type: CommandType.COMMAND,\n  id: InsertRowCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), workbook = univerInstanceService.getUniverSheetInstance(params.unitId), worksheet = workbook.getSheetBySheetId(params.subUnitId), { range, direction, unitId, subUnitId, cellValue } = params, { startRow, endRow } = range, anchorRow = direction === Direction.UP ? startRow : startRow - 1, height = worksheet.getRowHeight(anchorRow), insertRowParams = {\n      unitId,\n      subUnitId,\n      range,\n      rowInfo: new Array(endRow - startRow + 1).fill(void 0).map(() => ({\n        h: height,\n        hd: BooleanNumber.FALSE\n      }))\n      // row height should inherit from the anchor row\n    }, undoRowInsertionParams = InsertRowMutationUndoFactory(\n      accessor,\n      insertRowParams\n    );\n    if (!await sheetInterceptorService.beforeCommandExecute({\n      id: InsertRowCommand.id,\n      params: insertRowParams\n    }))\n      return !1;\n    const redos = [{ id: InsertRowMutation.id, params: insertRowParams }], undos = [{ id: RemoveRowMutation.id, params: undoRowInsertionParams }];\n    cellValue && redos.push({\n      id: SetRangeValuesMutation.id,\n      params: {\n        unitId,\n        subUnitId,\n        cellValue\n      }\n    });\n    const intercepted = sheetInterceptorService.onCommandExecute({\n      id: InsertRowCommand.id,\n      params\n    });\n    return redos.unshift(...(_a20 = intercepted.preRedos) != null ? _a20 : []), redos.push(...(_b = intercepted.redos) != null ? _b : []), redos.push(followSelectionOperation(range, workbook, worksheet)), undos.unshift(...(_c = intercepted.preUndos) != null ? _c : []), undos.push(...(_d = intercepted.undos) != null ? _d : []), sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: params.unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, InsertRowBeforeCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.insert-row-before\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const selections = (_a20 = accessor.get(SheetsSelectionsService).getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    let range;\n    if ((selections == null ? void 0 : selections.length) === 1)\n      range = selections[0];\n    else\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook)\n      return !1;\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet)\n      return !1;\n    const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), { startRow, endRow } = range, startColumn = 0, endColumn = worksheet.getColumnCount() - 1, cellValue = copyRangeStyles(worksheet, startRow, endRow, startColumn, endColumn, !0, startRow - 1), insertRowParams = {\n      unitId,\n      subUnitId,\n      direction: Direction.UP,\n      range: {\n        startRow,\n        endRow,\n        startColumn,\n        endColumn\n      },\n      cellValue\n    };\n    return accessor.get(ICommandService).executeCommand(InsertRowCommand.id, insertRowParams);\n  }, \"handler\")\n}, InsertRowAfterCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.insert-row-after\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const selections = (_a20 = accessor.get(SheetsSelectionsService).getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    let range;\n    if ((selections == null ? void 0 : selections.length) === 1)\n      range = selections[0];\n    else\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook)\n      return !1;\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet)\n      return !1;\n    const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), count = range.endRow - range.startRow + 1, startRow = range.endRow + 1, endRow = range.endRow + count, startColumn = 0, endColumn = worksheet.getColumnCount() - 1, cellValue = copyRangeStyles(worksheet, startRow, endRow, startColumn, endColumn, !0, range.endRow), insertRowParams = {\n      unitId,\n      subUnitId,\n      direction: Direction.DOWN,\n      range: {\n        startRow,\n        endRow,\n        startColumn,\n        endColumn,\n        rangeType: RANGE_TYPE.ROW\n      },\n      cellValue\n    };\n    return accessor.get(ICommandService).executeCommand(InsertRowCommand.id, insertRowParams);\n  }, \"handler\")\n}, InsertColCommandId = \"sheet.command.insert-col\", InsertColCommand = {\n  type: CommandType.COMMAND,\n  id: InsertColCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), { range, direction, subUnitId, unitId, cellValue } = params, { startColumn, endColumn } = params.range, workbook = univerInstanceService.getUniverSheetInstance(params.unitId), worksheet = workbook.getSheetBySheetId(params.subUnitId), anchorCol = direction === Direction.LEFT ? startColumn : startColumn - 1, width = worksheet.getColumnWidth(anchorCol), insertColParams = {\n      unitId,\n      subUnitId,\n      range,\n      colInfo: new Array(endColumn - startColumn + 1).fill(void 0).map(() => ({\n        w: width,\n        hd: BooleanNumber.FALSE\n      }))\n    }, undoColInsertionParams = InsertColMutationUndoFactory(\n      accessor,\n      insertColParams\n    );\n    if (!await sheetInterceptorService.beforeCommandExecute({\n      id: InsertColCommand.id,\n      params: insertColParams\n    }))\n      return !1;\n    const redos = [{ id: InsertColMutation.id, params: insertColParams }], undos = [{ id: RemoveColMutation.id, params: undoColInsertionParams }];\n    cellValue && redos.push({\n      id: SetRangeValuesMutation.id,\n      params: {\n        unitId,\n        subUnitId,\n        cellValue\n      }\n    });\n    const intercepted = sheetInterceptorService.onCommandExecute({\n      id: InsertColCommand.id,\n      params\n    });\n    return redos.unshift(...(_a20 = intercepted.preRedos) != null ? _a20 : []), redos.push(...(_b = intercepted.redos) != null ? _b : []), redos.push(followSelectionOperation(range, workbook, worksheet)), undos.unshift(...(_c = intercepted.preUndos) != null ? _c : []), undos.push(...(_d = intercepted.undos) != null ? _d : []), sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: params.unitId,\n      undoMutations: undos.filter(Boolean),\n      redoMutations: redos.filter(Boolean)\n    }), !0) : !1;\n  }, \"handler\")\n}, InsertColBeforeCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.insert-col-before\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selections = accessor.get(SheetsSelectionsService).getCurrentSelections();\n    let range;\n    if ((selections == null ? void 0 : selections.length) === 1)\n      range = selections[0].range;\n    else\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook)\n      return !1;\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet)\n      return !1;\n    const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), { startColumn, endColumn } = range, startRow = 0, endRow = worksheet.getRowCount() - 1, cellValue = copyRangeStyles(worksheet, startRow, endRow, startColumn, endColumn, !1, startColumn - 1), insertColParams = {\n      unitId,\n      subUnitId,\n      direction: Direction.LEFT,\n      range: {\n        startColumn,\n        endColumn,\n        startRow,\n        endRow,\n        rangeType: RANGE_TYPE.COLUMN\n      },\n      cellValue\n    };\n    return accessor.get(ICommandService).executeCommand(InsertColCommand.id, insertColParams);\n  }, \"handler\")\n}, InsertColAfterCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.insert-col-after\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selections = accessor.get(SheetsSelectionsService).getCurrentSelections();\n    let range;\n    if ((selections == null ? void 0 : selections.length) === 1)\n      range = selections[0].range;\n    else\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook)\n      return !1;\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet)\n      return !1;\n    const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), count = range.endColumn - range.startColumn + 1, startColumn = range.endColumn + 1, endColumn = range.endColumn + count, startRow = 0, endRow = worksheet.getRowCount() - 1, cellValue = copyRangeStyles(worksheet, startRow, endRow, startColumn, endColumn, !1, range.endColumn), insertColParams = {\n      unitId,\n      subUnitId,\n      direction: Direction.RIGHT,\n      range: {\n        startColumn,\n        endColumn,\n        startRow,\n        endRow\n      },\n      cellValue\n    };\n    return accessor.get(ICommandService).executeCommand(InsertColCommand.id, insertColParams);\n  }, \"handler\")\n}, InsertSheetCommand = {\n  id: \"sheet.command.insert-sheet\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), localeService = accessor.get(LocaleService), target = getSheetCommandTargetWorkbook(univerInstanceService, { unitId: params == null ? void 0 : params.unitId });\n    if (!target) return !1;\n    const { unitId, workbook } = target;\n    let index = workbook.getSheets().length;\n    const sheet = params == null ? void 0 : params.sheet, sheetId = sheet == null ? void 0 : sheet.id, sheetConfig = mergeWorksheetSnapshotWithDefault(sheet || {});\n    params ? (index = (_a20 = params.index) != null ? _a20 : index, sheetConfig.id = sheetId || Tools.generateRandomId(), sheetConfig.name = (sheet == null ? void 0 : sheet.name) || workbook.generateNewSheetName(`${localeService.t(\"sheets.tabs.sheet\")}`)) : (sheetConfig.id = Tools.generateRandomId(), sheetConfig.name = workbook.generateNewSheetName(`${localeService.t(\"sheets.tabs.sheet\")}`));\n    const insertSheetMutationParams = {\n      index,\n      sheet: sheetConfig,\n      unitId\n    }, removeSheetMutationParams = InsertSheetUndoMutationFactory(\n      accessor,\n      insertSheetMutationParams\n    );\n    return commandService.syncExecuteCommand(InsertSheetMutation.id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: RemoveSheetMutation.id, params: removeSheetMutationParams }],\n      redoMutations: [{ id: InsertSheetMutation.id, params: insertSheetMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction MoveRowsMutationUndoFactory(_accessor, params) {\n  const { unitId, subUnitId, sourceRange, targetRange } = params, movingBackward = sourceRange.startRow > targetRange.startRow, count = sourceRange.endRow - sourceRange.startRow + 1;\n  return movingBackward ? {\n    unitId,\n    subUnitId,\n    sourceRange: Rectangle.clone(targetRange),\n    targetRange: {\n      ...sourceRange,\n      endRow: sourceRange.endRow + count,\n      startRow: sourceRange.startRow + count\n    }\n  } : {\n    unitId,\n    subUnitId,\n    targetRange: Rectangle.clone(sourceRange),\n    sourceRange: {\n      ...targetRange,\n      endRow: targetRange.endRow - count,\n      startRow: targetRange.startRow - count\n    }\n  };\n}\n__name(MoveRowsMutationUndoFactory, \"MoveRowsMutationUndoFactory\");\nconst MoveRowsMutation = {\n  id: \"sheet.mutation.move-rows\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, sourceRange, targetRange } = params, univerSheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(unitId);\n    if (!univerSheet)\n      throw new Error(\"[MoveRowMutation] univerSheet is null!\");\n    const worksheet = univerSheet.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      throw new Error(\"[MoveRowMutation] worksheet is null!\");\n    const fromRow = sourceRange.startRow, count = sourceRange.endRow - sourceRange.startRow + 1, toRow = targetRange.startRow, rowWrapper = worksheet.getRowManager().getRowData();\n    return moveMatrixArray(fromRow, count, toRow, rowWrapper), worksheet.getCellMatrix().moveRows(fromRow, count, toRow), !0;\n  }, \"handler\")\n};\nfunction MoveColsMutationUndoFactory(_accessor, params) {\n  const { unitId, subUnitId, sourceRange, targetRange } = params, movingBackward = sourceRange.startColumn > targetRange.startColumn, count = sourceRange.endColumn - sourceRange.startColumn + 1;\n  return movingBackward ? {\n    unitId,\n    subUnitId,\n    sourceRange: Rectangle.clone(targetRange),\n    targetRange: {\n      ...sourceRange,\n      endColumn: sourceRange.endColumn + count,\n      startColumn: sourceRange.startColumn + count\n    }\n  } : {\n    unitId,\n    subUnitId,\n    targetRange: Rectangle.clone(sourceRange),\n    sourceRange: {\n      ...targetRange,\n      startColumn: targetRange.startColumn - count,\n      endColumn: targetRange.endColumn - count\n    }\n  };\n}\n__name(MoveColsMutationUndoFactory, \"MoveColsMutationUndoFactory\");\nconst MoveColsMutation = {\n  id: \"sheet.mutation.move-columns\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, sourceRange, targetRange } = params, univerSheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(unitId);\n    if (!univerSheet)\n      throw new Error(\"[MoveColumnMutation] univerSheet is null!\");\n    const worksheet = univerSheet.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      throw new Error(\"[MoveColumnMutation] worksheet is null!\");\n    const fromCol = sourceRange.startColumn, count = sourceRange.endColumn - sourceRange.startColumn + 1, toCol = targetRange.startColumn, columnWrapper = worksheet.getColumnManager().getColumnData();\n    return moveMatrixArray(fromCol, count, toCol, columnWrapper), worksheet.getCellMatrix().moveColumns(fromCol, count, toCol), !0;\n  }, \"handler\")\n};\nfunction rowAcrossMergedCell(row, worksheet) {\n  return worksheet.getMergeData().some((mergedCell) => mergedCell.startRow < row && row <= mergedCell.endRow);\n}\n__name(rowAcrossMergedCell, \"rowAcrossMergedCell\");\nfunction columnAcrossMergedCell(col, worksheet) {\n  return worksheet.getMergeData().some((mergedCell) => mergedCell.startColumn < col && col <= mergedCell.endColumn);\n}\n__name(columnAcrossMergedCell, \"columnAcrossMergedCell\");\nconst MoveRowsCommandId = \"sheet.command.move-rows\", MoveRowsCommand = {\n  id: MoveRowsCommandId,\n  type: CommandType.COMMAND,\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), {\n      fromRange: { startRow: fromRow },\n      toRange: { startRow: toRow },\n      range\n    } = params, selections = range ? [covertRangeToSelection(range)] : selectionManagerService.getCurrentSelections(), filteredSelections = selections == null ? void 0 : selections.filter(\n      (selection) => selection.range.rangeType === RANGE_TYPE.ROW && selection.range.startRow <= fromRow && fromRow <= selection.range.endRow\n    );\n    if ((filteredSelections == null ? void 0 : filteredSelections.length) !== 1)\n      return !1;\n    const sheetInterceptorService = accessor.get(SheetInterceptorService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { workbook, worksheet } = target, unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService), rangeToMove = filteredSelections[0].range, beforePrimary = filteredSelections[0].primary, alignedRange = alignToMergedCellsBorders(rangeToMove, worksheet, !1);\n    if (!Rectangle.equals(rangeToMove, alignedRange))\n      return errorService.emit(localeService.t(\"sheets.info.partOfCell\")), !1;\n    if (rowAcrossMergedCell(toRow, worksheet))\n      return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n    const destinationRange = {\n      ...rangeToMove,\n      startRow: toRow,\n      endRow: toRow + rangeToMove.endRow - rangeToMove.startRow\n    }, moveRowsParams = {\n      unitId,\n      subUnitId,\n      sourceRange: rangeToMove,\n      targetRange: destinationRange\n    }, undoMoveRowsParams = MoveRowsMutationUndoFactory(accessor, moveRowsParams), commandService = accessor.get(ICommandService), interceptorCommands = sheetInterceptorService.onCommandExecute({ id: MoveRowsCommand.id, params }), redos = [\n      ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n      { id: MoveRowsMutation.id, params: moveRowsParams }\n    ], undos = [\n      ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n      { id: MoveRowsMutation.id, params: undoMoveRowsParams }\n    ];\n    if (beforePrimary) {\n      const moveBackward = toRow - fromRow < 0, count = rangeToMove.endRow - rangeToMove.startRow + 1, destSelection = moveBackward ? destinationRange : {\n        ...destinationRange,\n        startRow: destinationRange.startRow - count,\n        endRow: destinationRange.endRow - count\n      }, setSelectionsParam = {\n        unitId,\n        subUnitId,\n        selections: [{ range: destSelection, primary: getPrimaryForRange(destSelection, worksheet), style: null }]\n      }, undoSetSelectionsParam = {\n        unitId,\n        subUnitId,\n        selections: [{ range: rangeToMove, primary: beforePrimary, style: null }]\n      };\n      redos.push({ id: SetSelectionsOperation.id, params: setSelectionsParam }), undos.push({ id: SetSelectionsOperation.id, params: undoSetSelectionsParam });\n    }\n    return redos.push(...interceptorCommands.redos), undos.push(...interceptorCommands.undos), sequenceExecute(redos, commandService).result ? (accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, MoveColsCommandId = \"sheet.command.move-cols\", MoveColsCommand = {\n  id: MoveColsCommandId,\n  type: CommandType.COMMAND,\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), {\n      fromRange: { startColumn: fromCol },\n      toRange: { startColumn: toCol },\n      range\n    } = params, selections = range ? [covertRangeToSelection(range)] : selectionManagerService.getCurrentSelections(), filteredSelections = selections == null ? void 0 : selections.filter(\n      (selection) => selection.range.rangeType === RANGE_TYPE.COLUMN && selection.range.startColumn <= fromCol && fromCol <= selection.range.endColumn\n    );\n    if ((filteredSelections == null ? void 0 : filteredSelections.length) !== 1)\n      return !1;\n    const sheetInterceptorService = accessor.get(SheetInterceptorService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { workbook, worksheet } = target, unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId(), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService), rangeToMove = filteredSelections[0].range, beforePrimary = filteredSelections[0].primary, alignedRange = alignToMergedCellsBorders(rangeToMove, worksheet, !1);\n    if (!Rectangle.equals(rangeToMove, alignedRange))\n      return errorService.emit(localeService.t(\"sheets.info.partOfCell\")), !1;\n    if (columnAcrossMergedCell(toCol, worksheet))\n      return errorService.emit(localeService.t(\"sheets.info.acrossMergedCell\")), !1;\n    const destinationRange = {\n      ...rangeToMove,\n      startColumn: toCol,\n      endColumn: toCol + rangeToMove.endColumn - rangeToMove.startColumn\n    }, moveColsParams = {\n      unitId,\n      subUnitId,\n      sourceRange: rangeToMove,\n      targetRange: destinationRange\n    }, undoMoveColsParams = MoveColsMutationUndoFactory(accessor, moveColsParams), commandService = accessor.get(ICommandService), interceptorCommands = sheetInterceptorService.onCommandExecute({ id: MoveColsCommand.id, params }), redos = [\n      ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n      { id: MoveColsMutation.id, params: moveColsParams }\n    ], undos = [\n      ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n      { id: MoveColsMutation.id, params: undoMoveColsParams }\n    ];\n    if (beforePrimary) {\n      const count = rangeToMove.endColumn - rangeToMove.startColumn + 1, destSelection = toCol - fromCol < 0 ? destinationRange : {\n        ...destinationRange,\n        startColumn: destinationRange.startColumn - count,\n        endColumn: destinationRange.endColumn - count\n      }, setSelectionsParam = {\n        unitId,\n        subUnitId,\n        selections: [{ range: destSelection, primary: getPrimaryForRange(destSelection, worksheet), style: null }]\n      }, undoSetSelectionsParam = {\n        unitId,\n        subUnitId,\n        selections: [{ range: rangeToMove, primary: beforePrimary, style: null }]\n      };\n      redos.push({ id: SetSelectionsOperation.id, params: setSelectionsParam }), undos.push({ id: SetSelectionsOperation.id, params: undoSetSelectionsParam });\n    }\n    return redos.push(...interceptorCommands.redos), undos.push(...interceptorCommands.undos), sequenceExecute(redos, commandService).result && accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0;\n  }, \"handler\")\n};\nfunction covertRangeToSelection(range) {\n  return {\n    range,\n    primary: null,\n    style: null\n  };\n}\n__name(covertRangeToSelection, \"covertRangeToSelection\");\nconst RemoveRowCommandId = \"sheet.command.remove-row\", RemoveRowCommand = {\n  type: CommandType.COMMAND,\n  id: RemoveRowCommandId,\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService);\n    let totalRange = params == null ? void 0 : params.range;\n    if (totalRange || (totalRange = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !totalRange) return !1;\n    const univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { workbook, worksheet, subUnitId, unitId } = target;\n    totalRange = {\n      ...totalRange,\n      startColumn: 0,\n      endColumn: Math.max(worksheet.getMaxColumns() - 1, 0)\n    };\n    const filterOutRowsInRemove = [];\n    for (let i = totalRange.startRow; i <= totalRange.endRow; i++)\n      worksheet.getRowFiltered(i) && filterOutRowsInRemove.push(i);\n    const ranges = [];\n    if (filterOutRowsInRemove.length) {\n      const starts = [totalRange.startRow, ...filterOutRowsInRemove.map((r) => r + 1)], ends = [...filterOutRowsInRemove.map((r) => r - 1), totalRange.endRow];\n      for (let i = starts.length - 1; i >= 0; i--)\n        starts[i] <= ends[i] && ranges.push({\n          startRow: starts[i],\n          endRow: ends[i],\n          startColumn: totalRange.startColumn,\n          endColumn: totalRange.endColumn\n        });\n    } else\n      ranges.push(totalRange);\n    if (!await sheetInterceptorService.beforeCommandExecute({\n      id: RemoveRowCommand.id,\n      params: { range: totalRange, ranges }\n    }))\n      return !1;\n    const redos = [], undos = [];\n    ranges.forEach((range) => {\n      const removeRowsParams = {\n        unitId,\n        subUnitId,\n        range\n      }, removedRows = worksheet.getCellMatrix().getSlice(range.startRow, range.endRow, 0, worksheet.getColumnCount() - 1), undoSetRangeValuesParams = {\n        unitId,\n        subUnitId,\n        cellValue: removedRows.getMatrix()\n      }, undoRemoveRowsParams = RemoveRowsUndoMutationFactory(\n        removeRowsParams,\n        worksheet\n      );\n      redos.push({ id: RemoveRowMutation.id, params: removeRowsParams }), undos.unshift({ id: InsertRowMutation.id, params: undoRemoveRowsParams }, { id: SetRangeValuesMutation.id, params: undoSetRangeValuesParams });\n    });\n    const intercepted = sheetInterceptorService.onCommandExecute({\n      id: RemoveRowCommand.id,\n      params: { range: totalRange, ranges }\n    }), commandService = accessor.get(ICommandService);\n    return sequenceExecute(\n      [\n        ...(_b = intercepted.preRedos) != null ? _b : [],\n        ...redos,\n        ...intercepted.redos,\n        followSelectionOperation(totalRange, workbook, worksheet)\n      ],\n      commandService\n    ).result ? (accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_c = intercepted.preUndos) != null ? _c : [],\n        ...undos,\n        ...intercepted.undos\n      ],\n      redoMutations: [\n        ...(_d = intercepted.preRedos) != null ? _d : [],\n        ...redos,\n        ...intercepted.redos\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n}, RemoveColCommandId = \"sheet.command.remove-col\", RemoveColCommand = {\n  type: CommandType.COMMAND,\n  id: RemoveColCommandId,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService);\n    let range = params == null ? void 0 : params.range;\n    if (range || (range = (_a20 = selectionManagerService.getCurrentLastSelection()) == null ? void 0 : _a20.range), !range) return !1;\n    const univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { workbook, worksheet, subUnitId, unitId } = target;\n    range = {\n      ...range,\n      startRow: 0,\n      endRow: Math.max(worksheet.getMaxRows() - 1, 0)\n    };\n    const removeColParams = {\n      unitId,\n      subUnitId,\n      range\n    }, undoRemoveColParams = RemoveColMutationFactory(accessor, removeColParams), removedCols = worksheet.getCellMatrix().getSlice(0, worksheet.getRowCount() - 1, range.startColumn, range.endColumn), undoSetRangeValuesParams = {\n      unitId,\n      subUnitId,\n      cellValue: removedCols.getMatrix()\n    };\n    if (!await sheetInterceptorService.beforeCommandExecute({\n      id: RemoveColCommand.id,\n      params: { range }\n    }))\n      return !1;\n    const intercepted = sheetInterceptorService.onCommandExecute({\n      id: RemoveColCommand.id,\n      params: { range }\n    }), commandService = accessor.get(ICommandService);\n    return sequenceExecute(\n      [\n        ...(_b = intercepted.preRedos) != null ? _b : [],\n        { id: RemoveColMutation.id, params: removeColParams },\n        ...intercepted.redos,\n        followSelectionOperation(range, workbook, worksheet)\n      ],\n      commandService\n    ).result ? (accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_c = intercepted.preUndos) != null ? _c : [],\n        { id: InsertColMutation.id, params: undoRemoveColParams },\n        { id: SetRangeValuesMutation.id, params: undoSetRangeValuesParams },\n        ...intercepted.undos\n      ],\n      redoMutations: [\n        ...(_d = intercepted.preRedos) != null ? _d : [],\n        { id: RemoveColMutation.id, params: removeColParams },\n        ...intercepted.redos\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n}, RemoveSheetCommand = {\n  id: \"sheet.command.remove-sheet\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { unitId, subUnitId, workbook, worksheet } = target;\n    if (workbook.getSheets().length <= 1) return !1;\n    const RemoveSheetMutationParams = {\n      subUnitId,\n      unitId,\n      subUnitName: worksheet.getName()\n    }, InsertSheetMutationParams = RemoveSheetUndoMutationFactory(\n      accessor,\n      RemoveSheetMutationParams\n    ), intercepted = sheetInterceptorService.onCommandExecute({\n      id: RemoveSheetCommand.id,\n      params: { unitId, subUnitId }\n    }), redos = [...(_a20 = intercepted.preRedos) != null ? _a20 : [], { id: RemoveSheetMutation.id, params: RemoveSheetMutationParams }, ...intercepted.redos], undos = [...(_b = intercepted.preUndos) != null ? _b : [], { id: InsertSheetMutation.id, params: InsertSheetMutationParams }, ...intercepted.undos];\n    return sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, AddMergeUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges: params.ranges\n  };\n}, \"AddMergeUndoMutationFactory\"), AddWorksheetMergeMutation = {\n  id: \"sheet.mutation.add-worksheet-merge\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const mergeConfigData = worksheet.getConfig().mergeData, mergeAppendData = params.ranges;\n    for (let i = 0; i < mergeAppendData.length; i++)\n      mergeConfigData.push(mergeAppendData[i]);\n    return worksheet.getSpanModel().rebuild(mergeConfigData), !0;\n  }, \"handler\")\n}, RemoveMergeUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n  if (universheet == null)\n    throw new Error(\"universheet is null error!\");\n  const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n  if (worksheet == null)\n    throw new Error(\"worksheet is null error!\");\n  const mergeConfigData = worksheet.getConfig().mergeData, mergeRemoveData = params.ranges, ranges = [];\n  for (let j = 0; j < mergeRemoveData.length; j++)\n    for (let i = mergeConfigData.length - 1; i >= 0; i--) {\n      const configMerge = mergeConfigData[i], removeMerge = mergeRemoveData[j];\n      Rectangle.intersects(configMerge, removeMerge) && ranges.push(mergeConfigData[i]);\n    }\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges\n  };\n}, \"RemoveMergeUndoMutationFactory\"), RemoveWorksheetMergeMutation = {\n  id: \"sheet.mutation.remove-worksheet-merge\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const mergeConfigData = worksheet.getConfig().mergeData, mergeRemoveData = params.ranges;\n    for (let j = 0; j < mergeRemoveData.length; j++)\n      for (let i = mergeConfigData.length - 1; i >= 0; i--) {\n        const configMerge = mergeConfigData[i], removeMerge = mergeRemoveData[j];\n        Rectangle.intersects(configMerge, removeMerge) && mergeConfigData.splice(i, 1);\n      }\n    return worksheet.getSpanModel().rebuild(mergeConfigData), !0;\n  }, \"handler\")\n}, RemoveWorksheetMergeCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.remove-worksheet-merge\",\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selections = (params == null ? void 0 : params.ranges) || ((_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range));\n    if (!(selections != null && selections.length)) return !1;\n    const target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { subUnitId, unitId, worksheet } = target, removeMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges: selections\n    }, intersectsMerges = worksheet.getConfig().mergeData.filter((merge2) => selections.some((selection) => Rectangle.intersects(selection, merge2)));\n    if (!intersectsMerges.length) return !1;\n    const undoredoMutationParams = RemoveMergeUndoMutationFactory(\n      accessor,\n      removeMergeMutationParams\n    ), nowSelections = selectionManagerService.getCurrentSelections();\n    if (!(nowSelections != null && nowSelections.length)) return !1;\n    const undoSelections = Tools.deepClone(nowSelections), redoSelections = Tools.deepClone(nowSelections), redoLastSelection = redoSelections[redoSelections.length - 1], { startRow, startColumn } = redoLastSelection.range;\n    redoLastSelection.primary = {\n      startRow,\n      startColumn,\n      endRow: startRow,\n      endColumn: startColumn,\n      actualRow: startRow,\n      actualColumn: startColumn,\n      isMerged: !1,\n      isMergedMainCell: !1\n    };\n    const getSetRangeValuesParams = getSetRangeStyleParamsForRemoveMerge(worksheet, intersectsMerges), redoSetRangeValueParams = {\n      unitId,\n      subUnitId,\n      cellValue: getSetRangeValuesParams.redoParams.getMatrix()\n    }, undoSetRangeValueParams = {\n      unitId,\n      subUnitId,\n      cellValue: getSetRangeValuesParams.undoParams.getMatrix()\n    }, redoMutations = [\n      { id: RemoveWorksheetMergeMutation.id, params: undoredoMutationParams },\n      { id: SetRangeValuesMutation.id, params: redoSetRangeValueParams },\n      { id: SetSelectionsOperation.id, params: { selections: redoSelections } }\n    ], undoMutations = [\n      { id: AddWorksheetMergeMutation.id, params: undoredoMutationParams },\n      { id: SetRangeValuesMutation.id, params: undoSetRangeValueParams },\n      { id: SetSelectionsOperation.id, params: { selections: undoSelections } }\n    ];\n    return sequenceExecute(redoMutations, commandService) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations,\n      redoMutations\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction getSetRangeStyleParamsForRemoveMerge(worksheet, ranges) {\n  const styleRedoMatrix = new ObjectMatrix(), styleUndoMatrix = new ObjectMatrix();\n  return ranges.forEach((range) => {\n    const { startRow, startColumn, endColumn, endRow } = range, cellValue = worksheet.getCellMatrix().getValue(startRow, startColumn);\n    if (cellValue != null && cellValue.s)\n      for (let i = startRow; i <= endRow; i++)\n        for (let j = startColumn; j <= endColumn; j++)\n          (i !== startRow || j !== startColumn) && (styleRedoMatrix.setValue(i, j, { s: cellValue.s }), styleUndoMatrix.setValue(i, j, null));\n  }), {\n    redoParams: styleRedoMatrix,\n    undoParams: styleUndoMatrix\n  };\n}\n__name(getSetRangeStyleParamsForRemoveMerge, \"getSetRangeStyleParamsForRemoveMerge\");\nconst _BorderStyleManagerService = class _BorderStyleManagerService {\n  constructor() {\n    __publicField(this, \"_borderInfo\", {\n      type: BorderType.ALL,\n      color: \"#000000\",\n      style: BorderStyleTypes.THIN,\n      activeBorderType: !1\n    });\n    __publicField(this, \"_borderInfo$\", new BehaviorSubject(this._borderInfo));\n    __publicField(this, \"borderInfo$\", this._borderInfo$.asObservable());\n  }\n  dispose() {\n    this._borderInfo$.complete();\n  }\n  setType(type) {\n    this._borderInfo.type = type, this.setActiveBorderType(!0), this.refresh();\n  }\n  setColor(color) {\n    this._borderInfo.color = color, this.refresh();\n  }\n  setStyle(style) {\n    this._borderInfo.style = style, this.refresh();\n  }\n  setActiveBorderType(status) {\n    this._borderInfo.activeBorderType = status;\n  }\n  getBorderInfo() {\n    return this._borderInfo;\n  }\n  refresh() {\n    this._borderInfo$.next(this._borderInfo);\n  }\n};\n__name(_BorderStyleManagerService, \"BorderStyleManagerService\");\nlet BorderStyleManagerService = _BorderStyleManagerService;\nfunction forEach(range, action) {\n  const { startRow, startColumn, endRow, endColumn } = range;\n  for (let i = startRow; i <= endRow; i++)\n    for (let j = startColumn; j <= endColumn; j++)\n      action(i, j);\n}\n__name(forEach, \"forEach\");\nconst SetBorderBasicCommand = {\n  id: \"sheet.command.set-border-basic\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const { unitId, subUnitId, value } = params, { type, color, style } = value, commandService = accessor.get(ICommandService), borderManager = accessor.get(BorderStyleManagerService);\n    return borderManager.setType(type), borderManager.setColor(color), borderManager.setStyle(style), commandService.executeCommand(SetBorderCommand.id, {\n      unitId,\n      subUnitId\n    });\n  }, \"handler\")\n}, SetBorderPositionCommand = {\n  id: \"sheet.command.set-border-position\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params.value) return !1;\n    const commandService = accessor.get(ICommandService);\n    return accessor.get(BorderStyleManagerService).setType(params.value), commandService.executeCommand(SetBorderCommand.id);\n  }, \"handler\")\n}, SetBorderStyleCommand = {\n  id: \"sheet.command.set-border-style\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService);\n    return accessor.get(BorderStyleManagerService).setStyle(params.value), commandService.executeCommand(SetBorderCommand.id);\n  }, \"handler\")\n}, SetBorderColorCommand = {\n  id: \"sheet.command.set-border-color\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService);\n    return accessor.get(BorderStyleManagerService).setColor(params.value), commandService.executeCommand(SetBorderCommand.id);\n  }, \"handler\")\n}, SetBorderCommand = {\n  id: \"sheet.command.set-border\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), selectionManagerService = accessor.get(SheetsSelectionsService), borderStyleManagerService = accessor.get(BorderStyleManagerService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { worksheet, unitId, subUnitId } = target, selections = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const { style, color, type, activeBorderType } = borderStyleManagerService.getBorderInfo();\n    if (!activeBorderType) return !1;\n    const top = type === BorderType.TOP || type === BorderType.ALL || type === BorderType.OUTSIDE, left = type === BorderType.LEFT || type === BorderType.ALL || type === BorderType.OUTSIDE, bottom = type === BorderType.BOTTOM || type === BorderType.ALL || type === BorderType.OUTSIDE, right = type === BorderType.RIGHT || type === BorderType.ALL || type === BorderType.OUTSIDE, vertical = type === BorderType.VERTICAL || type === BorderType.ALL || type === BorderType.INSIDE, horizontal = type === BorderType.HORIZONTAL || type === BorderType.ALL || type === BorderType.INSIDE, tl_br = type.indexOf(\"tlbr\") > -1, tl_bc = type.indexOf(\"tlbc\") > -1, tl_mr = type.indexOf(\"tlmr\") > -1, bl_tr = type.indexOf(\"bltr\") > -1, ml_tr = type.indexOf(\"mltr\") > -1, bc_tr = type.indexOf(\"bctr\") > -1, range = selections[0], topRangeOut = {\n      startRow: range.startRow - 1,\n      startColumn: range.startColumn,\n      endRow: range.startRow - 1,\n      endColumn: range.endColumn\n    }, leftRangeOut = {\n      startRow: range.startRow,\n      startColumn: range.startColumn - 1,\n      endRow: range.endRow,\n      endColumn: range.startColumn - 1\n    }, bottomRangeOut = {\n      startRow: range.endRow + 1,\n      startColumn: range.startColumn,\n      endRow: range.endRow + 1,\n      endColumn: range.endColumn\n    }, rightRangeOut = {\n      startRow: range.startRow,\n      startColumn: range.endColumn + 1,\n      endRow: range.endRow,\n      endColumn: range.endColumn + 1\n    }, topRange = {\n      startRow: range.startRow,\n      startColumn: range.startColumn,\n      endRow: range.startRow,\n      endColumn: range.endColumn\n    }, leftRange = {\n      startRow: range.startRow,\n      startColumn: range.startColumn,\n      endRow: range.endRow,\n      endColumn: range.startColumn\n    }, bottomRange = {\n      startRow: range.endRow,\n      startColumn: range.startColumn,\n      endRow: range.endRow,\n      endColumn: range.endColumn\n    }, rightRange = {\n      startRow: range.startRow,\n      startColumn: range.endColumn,\n      endRow: range.endRow,\n      endColumn: range.endColumn\n    }, mr = new ObjectMatrix(), border = {\n      s: style,\n      cl: {\n        rgb: color\n      }\n    };\n    function setBorderStyle(range2, defaultStyle, reserve) {\n      range2.startRow < 0 || range2.startColumn < 0 || forEach(range2, (row, column) => {\n        var _a21, _b;\n        const rectangle = worksheet.getMergedCell(row, column);\n        let bdStyle = defaultStyle;\n        if (rectangle && (defaultStyle.bc_tr || defaultStyle.ml_tr || defaultStyle.bl_tr || defaultStyle.tl_mr || defaultStyle.tl_bc || defaultStyle.tl_br)) {\n          if (reserve) {\n            const style2 = Tools.deepClone(\n              (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s\n            );\n            bdStyle = style2 != null && style2.bd ? Object.assign(style2.bd, defaultStyle) : defaultStyle;\n          }\n          mr.setValue(rectangle.startRow, rectangle.startColumn, {\n            s: {\n              bd: bdStyle\n            }\n          });\n        } else {\n          if (reserve) {\n            const style2 = Tools.deepClone((_b = mr.getValue(row, column)) == null ? void 0 : _b.s);\n            bdStyle = style2 != null && style2.bd ? Object.assign(style2.bd, defaultStyle) : defaultStyle;\n          }\n          mr.setValue(row, column, { s: { bd: bdStyle } });\n        }\n      });\n    }\n    __name(setBorderStyle, \"setBorderStyle\"), top && (setBorderStyle(topRangeOut, { b: null }), setBorderStyle(topRange, { t: Tools.deepClone(border) }, !0)), bottom && (setBorderStyle(bottomRangeOut, { t: null }), setBorderStyle(bottomRange, { b: Tools.deepClone(border) }, !0)), left && (setBorderStyle(leftRangeOut, { r: null }), setBorderStyle(leftRange, { l: Tools.deepClone(border) }, !0)), right && (setBorderStyle(rightRangeOut, { l: null }), setBorderStyle(rightRange, { r: Tools.deepClone(border) }, !0)), tl_br && setBorderStyle(range, { tl_br: Tools.deepClone(border) }, !0), tl_bc && setBorderStyle(range, { tl_bc: Tools.deepClone(border) }, !0), tl_mr && setBorderStyle(range, { tl_mr: Tools.deepClone(border) }, !0), bl_tr && setBorderStyle(range, { bl_tr: Tools.deepClone(border) }, !0), ml_tr && setBorderStyle(range, { ml_tr: Tools.deepClone(border) }, !0), bc_tr && setBorderStyle(range, { bc_tr: Tools.deepClone(border) }, !0), vertical && forEach(range, (row, column) => {\n      var _a21, _b, _c, _d;\n      const rectangle = worksheet.getMergedCell(row, column);\n      if (rectangle) {\n        if (rectangle.endColumn !== range.endColumn) {\n          const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { r: Tools.deepClone(border) }) : { r: Tools.deepClone(border) }\n            }\n          });\n        }\n        if (rectangle.startColumn !== range.startColumn) {\n          const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { l: Tools.deepClone(border) }) : { l: Tools.deepClone(border) }\n            }\n          });\n        }\n      } else {\n        if (column !== range.endColumn) {\n          const style2 = (_c = mr.getValue(row, column)) == null ? void 0 : _c.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { r: Tools.deepClone(border) }) : { r: Tools.deepClone(border) }\n            }\n          });\n        }\n        if (column !== range.startColumn) {\n          const style2 = (_d = mr.getValue(row, column)) == null ? void 0 : _d.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { l: Tools.deepClone(border) }) : { l: Tools.deepClone(border) }\n            }\n          });\n        }\n      }\n    }), horizontal && forEach(range, (row, column) => {\n      var _a21, _b, _c, _d;\n      const rectangle = worksheet.getMergedCell(row, column);\n      if (rectangle) {\n        if (rectangle.endRow !== range.endRow) {\n          const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { b: Tools.deepClone(border) }) : { b: Tools.deepClone(border) }\n            }\n          });\n        }\n        if (rectangle.startRow !== range.startRow) {\n          const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { t: Tools.deepClone(border) }) : { t: Tools.deepClone(border) }\n            }\n          });\n        }\n      } else {\n        if (row !== range.endRow) {\n          const style2 = (_c = mr.getValue(row, column)) == null ? void 0 : _c.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { b: Tools.deepClone(border) }) : { b: Tools.deepClone(border) }\n            }\n          });\n        }\n        if (row !== range.startRow) {\n          const style2 = (_d = mr.getValue(row, column)) == null ? void 0 : _d.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { t: Tools.deepClone(border) }) : { t: Tools.deepClone(border) }\n            }\n          });\n        }\n      }\n    }), !top && !bottom && !left && !right && !vertical && !horizontal && !tl_br && !tl_bc && !tl_mr && !bl_tr && !ml_tr && !bc_tr && (setBorderStyle(topRangeOut, { b: null }), setBorderStyle(topRange, { t: null }, !0), setBorderStyle(bottomRangeOut, { t: null }), setBorderStyle(bottomRange, { b: null }, !0), setBorderStyle(leftRangeOut, { r: null }), setBorderStyle(leftRange, { l: null }, !0), setBorderStyle(rightRangeOut, { l: null }), setBorderStyle(rightRange, { r: null }, !0), setBorderStyle(range, { tl_br: null }, !0), setBorderStyle(range, { tl_bc: null }, !0), setBorderStyle(range, { tl_mr: null }, !0), setBorderStyle(range, { bl_tr: null }, !0), setBorderStyle(range, { ml_tr: null }, !0), setBorderStyle(range, { bc_tr: null }, !0), forEach(range, (row, column) => {\n      var _a21, _b, _c, _d, _e, _f, _g, _h;\n      const rectangle = worksheet.getMergedCell(row, column);\n      if (rectangle) {\n        if (rectangle.endColumn !== range.endColumn) {\n          const style2 = (_a21 = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _a21.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { r: null }) : { r: null }\n            }\n          });\n        }\n        if (rectangle.startColumn !== range.startColumn) {\n          const style2 = (_b = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _b.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { l: null }) : { l: null }\n            }\n          });\n        }\n        if (rectangle.endRow !== range.endRow) {\n          const style2 = (_c = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _c.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { b: null }) : { b: null }\n            }\n          });\n        }\n        if (rectangle.startRow !== range.startRow) {\n          const style2 = (_d = mr.getValue(rectangle.startRow, rectangle.startColumn)) == null ? void 0 : _d.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { t: null }) : { t: null }\n            }\n          });\n        }\n      } else {\n        if (column !== range.endColumn) {\n          const style2 = (_e = mr.getValue(row, column)) == null ? void 0 : _e.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { r: null }) : { r: null }\n            }\n          });\n        }\n        if (column !== range.startColumn) {\n          const style2 = (_f = mr.getValue(row, column)) == null ? void 0 : _f.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { l: null }) : { l: null }\n            }\n          });\n        }\n        if (row !== range.endRow) {\n          const style2 = (_g = mr.getValue(row, column)) == null ? void 0 : _g.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { b: null }) : { b: null }\n            }\n          });\n        }\n        if (row !== range.startRow) {\n          const style2 = (_h = mr.getValue(row, column)) == null ? void 0 : _h.s;\n          mr.setValue(row, column, {\n            s: {\n              bd: style2 != null && style2.bd ? Object.assign(style2.bd, { t: null }) : { t: null }\n            }\n          });\n        }\n      }\n    }));\n    const setRangeValuesMutationParams = {\n      unitId,\n      subUnitId,\n      cellValue: mr.getData()\n    }, undoSetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      setRangeValuesMutationParams\n    );\n    return commandService.syncExecuteCommand(SetRangeValuesMutation.id, setRangeValuesMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetRangeValuesMutation.id, params: undoSetRangeValuesMutationParams }],\n      redoMutations: [{ id: SetRangeValuesMutation.id, params: setRangeValuesMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetColHiddenUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges: params.ranges\n  };\n}, \"SetColHiddenUndoMutationFactory\"), SetColHiddenMutation = {\n  id: \"sheet.mutation.set-col-hidden\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!universheet)\n      return !1;\n    const manager = universheet.getSheetBySheetId(params.subUnitId).getColumnManager();\n    for (let i = 0; i < params.ranges.length; i++) {\n      const range = params.ranges[i];\n      for (let j = range.startColumn; j < range.endColumn + 1; j++) {\n        const column = manager.getColumnOrCreate(j);\n        column != null && (column.hd = BooleanNumber.TRUE);\n      }\n    }\n    return !0;\n  }, \"handler\")\n}, SetColVisibleUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges: params.ranges\n  };\n}, \"SetColVisibleUndoMutationFactory\"), SetColVisibleMutation = {\n  id: \"sheet.mutation.set-col-visible\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!universheet)\n      return !1;\n    const manager = universheet.getSheetBySheetId(params.subUnitId).getColumnManager();\n    for (let i = 0; i < params.ranges.length; i++) {\n      const range = params.ranges[i];\n      for (let j = range.startColumn; j < range.endColumn + 1; j++) {\n        const column = manager.getColumnOrCreate(j);\n        column != null && (column.hd = BooleanNumber.FALSE);\n      }\n    }\n    return !0;\n  }, \"handler\")\n}, SetSpecificColsVisibleCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-col-visible-on-cols\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const { unitId, subUnitId, ranges } = params, sheetInterceptorService = accessor.get(SheetInterceptorService), commandService = accessor.get(ICommandService), instanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(instanceService, { unitId, subUnitId });\n    if (!target) return !1;\n    const { worksheet } = target, redoMutationParams = {\n      unitId,\n      subUnitId,\n      ranges\n    }, setSelectionOperationParams = {\n      unitId,\n      subUnitId,\n      reveal: !0,\n      selections: ranges.map((r) => ({ range: r, primary: getPrimaryForRange(r, worksheet), style: null }))\n    }, undoMutationParams = SetColVisibleUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n      unitId,\n      subUnitId,\n      selections: getSelectionsAfterHiding$1(ranges).map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, result = sequenceExecute([\n      { id: SetColVisibleMutation.id, params: redoMutationParams },\n      { id: SetSelectionsOperation.id, params: setSelectionOperationParams }\n    ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetSpecificColsVisibleCommand.id,\n      params\n    }), interceptedResult = sequenceExecute([...intercepted.redos], commandService);\n    return result.result && interceptedResult.result && accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        { id: SetColHiddenMutation.id, params: undoMutationParams },\n        { id: SetSelectionsOperation.id, params: undoSetSelectionsOperationParams },\n        ...(_a20 = intercepted.undos) != null ? _a20 : []\n      ],\n      redoMutations: [\n        ...(_b = intercepted.preRedos) != null ? _b : [],\n        { id: SetColVisibleMutation.id, params: redoMutationParams },\n        { id: SetSelectionsOperation.id, params: setSelectionOperationParams },\n        ...intercepted.redos\n      ]\n    }), !0;\n  }, \"handler\")\n}, SetSelectedColsVisibleCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-selected-cols-visible\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), commandService = accessor.get(ICommandService), ranges = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range).filter((r) => r.rangeType === RANGE_TYPE.COLUMN);\n    if (!(ranges != null && ranges.length)) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet, unitId, subUnitId } = target, hiddenRanges = ranges.map((r) => worksheet.getHiddenCols(r.startColumn, r.endColumn)).flat();\n    return commandService.executeCommand(SetSpecificColsVisibleCommand.id, {\n      unitId,\n      subUnitId,\n      ranges: hiddenRanges\n    });\n  }, \"handler\")\n}, SetColHiddenCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-col-hidden\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), sheetInterceptorService = accessor.get(SheetInterceptorService), univerInstanceService = accessor.get(IUniverInstanceService), commandService = accessor.get(ICommandService);\n    let ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range).filter((r) => r.rangeType === RANGE_TYPE.COLUMN);\n    if (!(ranges != null && ranges.length)) return !1;\n    const target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { worksheet, unitId, subUnitId } = target;\n    ranges = divideRangesByHiddenCols(target.worksheet, ranges);\n    const redoMutationParams = { unitId, subUnitId, ranges }, setSelectionOperationParams = {\n      unitId,\n      subUnitId,\n      selections: getSelectionsAfterHiding$1(ranges).map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, undoMutationParams = SetColHiddenUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n      unitId,\n      subUnitId,\n      reveal: !0,\n      selections: ranges.map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, result = sequenceExecute([\n      { id: SetColHiddenMutation.id, params: redoMutationParams },\n      { id: SetSelectionsOperation.id, params: setSelectionOperationParams }\n    ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetColHiddenCommand.id,\n      params: redoMutationParams\n    }), interceptedResult = sequenceExecute([...intercepted.redos], commandService);\n    return result.result && interceptedResult.result ? (accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        { id: SetColVisibleMutation.id, params: undoMutationParams },\n        { id: SetSelectionsOperation.id, params: undoSetSelectionsOperationParams },\n        ...(_c = intercepted.undos) != null ? _c : []\n      ],\n      redoMutations: [\n        ...(_d = intercepted.preRedos) != null ? _d : [],\n        { id: SetColHiddenMutation.id, params: redoMutationParams },\n        { id: SetSelectionsOperation.id, params: setSelectionOperationParams },\n        ...intercepted.redos\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n};\nfunction divideRangesByHiddenCols(worksheet, ranges) {\n  const endRow = worksheet.getRowCount() - 1, hiddenCols = worksheet.getHiddenCols(), divided = [];\n  return ranges.forEach((range) => {\n    const hiddenColsInSelection = hiddenCols.filter((c) => c.startColumn >= range.startColumn && c.endColumn <= range.endColumn);\n    if (hiddenColsInSelection.length) {\n      let startColumn = range.startColumn;\n      hiddenColsInSelection.forEach((hiddenRange) => {\n        hiddenRange.startColumn > startColumn && (divided.push({ startColumn, endColumn: hiddenRange.startColumn - 1, startRow: 0, endRow }), startColumn = hiddenRange.endColumn + 1);\n      }), startColumn <= range.endColumn && divided.push({ startColumn, endColumn: range.endColumn, startRow: 0, endRow });\n    } else\n      divided.push(range);\n  }), divided;\n}\n__name(divideRangesByHiddenCols, \"divideRangesByHiddenCols\");\nfunction getSelectionsAfterHiding$1(ranges) {\n  return mergeSelections$1(ranges).map((range) => {\n    const column = range.startColumn === 0 ? range.endColumn + 1 : range.startColumn - 1;\n    return {\n      ...range,\n      startColumn: column,\n      endColumn: column\n    };\n  });\n}\n__name(getSelectionsAfterHiding$1, \"getSelectionsAfterHiding$1\");\nfunction mergeSelections$1(ranges) {\n  const merged = [];\n  let current;\n  return ranges.sort((a, b) => a.startColumn - b.startColumn).forEach((range) => {\n    if (!current) {\n      current = range;\n      return;\n    }\n    current.endColumn === range.startColumn - 1 ? current.endColumn = range.endColumn : (merged.push(current), current = range);\n  }), merged.push(current), merged;\n}\n__name(mergeSelections$1, \"mergeSelections$1\");\nconst SetFrozenMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n  if (universheet == null)\n    throw new Error(\"universheet is null error!\");\n  const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n  if (worksheet == null)\n    throw new Error(\"worksheet is null error!\");\n  const freeze = worksheet.getConfig().freeze;\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ...freeze\n  };\n}, \"SetFrozenMutationFactory\"), SetFrozenMutation = {\n  id: \"sheet.mutation.set-frozen\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const config = worksheet.getConfig(), { startRow, startColumn, ySplit, xSplit } = params;\n    return config.freeze = { startRow, startColumn, ySplit, xSplit }, !0;\n  }, \"handler\")\n}, SetFrozenCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-frozen\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId, worksheet } = target, { startColumn, startRow, xSplit, ySplit } = params;\n    if (startRow >= worksheet.getRowCount() || startColumn >= worksheet.getColumnCount() || xSplit >= worksheet.getColumnCount() || ySplit >= worksheet.getRowCount())\n      return !1;\n    const redoMutationParams = {\n      unitId,\n      subUnitId,\n      ...params\n    }, undoMutationParams = SetFrozenMutationFactory(accessor, redoMutationParams);\n    return commandService.syncExecuteCommand(SetFrozenMutation.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetFrozenMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetFrozenMutation.id, params: redoMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetFrozenCancelCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-frozen-cancel\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId } = target, redoMutationParams = {\n      unitId,\n      subUnitId,\n      startRow: -1,\n      startColumn: -1,\n      ySplit: 0,\n      xSplit: 0\n    }, undoMutationParams = SetFrozenMutationFactory(accessor, redoMutationParams);\n    return commandService.syncExecuteCommand(SetFrozenMutation.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetFrozenMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetFrozenMutation.id, params: redoMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetRowVisibleUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges: params.ranges\n  };\n}, \"SetRowVisibleUndoMutationFactory\"), SetRowVisibleMutation = {\n  id: \"sheet.mutation.set-row-visible\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const manager = universheet.getSheetBySheetId(params.subUnitId).getRowManager();\n    for (let i = 0; i < params.ranges.length; i++) {\n      const range = params.ranges[i];\n      for (let j = range.startRow; j < range.endRow + 1; j++) {\n        const row = manager.getRowOrCreate(j);\n        row != null && (row.hd = 0);\n      }\n    }\n    return !0;\n  }, \"handler\")\n}, SetRowHiddenUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  if (accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId) == null)\n    throw new Error(\"universheet is null error!\");\n  return {\n    unitId: params.unitId,\n    subUnitId: params.subUnitId,\n    ranges: params.ranges\n  };\n}, \"SetRowHiddenUndoMutationFactory\"), SetRowHiddenMutation = {\n  id: \"sheet.mutation.set-row-hidden\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      throw new Error(\"universheet is null error!\");\n    const manager = universheet.getSheetBySheetId(params.subUnitId).getRowManager();\n    for (let i = 0; i < params.ranges.length; i++) {\n      const range = params.ranges[i];\n      for (let j = range.startRow; j < range.endRow + 1; j++) {\n        const row = manager.getRowOrCreate(j);\n        row != null && (row.hd = 1);\n      }\n    }\n    return !0;\n  }, \"handler\")\n}, SetSpecificRowsVisibleCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-specific-rows-visible\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c;\n    const { unitId, subUnitId, ranges } = params, commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), { unitId, subUnitId });\n    if (!target) return !1;\n    const { worksheet } = target, redoMutationParams = { unitId, subUnitId, ranges }, setSelectionOperationParams = {\n      unitId,\n      subUnitId,\n      reveal: !0,\n      selections: ranges.map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, undoMutationParams = SetRowVisibleUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n      unitId,\n      subUnitId,\n      selections: getSelectionsAfterHiding(ranges).map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, result = sequenceExecute(\n      [\n        { id: SetRowVisibleMutation.id, params: redoMutationParams },\n        { id: SetSelectionsOperation.id, params: setSelectionOperationParams }\n      ],\n      commandService\n    ), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetSpecificRowsVisibleCommand.id,\n      params\n    }), interceptedResult = sequenceExecute([...intercepted.redos], commandService);\n    return result.result && interceptedResult.result && undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_a20 = intercepted.preUndos) != null ? _a20 : [],\n        { id: SetRowHiddenMutation.id, params: undoMutationParams },\n        { id: SetSelectionsOperation.id, params: undoSetSelectionsOperationParams },\n        ...(_b = intercepted.undos) != null ? _b : []\n      ],\n      redoMutations: [\n        ...(_c = intercepted.preRedos) != null ? _c : [],\n        { id: SetRowVisibleMutation.id, params: redoMutationParams },\n        { id: SetSelectionsOperation.id, params: setSelectionOperationParams },\n        ...intercepted.redos\n      ]\n    }), !0;\n  }, \"handler\")\n}, SetSelectedRowsVisibleCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-selected-rows-visible\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), univerInstanceService = accessor.get(IUniverInstanceService), commandService = accessor.get(ICommandService), ranges = (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range).filter((r) => r.rangeType === RANGE_TYPE.ROW);\n    if (!(ranges != null && ranges.length)) return !1;\n    const target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { worksheet, unitId, subUnitId } = target, hiddenRanges = ranges.map((r) => worksheet.getHiddenRows(r.startRow, r.endRow)).flat();\n    return commandService.executeCommand(SetSpecificRowsVisibleCommand.id, {\n      unitId,\n      subUnitId,\n      ranges: hiddenRanges\n    });\n  }, \"handler\")\n}, SetRowHiddenCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-rows-hidden\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d, _e, _f;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService);\n    let ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range).filter((r) => r.rangeType === RANGE_TYPE.ROW);\n    if (!(ranges != null && ranges.length)) return !1;\n    const target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    ranges = divideRangesByHiddenRows(target.worksheet, ranges);\n    const { unitId, subUnitId, worksheet } = target, redoMutationParams = { unitId, subUnitId, ranges }, setSelectionOperationParams = {\n      unitId,\n      subUnitId,\n      selections: getSelectionsAfterHiding(ranges).map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, undoMutationParams = SetRowHiddenUndoMutationFactory(accessor, redoMutationParams), undoSetSelectionsOperationParams = {\n      unitId,\n      subUnitId,\n      reveal: !0,\n      selections: ranges.map((range) => ({\n        range,\n        primary: getPrimaryForRange(range, worksheet),\n        style: null\n      }))\n    }, intercepted = sheetInterceptorService.onCommandExecute({ id: SetRowHiddenCommand.id, params: redoMutationParams });\n    return sequenceExecute([\n      ...(_c = intercepted.preRedos) != null ? _c : [],\n      { id: SetRowHiddenMutation.id, params: redoMutationParams },\n      { id: SetSelectionsOperation.id, params: setSelectionOperationParams },\n      ...intercepted.redos\n    ], commandService).result && undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_d = intercepted.preUndos) != null ? _d : [],\n        { id: SetRowVisibleMutation.id, params: undoMutationParams },\n        { id: SetSelectionsOperation.id, params: undoSetSelectionsOperationParams },\n        ...(_e = intercepted.undos) != null ? _e : []\n      ],\n      redoMutations: [\n        ...(_f = intercepted.preRedos) != null ? _f : [],\n        { id: SetRowHiddenMutation.id, params: redoMutationParams },\n        { id: SetSelectionsOperation.id, params: setSelectionOperationParams },\n        ...intercepted.redos\n      ]\n    }), !0;\n  }, \"handler\")\n};\nfunction divideRangesByHiddenRows(worksheet, ranges) {\n  const endCol = worksheet.getMaxColumns() - 1, hiddenRows = worksheet.getHiddenRows(), divided = [];\n  return ranges.forEach((range) => {\n    const hiddenRowsInThisRange = hiddenRows.filter((r) => r.startRow >= range.startRow && r.endRow <= range.endRow);\n    if (hiddenRowsInThisRange.length) {\n      let startRow = range.startRow;\n      hiddenRowsInThisRange.forEach((hiddenRange) => {\n        hiddenRange.startRow > startRow && (divided.push({ startRow, endRow: hiddenRange.startRow - 1, startColumn: 0, endColumn: endCol }), startRow = hiddenRange.endRow + 1);\n      }), startRow <= range.endRow && divided.push({ startRow, endRow: range.endRow, startColumn: 0, endColumn: endCol });\n    } else\n      divided.push(range);\n  }), divided;\n}\n__name(divideRangesByHiddenRows, \"divideRangesByHiddenRows\");\nfunction getSelectionsAfterHiding(ranges) {\n  return mergeSelections(ranges).map((range) => {\n    const row = range.startRow === 0 ? range.endRow + 1 : range.startRow - 1;\n    return {\n      ...range,\n      startRow: row,\n      endRow: row\n    };\n  });\n}\n__name(getSelectionsAfterHiding, \"getSelectionsAfterHiding\");\nfunction mergeSelections(ranges) {\n  const merged = [];\n  let current;\n  return ranges.sort((a, b) => a.startRow - b.startRow).forEach((range) => {\n    if (!current) {\n      current = range;\n      return;\n    }\n    range.startRow === current.endRow + 1 ? current.endRow = range.endRow : (merged.push(current), current = range);\n  }), merged.push(current), merged;\n}\n__name(mergeSelections, \"mergeSelections\");\nconst SetStyleCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-style\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    const univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId, worksheet } = target, { range, style } = params, commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), selectionManagerService = accessor.get(SheetsSelectionsService), ranges = range ? [range] : (_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(ranges != null && ranges.length))\n      return !1;\n    const cellValue = new ObjectMatrix(), iterator = createRangeIteratorWithSkipFilteredRows(worksheet);\n    if (Tools.isArray(style.value))\n      for (let i = 0; i < ranges.length; i++)\n        iterator.forOperableEach(ranges[i], (r, c, range2) => {\n          cellValue.setValue(r, c, {\n            s: {\n              [style.type]: style.value[r - range2.startRow][c - range2.startColumn]\n            }\n          });\n        });\n    else\n      for (let i = 0; i < ranges.length; i++) {\n        const styleObj = {\n          s: {\n            [style.type]: style.value\n          }\n        };\n        iterator.forOperableEach(ranges[i], (r, c) => cellValue.setValue(r, c, styleObj));\n      }\n    const setRangeValuesMutationParams = {\n      subUnitId,\n      unitId,\n      cellValue: cellValue.getMatrix()\n    }, undoSetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      setRangeValuesMutationParams\n    ), setRangeValuesResult = commandService.syncExecuteCommand(\n      SetRangeValuesMutation.id,\n      setRangeValuesMutationParams\n    ), { undos, redos } = accessor.get(SheetInterceptorService).onCommandExecute({\n      id: SetStyleCommand.id,\n      params\n    }), result = sequenceExecute([...redos], commandService);\n    return setRangeValuesResult && result.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetRangeValuesMutation.id, params: undoSetRangeValuesMutationParams }, ...undos],\n      redoMutations: [{ id: SetRangeValuesMutation.id, params: setRangeValuesMutationParams }, ...redos]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetBoldCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-bold\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selection = accessor.get(SheetsSelectionsService).getCurrentLastSelection();\n    if (!selection) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet } = target, { actualRow, actualColumn } = selection.primary, setStyleParams = {\n      style: {\n        type: \"bl\",\n        value: worksheet.getRange(actualRow, actualColumn).getFontWeight() === FontWeight.BOLD ? BooleanNumber.FALSE : BooleanNumber.TRUE\n      }\n    };\n    return accessor.get(ICommandService).executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetItalicCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-italic\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selection = accessor.get(SheetsSelectionsService).getCurrentLastSelection();\n    if (!selection) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet } = target;\n    let currentlyItalic = !0;\n    if (selection.primary) {\n      const { startRow, startColumn } = selection.primary;\n      currentlyItalic = worksheet.getRange(startRow, startColumn).getFontStyle() === FontItalic.ITALIC;\n    }\n    const setStyleParams = {\n      style: {\n        type: \"it\",\n        value: currentlyItalic ? BooleanNumber.FALSE : BooleanNumber.TRUE\n      }\n    };\n    return accessor.get(ICommandService).executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetUnderlineCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-underline\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selection = accessor.get(SheetsSelectionsService).getCurrentLastSelection();\n    if (!selection) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet } = target;\n    let currentlyUnderline = !0;\n    selection.primary && (currentlyUnderline = !!worksheet.getRange(selection.primary.startRow, selection.primary.startColumn).getUnderline().s);\n    const setStyleParams = {\n      style: {\n        type: \"ul\",\n        value: {\n          s: currentlyUnderline ? BooleanNumber.FALSE : BooleanNumber.TRUE\n        }\n      }\n    };\n    return accessor.get(ICommandService).executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetStrikeThroughCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-stroke\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selection = accessor.get(SheetsSelectionsService).getCurrentLastSelection();\n    if (!selection) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet } = target;\n    let currentlyStrokeThrough = !0;\n    selection.primary && (currentlyStrokeThrough = !!worksheet.getRange(selection.primary.actualRow, selection.primary.actualColumn).getStrikeThrough().s);\n    const setStyleParams = {\n      style: {\n        type: \"st\",\n        value: { s: currentlyStrokeThrough ? BooleanNumber.FALSE : BooleanNumber.TRUE }\n      }\n    };\n    return accessor.get(ICommandService).executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetOverlineCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-overline\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const selection = accessor.get(SheetsSelectionsService).getCurrentLastSelection();\n    if (!selection) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet } = target;\n    let currentlyOverline = !0;\n    selection.primary && (currentlyOverline = !!worksheet.getRange(selection.primary.startRow, selection.primary.startColumn).getOverline().s);\n    const setStyleParams = {\n      style: {\n        type: \"ol\",\n        value: {\n          s: currentlyOverline ? BooleanNumber.FALSE : BooleanNumber.TRUE\n        }\n      }\n    };\n    return accessor.get(ICommandService).executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetFontFamilyCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-font-family\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"ff\",\n        value: params.value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetFontSizeCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-font-size\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"fs\",\n        value: params.value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetTextColorCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-text-color\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params || !params.value)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"cl\",\n        value: {\n          rgb: params.value\n        }\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, ResetTextColorCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.reset-text-color\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"cl\",\n        value: {\n          rgb: null\n          // use null to reset text color\n        }\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetBackgroundColorCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-background-color\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params || !params.value)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"bg\",\n        value: {\n          rgb: params.value\n        }\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, ResetBackgroundColorCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.reset-background-color\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"bg\",\n        value: {\n          rgb: null\n          // use null to reset background color\n        }\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetVerticalTextAlignCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-vertical-text-align\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      unitId: params.unitId,\n      subUnitId: params.subUnitId,\n      range: params.range,\n      style: {\n        type: \"vt\",\n        value: params.value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetHorizontalTextAlignCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-horizontal-text-align\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      unitId: params.unitId,\n      subUnitId: params.subUnitId,\n      range: params.range,\n      style: {\n        type: \"ht\",\n        value: params.value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetTextWrapCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-text-wrap\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), setStyleParams = {\n      unitId: params.unitId,\n      subUnitId: params.subUnitId,\n      range: params.range,\n      style: {\n        type: \"tb\",\n        value: params.value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetTextRotationCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-text-rotation\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    if (!params)\n      return !1;\n    const value = typeof params.value == \"number\" ? { a: params.value } : { a: 0, v: BooleanNumber.TRUE }, commandService = accessor.get(ICommandService), setStyleParams = {\n      style: {\n        type: \"tr\",\n        value\n      }\n    };\n    return commandService.executeCommand(SetStyleCommand.id, setStyleParams);\n  }, \"handler\")\n}, SetTabColorUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const oldTabColor = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().tabColor;\n  return {\n    ...Tools.deepClone(params),\n    color: oldTabColor\n  };\n}, \"SetTabColorUndoMutationFactory\"), SetTabColorMutation = {\n  id: \"sheet.mutation.set-tab-color\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!workbook) return !1;\n    const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n    return worksheet ? (worksheet.getConfig().tabColor = params.color, !0) : !1;\n  }, \"handler\")\n}, SetTabColorCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-tab-color\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { unitId, subUnitId } = target, setTabColorMutationParams = {\n      color: params.value,\n      unitId,\n      subUnitId\n    }, undoMutationParams = SetTabColorUndoMutationFactory(accessor, setTabColorMutationParams);\n    return commandService.syncExecuteCommand(SetTabColorMutation.id, setTabColorMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetTabColorMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetTabColorMutation.id, params: setTabColorMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetActiveOperation = {\n  id: \"sheet.operation.set-worksheet-active\",\n  type: CommandType.OPERATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!workbook) return !1;\n    const worksheets = workbook.getWorksheets();\n    for (const [, worksheet] of worksheets)\n      if (worksheet.getSheetId() === params.subUnitId)\n        return workbook.setActiveSheet(worksheet), !0;\n    return !1;\n  }, \"handler\")\n}, SET_WORKSHEET_ACTIVE_DELAY = 4, SetWorksheetActivateCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-activate\",\n  handler: /* @__PURE__ */ __name((accessor, params, options) => {\n    const commandService = accessor.get(ICommandService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { unitId, subUnitId } = target;\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const result = commandService.syncExecuteCommand(SetWorksheetActiveOperation.id, {\n          unitId,\n          subUnitId\n        }, options);\n        resolve(result);\n      }, SET_WORKSHEET_ACTIVE_DELAY);\n    });\n  }, \"handler\")\n}, SetWorksheetColWidthMutationFactory = /* @__PURE__ */ __name((params, worksheet) => {\n  const { unitId, subUnitId, ranges } = params, colWidth = {}, manager = worksheet.getColumnManager();\n  for (let i = 0; i < ranges.length; i++) {\n    const range = ranges[i];\n    for (let j = range.startColumn; j < range.endColumn + 1; j++) {\n      const column = manager.getColumnOrCreate(j);\n      colWidth[j] = column.w;\n    }\n  }\n  return {\n    unitId,\n    subUnitId,\n    ranges,\n    colWidth\n  };\n}, \"SetWorksheetColWidthMutationFactory\"), SetWorksheetColWidthMutation = {\n  id: \"sheet.mutation.set-worksheet-col-width\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { worksheet } = target, defaultColumnWidth = worksheet.getConfig().defaultColumnWidth, manager = worksheet.getColumnManager(), ranges = params.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      for (let j = range.startColumn; j < range.endColumn + 1; j++) {\n        const column = manager.getColumnOrCreate(j);\n        typeof params.colWidth == \"number\" ? column.w = params.colWidth : column.w = (_a20 = params.colWidth[j]) != null ? _a20 : defaultColumnWidth;\n      }\n    }\n    return !0;\n  }, \"handler\")\n}, DeltaColumnWidthCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.delta-column-width\",\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const selections = accessor.get(SheetsSelectionsService).getCurrentSelections();\n    if (!(selections != null && selections.length))\n      return !1;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet, unitId, subUnitId } = target, { anchorCol, deltaX } = params, destColumnWidth = worksheet.getColumnWidth(anchorCol) + deltaX, isAllSheetRange = selections.length === 1 && selections[0].range.rangeType === RANGE_TYPE.ALL, colSelections = selections.filter((s) => s.range.rangeType === RANGE_TYPE.COLUMN), rangeType = isAllSheetRange ? RANGE_TYPE.ALL : colSelections.some(({ range }) => {\n      const { startColumn, endColumn } = range;\n      return startColumn <= anchorCol && anchorCol <= endColumn;\n    }) ? RANGE_TYPE.COLUMN : RANGE_TYPE.NORMAL;\n    let redoMutationParams;\n    if (rangeType === RANGE_TYPE.ALL) {\n      const rowCount = worksheet.getRowCount(), allColRanges = new Array(worksheet.getColumnCount()).fill(void 0).map(\n        (_, index) => ({ startRow: 0, endRow: rowCount - 1, startColumn: index, endColumn: index })\n      );\n      redoMutationParams = {\n        subUnitId,\n        unitId,\n        colWidth: destColumnWidth,\n        ranges: allColRanges\n      };\n    } else rangeType === RANGE_TYPE.COLUMN ? redoMutationParams = {\n      subUnitId,\n      unitId,\n      ranges: colSelections.map((s) => Rectangle.clone(s.range)),\n      colWidth: destColumnWidth\n    } : redoMutationParams = {\n      subUnitId,\n      unitId,\n      colWidth: destColumnWidth,\n      ranges: [\n        {\n          startRow: 0,\n          endRow: worksheet.getMaxRows() - 1,\n          startColumn: anchorCol,\n          endColumn: anchorCol\n        }\n      ]\n    };\n    const { undos, redos } = accessor.get(SheetInterceptorService).onCommandExecute({\n      id: DeltaColumnWidthCommand.id,\n      params: redoMutationParams\n    }), undoMutationParams = SetWorksheetColWidthMutationFactory(\n      redoMutationParams,\n      worksheet\n    ), setColWidthResult = commandService.syncExecuteCommand(\n      SetWorksheetColWidthMutation.id,\n      redoMutationParams\n    ), result = sequenceExecute([...redos], commandService);\n    return setColWidthResult && result.result && undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetWorksheetColWidthMutation.id, params: undoMutationParams }, ...undos],\n      redoMutations: [{ id: SetWorksheetColWidthMutation.id, params: redoMutationParams }, ...redos]\n    }), !0;\n  }, \"handler\")\n}, SetColWidthCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-col-width\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b, _c, _d;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), selections = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range);\n    if (!(selections != null && selections.length)) return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { subUnitId, unitId, worksheet } = target, redoMutationParams = {\n      subUnitId,\n      unitId,\n      ranges: selections,\n      colWidth: params.value\n    }, undoMutationParams = SetWorksheetColWidthMutationFactory(redoMutationParams, worksheet), setColWidthResult = commandService.syncExecuteCommand(SetWorksheetColWidthMutation.id, redoMutationParams), { undos, redos } = accessor.get(SheetInterceptorService).onCommandExecute({\n      id: SetColWidthCommand.id,\n      params: redoMutationParams\n    }), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetColWidthCommand.id,\n      params: redoMutationParams\n    }), result = sequenceExecute([...redos, ...intercepted.redos], commandService);\n    return setColWidthResult && result.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [...(_c = intercepted.preUndos) != null ? _c : [], { id: SetWorksheetColWidthMutation.id, params: undoMutationParams }, ...undos],\n      redoMutations: [...(_d = intercepted.preRedos) != null ? _d : [], { id: SetWorksheetColWidthMutation.id, params: redoMutationParams }, ...redos]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetHideMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const target = getSheetMutationTarget(accessor.get(IUniverInstanceService), params);\n  if (!target)\n    throw new Error(\"[SetWorksheetHideMutationFactory]: worksheet is null error!\");\n  const { worksheet } = target;\n  return {\n    hidden: worksheet.isSheetHidden(),\n    unitId: params.unitId,\n    subUnitId: worksheet.getSheetId()\n  };\n}, \"SetWorksheetHideMutationFactory\"), SetWorksheetHideMutation = {\n  id: \"sheet.mutation.set-worksheet-hidden\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      return !1;\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    return worksheet ? (worksheet.getConfig().hidden = params.hidden, !0) : !1;\n  }, \"handler\")\n}, SetWorksheetHideCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-hidden\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), errorService = accessor.get(ErrorService), localeService = accessor.get(LocaleService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { workbook, worksheet, unitId, subUnitId } = target;\n    if (worksheet.getConfig().hidden === BooleanNumber.TRUE) return !1;\n    const redoMutationParams = {\n      unitId,\n      subUnitId,\n      hidden: BooleanNumber.TRUE\n    }, undoMutationParams = SetWorksheetHideMutationFactory(accessor, redoMutationParams);\n    return workbook.getSheets().filter((sheet) => sheet.getConfig().hidden === BooleanNumber.FALSE).length === 1 ? (errorService.emit(localeService.t(\"sheets.info.hideSheet\")), !1) : commandService.syncExecuteCommand(SetWorksheetHideMutation.id, redoMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetWorksheetHideMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetWorksheetHideMutation.id, params: redoMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetNameMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const target = getSheetMutationTarget(accessor.get(IUniverInstanceService), params);\n  if (!target)\n    throw new Error(\"[SetWorksheetNameMutationFactory]: worksheet is null error!\");\n  const { worksheet } = target;\n  return {\n    unitId: params.unitId,\n    name: worksheet.getName(),\n    subUnitId: worksheet.getSheetId()\n  };\n}, \"SetWorksheetNameMutationFactory\"), SetWorksheetNameMutation = {\n  id: \"sheet.mutation.set-worksheet-name\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const universheet = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (universheet == null)\n      return !1;\n    const worksheet = universheet.getSheetBySheetId(params.subUnitId);\n    return worksheet ? (worksheet.getConfig().name = params.name, !0) : !1;\n  }, \"handler\")\n}, SetWorksheetNameCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-name\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), sheetInterceptorService = accessor.get(SheetInterceptorService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { unitId, subUnitId } = target, redoMutationParams = {\n      subUnitId,\n      name: params.name,\n      unitId\n    }, undoMutationParams = SetWorksheetNameMutationFactory(\n      accessor,\n      redoMutationParams\n    ), interceptorCommands = sheetInterceptorService.onCommandExecute({\n      id: SetWorksheetNameCommand.id,\n      params\n    }), redos = [\n      ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n      { id: SetWorksheetNameMutation.id, params: redoMutationParams },\n      ...interceptorCommands.redos\n    ], undos = [\n      ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n      { id: SetWorksheetNameMutation.id, params: undoMutationParams },\n      ...interceptorCommands.undos\n    ];\n    return await sequenceExecute(redos, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetOrderUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => ({\n  ...Tools.deepClone(params),\n  toOrder: params.fromOrder,\n  fromOrder: params.toOrder\n}), \"SetWorksheetOrderUndoMutationFactory\"), SetWorksheetOrderMutation = {\n  id: \"sheet.mutation.set-worksheet-order\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!workbook) return !1;\n    const config = workbook.getConfig();\n    return config.sheetOrder.splice(params.fromOrder, 1), config.sheetOrder.splice(params.toOrder, 0, params.subUnitId), !0;\n  }, \"handler\")\n}, SetWorksheetOrderCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-order\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { workbook, unitId, subUnitId } = target, setWorksheetOrderMutationParams = {\n      fromOrder: workbook.getConfig().sheetOrder.indexOf(subUnitId),\n      toOrder: params.order,\n      unitId,\n      subUnitId\n    }, undoMutationParams = SetWorksheetOrderUndoMutationFactory(accessor, setWorksheetOrderMutationParams);\n    return commandService.syncExecuteCommand(SetWorksheetOrderMutation.id, setWorksheetOrderMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetWorksheetOrderMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetWorksheetOrderMutation.id, params: setWorksheetOrderMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, MAXIMUM_ROW_HEIGHT = 2e3, SetWorksheetRowHeightMutationFactory = /* @__PURE__ */ __name((params, worksheet) => {\n  const { unitId, subUnitId, ranges } = params, rowHeight = {}, manager = worksheet.getRowManager();\n  for (const { startRow, endRow } of ranges)\n    for (let rowIndex = startRow; rowIndex < endRow + 1; rowIndex++) {\n      const row = manager.getRowOrCreate(rowIndex);\n      rowHeight[rowIndex] = row.h;\n    }\n  return {\n    unitId,\n    subUnitId,\n    ranges,\n    rowHeight\n  };\n}, \"SetWorksheetRowHeightMutationFactory\"), SetWorksheetRowIsAutoHeightMutationFactory = /* @__PURE__ */ __name((params, worksheet) => {\n  const { unitId, subUnitId, ranges } = params, autoHeightHash = {}, manager = worksheet.getRowManager();\n  for (const { startRow, endRow } of ranges)\n    for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\n      const row = manager.getRowOrCreate(rowIndex);\n      autoHeightHash[rowIndex] = row.ia;\n    }\n  return {\n    unitId,\n    subUnitId,\n    ranges,\n    autoHeightInfo: autoHeightHash\n  };\n}, \"SetWorksheetRowIsAutoHeightMutationFactory\"), SetWorksheetRowAutoHeightMutationFactory = /* @__PURE__ */ __name((params, worksheet) => {\n  const { unitId, subUnitId, rowsAutoHeightInfo } = params, results = [], manager = worksheet.getRowManager();\n  for (const rowInfo of rowsAutoHeightInfo) {\n    const { row } = rowInfo, { ah } = manager.getRowOrCreate(row);\n    results.push({ row, autoHeight: ah });\n  }\n  return {\n    unitId,\n    subUnitId,\n    rowsAutoHeightInfo: results\n  };\n}, \"SetWorksheetRowAutoHeightMutationFactory\"), SetWorksheetRowHeightMutation = {\n  id: \"sheet.mutation.set-worksheet-row-height\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const { ranges, rowHeight } = params, univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { worksheet } = target, manager = worksheet.getRowManager(), defaultRowHeight = worksheet.getConfig().defaultRowHeight;\n    for (const { startRow, endRow } of ranges)\n      for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\n        const row = manager.getRowOrCreate(rowIndex);\n        typeof rowHeight == \"number\" ? row.h = rowHeight : row.h = (_a20 = rowHeight[rowIndex]) != null ? _a20 : defaultRowHeight, row.h = Math.min(MAXIMUM_ROW_HEIGHT, row.h);\n      }\n    return !0;\n  }, \"handler\")\n}, SetWorksheetRowIsAutoHeightMutation = {\n  id: \"sheet.mutation.set-worksheet-row-is-auto-height\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20;\n    const { ranges, autoHeightInfo } = params, univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const manager = target.worksheet.getRowManager();\n    for (const { startRow, endRow } of ranges)\n      for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\n        const row = manager.getRowOrCreate(rowIndex);\n        typeof autoHeightInfo == \"number\" ? row.ia = autoHeightInfo : row.ia = (_a20 = autoHeightInfo[rowIndex]) != null ? _a20 : void 0;\n      }\n    return !0;\n  }, \"handler\")\n}, SetWorksheetRowAutoHeightMutation = {\n  id: \"sheet.mutation.set-worksheet-row-auto-height\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { rowsAutoHeightInfo } = params, univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const rowManager = target.worksheet.getRowManager();\n    for (const { row, autoHeight } of rowsAutoHeightInfo) {\n      const curRow = rowManager.getRowOrCreate(row);\n      curRow.ah = autoHeight;\n    }\n    return !0;\n  }, \"handler\")\n}, DeltaRowHeightCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.delta-row-height\",\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const selections = accessor.get(SheetsSelectionsService).getCurrentSelections(), sheetInterceptorService = accessor.get(SheetInterceptorService);\n    if (!(selections != null && selections.length))\n      return !1;\n    const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n    if (!target) return !1;\n    const { worksheet, subUnitId, unitId } = target, { anchorRow, deltaY } = params, destRowHeight = worksheet.getRowHeight(anchorRow) + deltaY, isAllSheetRange = selections.length === 1 && selections[0].range.rangeType === RANGE_TYPE.ALL, rowSelections = selections.filter((s) => s.range.rangeType === RANGE_TYPE.ROW), rangeType = isAllSheetRange ? RANGE_TYPE.ALL : rowSelections.some(({ range }) => {\n      const { startRow, endRow } = range;\n      return startRow <= anchorRow && anchorRow <= endRow;\n    }) ? RANGE_TYPE.ROW : RANGE_TYPE.NORMAL;\n    let redoMutationParams;\n    if (rangeType === RANGE_TYPE.ALL) {\n      const colCount = worksheet.getRowCount(), allRowRanges = new Array(worksheet.getColumnCount()).fill(void 0).map(\n        (_, index) => ({ startRow: index, endRow: index, startColumn: 0, endColumn: colCount - 1 })\n      );\n      redoMutationParams = {\n        subUnitId,\n        unitId,\n        rowHeight: destRowHeight,\n        ranges: allRowRanges\n      };\n    } else rangeType === RANGE_TYPE.ROW ? redoMutationParams = {\n      subUnitId,\n      unitId,\n      ranges: rowSelections.map((s) => Rectangle.clone(s.range)),\n      rowHeight: destRowHeight\n    } : redoMutationParams = {\n      subUnitId,\n      unitId,\n      rowHeight: destRowHeight,\n      ranges: [\n        {\n          startRow: anchorRow,\n          endRow: anchorRow,\n          startColumn: 0,\n          endColumn: worksheet.getMaxColumns() - 1\n        }\n      ]\n    };\n    const undoMutationParams = SetWorksheetRowHeightMutationFactory(redoMutationParams, worksheet), redoSetIsAutoHeightParams = {\n      unitId,\n      subUnitId,\n      ranges: redoMutationParams.ranges,\n      autoHeightInfo: BooleanNumber.FALSE\n    }, undoSetIsAutoHeightParams = SetWorksheetRowIsAutoHeightMutationFactory(redoSetIsAutoHeightParams, worksheet), commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), intercepted = sheetInterceptorService.onCommandExecute({\n      id: DeltaRowHeightCommand.id,\n      params: redoMutationParams\n    }), result = sequenceExecute([\n      {\n        id: SetWorksheetRowHeightMutation.id,\n        params: redoMutationParams\n      },\n      {\n        id: SetWorksheetRowIsAutoHeightMutation.id,\n        params: redoSetIsAutoHeightParams\n      }\n    ], commandService), interceptedResult = sequenceExecute([...intercepted.redos], commandService);\n    return result.result && interceptedResult.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_a20 = intercepted.preUndos) != null ? _a20 : [],\n        {\n          id: SetWorksheetRowHeightMutation.id,\n          params: undoMutationParams\n        },\n        {\n          id: SetWorksheetRowIsAutoHeightMutation.id,\n          params: undoSetIsAutoHeightParams\n        },\n        ...intercepted.undos\n      ],\n      redoMutations: [\n        ...(_b = intercepted.preRedos) != null ? _b : [],\n        {\n          id: SetWorksheetRowHeightMutation.id,\n          params: redoMutationParams\n        },\n        {\n          id: SetWorksheetRowIsAutoHeightMutation.id,\n          params: redoSetIsAutoHeightParams\n        },\n        ...intercepted.redos\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetRowHeightCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-row-height\",\n  // eslint-disable-next-line max-lines-per-function\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20, _b, _c, _d;\n    const selectionManagerService = accessor.get(SheetsSelectionsService), commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), sheetInterceptorService = accessor.get(SheetInterceptorService), selections = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { unitId, subUnitId, worksheet } = target, redoMutationParams = {\n      subUnitId,\n      unitId,\n      ranges: selections,\n      rowHeight: params.value\n    }, undoMutationParams = SetWorksheetRowHeightMutationFactory(redoMutationParams, worksheet), redoSetIsAutoHeightParams = {\n      unitId,\n      subUnitId,\n      ranges: redoMutationParams.ranges,\n      autoHeightInfo: BooleanNumber.FALSE\n    }, undoSetIsAutoHeightParams = SetWorksheetRowIsAutoHeightMutationFactory(redoSetIsAutoHeightParams, worksheet), result = sequenceExecute([\n      {\n        id: SetWorksheetRowHeightMutation.id,\n        params: redoMutationParams\n      },\n      {\n        id: SetWorksheetRowIsAutoHeightMutation.id,\n        params: redoSetIsAutoHeightParams\n      }\n    ], commandService), intercepted = sheetInterceptorService.onCommandExecute({\n      id: SetRowHeightCommand.id,\n      params: redoMutationParams\n    }), sheetInterceptorResult = sequenceExecute([...intercepted.redos], commandService);\n    return result.result && sheetInterceptorResult.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        ...(_c = intercepted.preRedos) != null ? _c : [],\n        {\n          id: SetWorksheetRowHeightMutation.id,\n          params: undoMutationParams\n        },\n        {\n          id: SetWorksheetRowIsAutoHeightMutation.id,\n          params: undoSetIsAutoHeightParams\n        },\n        ...intercepted.undos\n      ],\n      redoMutations: [\n        ...(_d = intercepted.preRedos) != null ? _d : [],\n        {\n          id: SetWorksheetRowHeightMutation.id,\n          params: redoMutationParams\n        },\n        {\n          id: SetWorksheetRowIsAutoHeightMutation.id,\n          params: redoSetIsAutoHeightParams\n        },\n        ...intercepted.redos\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetRowIsAutoHeightCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-row-is-auto-height\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20, _b;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), selectionManagerService = accessor.get(SheetsSelectionsService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, params);\n    if (!target) return !1;\n    const { unitId, subUnitId, worksheet } = target, ranges = (_a20 = params == null ? void 0 : params.ranges) != null && _a20.length ? params.ranges : (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range);\n    if (!(ranges != null && ranges.length))\n      return !1;\n    const redoMutationParams = {\n      unitId,\n      subUnitId,\n      ranges,\n      autoHeightInfo: BooleanNumber.TRUE\n      // Hard code first, maybe it will change by the menu item in the future.\n    }, undoMutationParams = SetWorksheetRowIsAutoHeightMutationFactory(redoMutationParams, worksheet), setIsAutoHeightResult = commandService.syncExecuteCommand(\n      SetWorksheetRowIsAutoHeightMutation.id,\n      redoMutationParams\n    ), { undos, redos } = accessor.get(SheetInterceptorService).onCommandExecute({\n      id: SetWorksheetRowIsAutoHeightCommand.id,\n      params: redoMutationParams\n    }), result = sequenceExecute([...redos], commandService);\n    return setIsAutoHeightResult && result.result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetWorksheetRowIsAutoHeightMutation.id, params: undoMutationParams }, ...undos],\n      redoMutations: [{ id: SetWorksheetRowIsAutoHeightMutation.id, params: redoMutationParams }, ...redos]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetShowCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-show\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const { unitId, subUnitId } = params, commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService);\n    if (!getSheetCommandTarget(accessor.get(IUniverInstanceService))) return !1;\n    const workbook = univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const worksheet = workbook.getSheetBySheetId(subUnitId);\n    if (!worksheet || worksheet.getConfig().hidden === BooleanNumber.FALSE) return !1;\n    const redoMutationParams = {\n      unitId,\n      subUnitId,\n      hidden: BooleanNumber.FALSE\n    }, undoMutationParams = SetWorksheetHideMutationFactory(accessor, redoMutationParams), result = commandService.syncExecuteCommand(SetWorksheetHideMutation.id, redoMutationParams), activeSheetMutationParams = {\n      unitId,\n      subUnitId\n    }, activeResult = commandService.syncExecuteCommand(\n      SetWorksheetActiveOperation.id,\n      activeSheetMutationParams\n    );\n    return result && activeResult ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [\n        { id: SetWorksheetHideMutation.id, params: undoMutationParams }\n        // { id: SetWorksheetActiveOperation.id, params: unActiveMutationParams },\n      ],\n      redoMutations: [\n        // { id: SetWorksheetActiveOperation.id, params: activeSheetMutationParams },\n        { id: SetWorksheetHideMutation.id, params: redoMutationParams }\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n}, createTopMatrixFromRanges = /* @__PURE__ */ __name((ranges) => {\n  const matrix = new ObjectMatrix();\n  return ranges.forEach((range) => {\n    Range.foreach(range, (row, col) => {\n      matrix.setValue(row, col, 1);\n    });\n  }), matrix.forValue((row, col) => {\n    const theLastRowValue = matrix.getValue(row - 1, col);\n    theLastRowValue && matrix.setValue(row, col, theLastRowValue + 1);\n  }), matrix;\n}, \"createTopMatrixFromRanges\"), createTopMatrixFromMatrix = /* @__PURE__ */ __name((matrix) => {\n  const _matrix = matrix;\n  return _matrix.forValue((row, col) => {\n    const theLastRowValue = matrix.getValue(row - 1, col);\n    theLastRowValue && _matrix.setValue(row, col, theLastRowValue + 1);\n  }), _matrix;\n}, \"createTopMatrixFromMatrix\"), findMaximalRectangle = /* @__PURE__ */ __name((topMatrix) => {\n  const res = {\n    area: 0\n  }, checkArea = /* @__PURE__ */ __name((area, range) => res.area < area ? (res.area = area, res.range = range, !0) : !1, \"checkArea\");\n  return topMatrix.forValue((row, col, lineArea) => {\n    let cols = 1, rows = lineArea;\n    checkArea(cols * rows, {\n      startRow: row - rows + 1,\n      endRow: row,\n      startColumn: col,\n      endColumn: col\n    });\n    const _range = {\n      startRow: row - rows + 1,\n      endRow: row,\n      startColumn: 0,\n      endColumn: col\n    };\n    for (let k = col - 1; k >= 0 && topMatrix.getValue(row, k); k--) {\n      rows = Math.min(topMatrix.getValue(row, k) || 0, rows), cols++;\n      const area = rows * cols;\n      _range.startColumn = k, _range.startRow = row - rows + 1, checkArea(area, _range);\n    }\n  }), res;\n}, \"findMaximalRectangle\"), filterLeftMatrix = /* @__PURE__ */ __name((topMatrix, range) => {\n  Range.foreach(range, (row, col) => {\n    topMatrix.realDeleteValue(row, col);\n  });\n  for (let col = range.startColumn; col <= range.endColumn; col++) {\n    const row = range.endRow + 1;\n    if (topMatrix.getValue(row, col) > 0) {\n      topMatrix.setValue(row, col, 1);\n      let nextRow = row + 1;\n      for (; topMatrix.getValue(nextRow, col) > 0; )\n        topMatrix.setValue(nextRow, col, topMatrix.getValue(nextRow - 1, col) + 1), nextRow++;\n    }\n  }\n  return topMatrix;\n}, \"filterLeftMatrix\"), findAllRectangle = /* @__PURE__ */ __name((topMatrix) => {\n  const resultList = [];\n  let result = findMaximalRectangle(topMatrix);\n  for (; result.area > 0; )\n    result.range && (resultList.push(result.range), filterLeftMatrix(topMatrix, result.range)), result = findMaximalRectangle(topMatrix);\n  return resultList;\n}, \"findAllRectangle\"), rangeMerge = /* @__PURE__ */ __name((ranges) => {\n  const topMatrix = createTopMatrixFromRanges(ranges);\n  return findAllRectangle(topMatrix);\n}, \"rangeMerge\"), _RangeMergeUtil = class _RangeMergeUtil {\n  constructor() {\n    __publicField(this, \"_matrix\", new ObjectMatrix());\n  }\n  add(...ranges) {\n    return ranges.forEach((range) => {\n      Range.foreach(range, (row, col) => {\n        this._matrix.setValue(row, col, 1);\n      });\n    }), this;\n  }\n  subtract(...ranges) {\n    return ranges.forEach((range) => {\n      Range.foreach(range, (row, col) => {\n        this._matrix.realDeleteValue(row, col);\n      });\n    }), this;\n  }\n  merge() {\n    const topMatrix = createTopMatrixFromMatrix(this._matrix);\n    return findAllRectangle(topMatrix);\n  }\n};\n__name(_RangeMergeUtil, \"RangeMergeUtil\");\nlet RangeMergeUtil = _RangeMergeUtil;\nconst INumfmtService = createIdentifier(\"INumfmtService\");\nrunOnLifecycle(LifecycleStages.Ready, INumfmtService);\nconst factorySetNumfmtUndoMutation = /* @__PURE__ */ __name((accessor, option) => {\n  const numfmtService = accessor.get(INumfmtService), { values, unitId, subUnitId } = option, cells = [], removeCells = [];\n  Object.keys(values).forEach((id) => {\n    values[id].ranges.forEach((range) => {\n      Range.foreach(range, (row, col) => {\n        const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n        oldNumfmt ? cells.push({\n          pattern: oldNumfmt.pattern,\n          row,\n          col\n        }) : removeCells.push({ startColumn: col, endColumn: col, startRow: row, endRow: row });\n      });\n    });\n  });\n  const result = [];\n  if (cells.length) {\n    const params = transformCellsToRange(unitId, subUnitId, cells);\n    Object.keys(params.values).forEach((key) => {\n      const v = params.values[key];\n      v.ranges = rangeMerge(v.ranges);\n    }), result.push({\n      id: SetNumfmtMutation.id,\n      params: transformCellsToRange(unitId, subUnitId, cells)\n    });\n  }\n  return removeCells.length && result.push({\n    id: RemoveNumfmtMutation.id,\n    params: {\n      unitId,\n      subUnitId,\n      ranges: removeCells\n    }\n  }), result;\n}, \"factorySetNumfmtUndoMutation\"), SetNumfmtMutation = {\n  id: \"sheet.mutation.set.numfmt\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    if (!params)\n      return !1;\n    const { values, refMap } = params, numfmtService = accessor.get(INumfmtService), unitId = params.unitId, sheetId = params.subUnitId, setValues = Object.keys(values).reduce(\n      (result, id) => {\n        const value = refMap[id], ranges = values[id].ranges;\n        return value && result.push({\n          ...value,\n          ranges\n        }), result;\n      },\n      []\n    );\n    return numfmtService.setValues(unitId, sheetId, setValues), !0;\n  }, \"handler\")\n}, RemoveNumfmtMutation = {\n  id: \"sheet.mutation.remove.numfmt\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    if (!params)\n      return !1;\n    const { unitId, subUnitId, ranges } = params;\n    return accessor.get(INumfmtService).deleteValues(unitId, subUnitId, ranges), !0;\n  }, \"handler\")\n}, factoryRemoveNumfmtUndoMutation = /* @__PURE__ */ __name((accessor, option) => {\n  const numfmtService = accessor.get(INumfmtService), { ranges, unitId, subUnitId } = option, cells = [];\n  if (ranges.forEach((range) => {\n    Range.foreach(range, (row, col) => {\n      const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n      oldNumfmt && cells.push({\n        pattern: oldNumfmt.pattern,\n        row,\n        col\n      });\n    });\n  }), !cells.length)\n    return [];\n  const params = transformCellsToRange(unitId, subUnitId, cells);\n  return Object.keys(params.values).forEach((key) => {\n    const v = params.values[key];\n    v.ranges = rangeMerge(v.ranges);\n  }), [{ id: SetNumfmtMutation.id, params }];\n}, \"factoryRemoveNumfmtUndoMutation\"), transformCellsToRange = /* @__PURE__ */ __name((unitId, subUnitId, cells) => {\n  const group = groupByKey(cells, \"pattern\"), refMap = {}, values = {}, getKey = createUniqueKey();\n  return Object.keys(group).forEach((pattern) => {\n    const groupItem = group[pattern], key = getKey();\n    refMap[key] = {\n      pattern\n    }, groupItem.forEach((item) => {\n      values[key] || (values[key] = { ranges: [] }), values[key].ranges.push(cellToRange(item.row, item.col));\n    });\n  }), { unitId, subUnitId, refMap, values };\n}, \"transformCellsToRange\"), EmptyMutation = {\n  id: \"sheet.mutation.empty\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name(() => !0, \"handler\")\n}, InsertDefinedNameCommand = {\n  id: \"sheet.command.insert-defined-name\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService);\n    if (!params) return !1;\n    const insertSheetMutationParams = {\n      ...params\n    };\n    return commandService.syncExecuteCommand(SetDefinedNameMutation.id, insertSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: params.unitId,\n      undoMutations: [{ id: RemoveDefinedNameMutation.id, params: insertSheetMutationParams }],\n      redoMutations: [{ id: SetDefinedNameMutation.id, params: insertSheetMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, RemoveDefinedNameCommand = {\n  id: \"sheet.command.remove-defined-name\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService);\n    if (!params) return !1;\n    const removeSheetMutationParams = {\n      ...params\n    };\n    return commandService.syncExecuteCommand(RemoveDefinedNameMutation.id, removeSheetMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: params.unitId,\n      undoMutations: [{ id: SetDefinedNameMutation.id, params: removeSheetMutationParams }],\n      redoMutations: [{ id: RemoveDefinedNameMutation.id, params: removeSheetMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetDefinedNameCommand = {\n  id: \"sheet.command.set-defined-name\",\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService);\n    return params && commandService.syncExecuteCommand(SetDefinedNameMutation.id, params.newDefinedName) ? (undoRedoService.pushUndoRedo({\n      unitID: params.unitId,\n      undoMutations: [{ id: SetDefinedNameMutation.id, params: params.oldDefinedName }],\n      redoMutations: [{ id: SetDefinedNameMutation.id, params: params.newDefinedName }]\n    }), !0) : !1;\n  }, \"handler\")\n}, ScrollToCellOperation = {\n  id: \"sheet.operation.scroll-to-cell\",\n  type: CommandType.OPERATION,\n  handler: /* @__PURE__ */ __name(() => !0, \"handler\")\n}, SetWorkbookNameMutation = {\n  id: \"sheet.mutation.set-workbook-name\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUnit(params.unitId, UniverInstanceType.UNIVER_SHEET);\n    return workbook ? (workbook.setName(params.name), !0) : !1;\n  }, \"handler\")\n}, SetWorkbookNameCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-workbook-name\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    if (!accessor.get(IUniverInstanceService).getUnit(params.unitId, UniverInstanceType.UNIVER_SHEET)) return !1;\n    const interceptedCommands = accessor.get(SheetInterceptorService).onCommandExecute({\n      id: SetWorkbookNameCommand.id,\n      params\n    }), redoMutationParams = {\n      name: params.name,\n      unitId: params.unitId\n    }, redos = [\n      ...(_a20 = interceptedCommands.preRedos) != null ? _a20 : [],\n      { id: SetWorkbookNameMutation.id, params: redoMutationParams },\n      ...interceptedCommands.redos\n    ], commandService = accessor.get(ICommandService);\n    return sequenceExecute(redos, commandService).result;\n  }, \"handler\")\n};\nvar __defProp$f = Object.defineProperty, __getOwnPropDesc$f = Object.getOwnPropertyDescriptor, __decorateClass$f = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$f(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$f(target, key, result), result;\n}, \"__decorateClass$f\"), _a4;\nlet WorksheetProtectionRuleModel = (_a4 = class {\n  constructor() {\n    /**\n     *\n     * Map<unitId, Map<subUnitId, Map<subUnitId, IWorksheetProtectionRule>>>\n     */\n    __publicField(this, \"_model\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_ruleChange\", new Subject());\n    __publicField(this, \"_ruleRefresh\", new Subject());\n    __publicField(this, \"_resetOrder\", new Subject());\n    __publicField(this, \"ruleChange$\", this._ruleChange.asObservable());\n    __publicField(this, \"ruleRefresh$\", this._ruleRefresh.asObservable());\n    __publicField(this, \"resetOrder$\", this._resetOrder.asObservable());\n    __publicField(this, \"_worksheetRuleInitStateChange\", new BehaviorSubject(!1));\n    __publicField(this, \"worksheetRuleInitStateChange$\", this._worksheetRuleInitStateChange.asObservable());\n  }\n  changeRuleInitState(state) {\n    this._worksheetRuleInitStateChange.next(state);\n  }\n  getSheetRuleInitState() {\n    return this._worksheetRuleInitStateChange.value;\n  }\n  addRule(unitId, rule) {\n    this._ensureSubUnitMap(unitId).set(rule.subUnitId, rule), this._ruleChange.next({ unitId, rule, type: \"add\", subUnitId: rule.subUnitId });\n  }\n  deleteRule(unitId, subUnitId) {\n    var _a20, _b, _c;\n    const rule = (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n    rule && ((_c = this._model.get(unitId)) == null || _c.delete(subUnitId), this._ruleChange.next({ unitId, rule, type: \"delete\", subUnitId }));\n  }\n  setRule(unitId, subUnitId, rule) {\n    var _a20, _b;\n    const oldRule = this.getRule(unitId, subUnitId);\n    oldRule && ((_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null || _b.set(subUnitId, rule), this._ruleChange.next({ unitId, oldRule, rule, type: \"set\", subUnitId }));\n  }\n  getRule(unitId, subUnitId) {\n    var _a20, _b;\n    return (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n  }\n  toObject() {\n    const result = {};\n    return [...this._model.keys()].forEach((unitId) => {\n      const subUnitMap = this._model.get(unitId);\n      subUnitMap != null && subUnitMap.size && (result[unitId] = [], [...subUnitMap.keys()].forEach((subUnitId) => {\n        const rule = subUnitMap.get(subUnitId);\n        rule && result[unitId].push(rule);\n      }));\n    }), result;\n  }\n  fromObject(obj) {\n    const result = /* @__PURE__ */ new Map();\n    Object.keys(obj).forEach((unitId) => {\n      const subUnitList = obj[unitId];\n      if (subUnitList != null && subUnitList.length) {\n        const subUnitMap = /* @__PURE__ */ new Map();\n        subUnitList.forEach((rule) => {\n          subUnitMap.set(rule.subUnitId, rule);\n        }), result.set(unitId, subUnitMap);\n      }\n    }), this._model = result;\n  }\n  deleteUnitModel(unitId) {\n    this._model.delete(unitId);\n  }\n  _ensureSubUnitMap(unitId) {\n    let subUnitMap = this._model.get(unitId);\n    return subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap)), subUnitMap;\n  }\n  ruleRefresh(permissionId) {\n    this._ruleRefresh.next(permissionId);\n  }\n  resetOrder() {\n    this._resetOrder.next(Math.random());\n  }\n  getTargetByPermissionId(unitId, permissionId) {\n    const subUnitMap = this._model.get(unitId);\n    if (!subUnitMap) return null;\n    for (const [subUnitId, rule] of subUnitMap)\n      if (rule.permissionId === permissionId)\n        return [unitId, subUnitId];\n  }\n}, __name(_a4, \"WorksheetProtectionRuleModel\"), _a4);\nWorksheetProtectionRuleModel = __decorateClass$f([\n  OnLifecycle(LifecycleStages.Starting, WorksheetProtectionRuleModel)\n], WorksheetProtectionRuleModel);\nconst AddWorksheetProtectionMutation = {\n  id: \"sheet.mutation.add-worksheet-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, rule } = params;\n    return accessor.get(WorksheetProtectionRuleModel).addRule(unitId, rule), !0;\n  }, \"handler\")\n}, SetWorksheetProtectionMutation = {\n  id: \"sheet.mutation.set-worksheet-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, rule } = params;\n    return accessor.get(WorksheetProtectionRuleModel).setRule(unitId, subUnitId, rule), !0;\n  }, \"handler\")\n}, DeleteWorksheetProtectionMutation = {\n  id: \"sheet.mutation.delete-worksheet-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId } = params;\n    return accessor.get(WorksheetProtectionRuleModel).deleteRule(unitId, subUnitId), !0;\n  }, \"handler\")\n};\nvar __defProp$e = Object.defineProperty, __getOwnPropDesc$e = Object.getOwnPropertyDescriptor, __decorateClass$e = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$e(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$e(target, key, result), result;\n}, \"__decorateClass$e\"), _a5;\nlet RangeProtectionRuleModel = (_a5 = class {\n  constructor() {\n    /**\n     *\n     * Map<unitId, Map<subUnitId, Map<ruleId, IRangeProtectionRule>>>\n     */\n    __publicField(this, \"_model\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_ruleChange\", new Subject());\n    __publicField(this, \"ruleChange$\", this._ruleChange.asObservable());\n    __publicField(this, \"_ruleRefresh\", new Subject());\n    __publicField(this, \"ruleRefresh$\", this._ruleRefresh.asObservable());\n    __publicField(this, \"_rangeRuleInitStateChange\", new BehaviorSubject(!1));\n    __publicField(this, \"rangeRuleInitStateChange$\", this._rangeRuleInitStateChange.asObservable());\n  }\n  ruleRefresh(id) {\n    this._ruleRefresh.next(id);\n  }\n  getRangeRuleInitState() {\n    return this._rangeRuleInitStateChange.value;\n  }\n  changeRuleInitState(state) {\n    this._rangeRuleInitStateChange.next(state);\n  }\n  addRule(unitId, subUnitId, rule) {\n    this._ensureRuleMap(unitId, subUnitId).set(rule.id, rule), this._ruleChange.next({ unitId, subUnitId, rule, type: \"add\" });\n  }\n  deleteRule(unitId, subUnitId, id) {\n    var _a20, _b, _c, _d;\n    const rule = (_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null ? void 0 : _b.get(id);\n    rule && ((_d = (_c = this._model.get(unitId)) == null ? void 0 : _c.get(subUnitId)) == null || _d.delete(id), this._ruleChange.next({ unitId, subUnitId, rule, type: \"delete\" }));\n  }\n  setRule(unitId, subUnitId, id, rule) {\n    var _a20, _b;\n    const oldRule = this.getRule(unitId, subUnitId, id);\n    oldRule && ((_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null || _b.set(id, rule), this._ruleChange.next({ unitId, subUnitId, oldRule, rule, type: \"set\" }));\n  }\n  getRule(unitId, subUnitId, id) {\n    var _a20, _b;\n    return (_b = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) == null ? void 0 : _b.get(id);\n  }\n  getSubunitRuleList(unitId, subUnitId) {\n    var _a20;\n    return [...(((_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId)) || /* @__PURE__ */ new Map()).values()];\n  }\n  _ensureRuleMap(unitId, subUnitId) {\n    let subUnitMap = this._model.get(unitId);\n    subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap));\n    let ruleMap = subUnitMap.get(subUnitId);\n    return ruleMap || (ruleMap = /* @__PURE__ */ new Map(), subUnitMap.set(subUnitId, ruleMap)), ruleMap;\n  }\n  toObject() {\n    const result = {};\n    return [...this._model.keys()].forEach((unitId) => {\n      const submitMap = this._model.get(unitId), subUnitKeys = [...submitMap.keys()];\n      result[unitId] = {}, subUnitKeys.forEach((subunitId) => {\n        const ruleMap = submitMap.get(subunitId);\n        result[unitId][subunitId] = [...ruleMap.values()];\n      });\n    }), result;\n  }\n  fromObject(obj) {\n    const result = /* @__PURE__ */ new Map();\n    Object.keys(obj).forEach((unitId) => {\n      const subUnitObj = obj[unitId], map2 = /* @__PURE__ */ new Map();\n      Object.keys(subUnitObj).forEach((subunitId) => {\n        const ruleMap = subUnitObj[subunitId].reduce((result2, cur) => (result2.set(cur.id, cur), result2), /* @__PURE__ */ new Map());\n        map2.set(subunitId, ruleMap);\n      }), result.set(unitId, map2);\n    }), this._model = result;\n  }\n  deleteUnitModel(unitId) {\n    this._model.delete(unitId);\n  }\n  createRuleId(unitId, subUnitId) {\n    let id = Tools.generateRandomId(4);\n    const ruleMap = this._ensureRuleMap(unitId, subUnitId);\n    for (; ruleMap.has(id); )\n      id = Tools.generateRandomId(4);\n    return id;\n  }\n  getTargetByPermissionId(unitId, permissionId) {\n    const subUnitMap = this._model.get(unitId);\n    if (!subUnitMap) return null;\n    for (const [subUnitId, ruleMap] of subUnitMap)\n      for (const rule of ruleMap.values())\n        if (rule.permissionId === permissionId)\n          return [unitId, subUnitId];\n    return null;\n  }\n}, __name(_a5, \"RangeProtectionRuleModel\"), _a5);\nRangeProtectionRuleModel = __decorateClass$e([\n  OnLifecycle(LifecycleStages.Starting, RangeProtectionRuleModel)\n], RangeProtectionRuleModel);\nconst getAllWorksheetPermissionPoint = /* @__PURE__ */ __name(() => [\n  WorksheetEditPermission,\n  WorksheetViewPermission\n], \"getAllWorksheetPermissionPoint\"), getAllWorksheetPermissionPointByPointPanel = /* @__PURE__ */ __name(() => [\n  WorksheetCopyPermission,\n  WorksheetDeleteColumnPermission,\n  WorksheetDeleteRowPermission,\n  WorksheetEditExtraObjectPermission,\n  WorksheetFilterPermission,\n  WorksheetInsertColumnPermission,\n  WorksheetInsertRowPermission,\n  WorksheetInsertHyperlinkPermission,\n  WorksheetPivotTablePermission,\n  WorksheetSetCellStylePermission,\n  WorksheetSetCellValuePermission,\n  WorksheetSetColumnStylePermission,\n  WorksheetSetRowStylePermission,\n  WorksheetSortPermission\n], \"getAllWorksheetPermissionPointByPointPanel\"), defaultWorksheetPermissionPoint = [\n  P.Copy,\n  P.DeleteColumn,\n  P.DeleteRow,\n  P.EditExtraObject,\n  P.Filter,\n  P.InsertColumn,\n  P.InsertRow,\n  P.InsertHyperlink,\n  P.PivotTable,\n  P.SetCellStyle,\n  P.SetCellValue,\n  P.SetColumnStyle,\n  P.SetRowStyle,\n  P.Sort\n];\nvar __defProp$d = Object.defineProperty, __getOwnPropDesc$d = Object.getOwnPropertyDescriptor, __decorateClass$d = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$d(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$d(target, key, result), result;\n}, \"__decorateClass$d\"), _a6;\nlet WorksheetProtectionPointModel = (_a6 = class {\n  constructor() {\n    __publicField(this, \"_model\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_pointChange\", new Subject());\n    __publicField(this, \"pointChange$\", this._pointChange.asObservable());\n  }\n  addRule(rule) {\n    this._ensureSubUnitMap(rule.unitId).set(rule.subUnitId, rule), this._pointChange.next(rule);\n  }\n  deleteRule(unitId, subUnitId) {\n    var _a20, _b, _c;\n    const rule = (_a20 = this._model.get(unitId)) == null ? void 0 : _a20.get(subUnitId);\n    rule && ((_c = (_b = this._model) == null ? void 0 : _b.get(unitId)) == null || _c.delete(subUnitId), this._pointChange.next(rule));\n  }\n  getRule(unitId, subUnitId) {\n    var _a20, _b;\n    return (_b = (_a20 = this._model) == null ? void 0 : _a20.get(unitId)) == null ? void 0 : _b.get(subUnitId);\n  }\n  toObject() {\n    const result = {};\n    return [...this._model.keys()].forEach((unitId) => {\n      const subUnitMap = this._model.get(unitId);\n      subUnitMap != null && subUnitMap.size && (result[unitId] = [], [...subUnitMap.keys()].forEach((subUnitId) => {\n        const rule = subUnitMap.get(subUnitId);\n        rule && result[unitId].push(rule);\n      }));\n    }), result;\n  }\n  fromObject(obj) {\n    const result = /* @__PURE__ */ new Map();\n    Object.keys(obj).forEach((unitId) => {\n      const subUnitList = obj[unitId];\n      if (subUnitList != null && subUnitList.length) {\n        const subUnitMap = /* @__PURE__ */ new Map();\n        subUnitList.forEach((rule) => {\n          subUnitMap.set(rule.subUnitId, rule);\n        }), result.set(unitId, subUnitMap);\n      }\n    }), this._model = result;\n  }\n  deleteUnitModel(unitId) {\n    this._model.delete(unitId);\n  }\n  _ensureSubUnitMap(unitId) {\n    let subUnitMap = this._model.get(unitId);\n    return subUnitMap || (subUnitMap = /* @__PURE__ */ new Map(), this._model.set(unitId, subUnitMap)), subUnitMap;\n  }\n  getTargetByPermissionId(unitId, permissionId) {\n    const subUnitMap = this._model.get(unitId);\n    if (!subUnitMap) return null;\n    for (const [subUnitId, rule] of subUnitMap)\n      if (rule.permissionId === permissionId)\n        return [unitId, subUnitId];\n  }\n}, __name(_a6, \"WorksheetProtectionPointModel\"), _a6);\nWorksheetProtectionPointModel = __decorateClass$d([\n  OnLifecycle(LifecycleStages.Starting, WorksheetProtectionPointModel)\n], WorksheetProtectionPointModel);\nvar __defProp$c = Object.defineProperty, __getOwnPropDesc$c = Object.getOwnPropertyDescriptor, __decorateClass$c = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$c(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$c(target, key, result), result;\n}, \"__decorateClass$c\"), __decorateParam$c = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$c\");\nconst RULE_MODEL_PLUGIN_NAME = \"SHEET_WORKSHEET_PROTECTION_PLUGIN\", POINT_MODEL_PLUGIN_NAME = \"SHEET_WORKSHEET_PROTECTION_POINT_PLUGIN\";\nvar _a7;\nlet WorksheetPermissionService = (_a7 = class extends RxDisposable {\n  constructor(_permissionService, _univerInstanceService, _injector, _worksheetProtectionRuleModel, _worksheetProtectionPointRuleModel, _resourceManagerService, _rangeProtectionRuleModel) {\n    super(), this._permissionService = _permissionService, this._univerInstanceService = _univerInstanceService, this._injector = _injector, this._worksheetProtectionRuleModel = _worksheetProtectionRuleModel, this._worksheetProtectionPointRuleModel = _worksheetProtectionPointRuleModel, this._resourceManagerService = _resourceManagerService, this._rangeProtectionRuleModel = _rangeProtectionRuleModel, this._init(), this._initRuleChange(), this._initRuleSnapshot(), this._initPointSnapshot();\n  }\n  _init() {\n    const handleWorkbook = /* @__PURE__ */ __name((workbook) => {\n      const unitId = workbook.getUnitId(), handleWorksheet = /* @__PURE__ */ __name((worksheet) => {\n        const subUnitId = worksheet.getSheetId();\n        [...getAllWorksheetPermissionPoint(), ...getAllWorksheetPermissionPointByPointPanel()].forEach((F) => {\n          const instance = new F(unitId, subUnitId);\n          this._permissionService.addPermissionPoint(instance);\n        });\n      }, \"handleWorksheet\");\n      workbook.getSheets().forEach((worksheet) => {\n        handleWorksheet(worksheet);\n      }), workbook.sheetCreated$.subscribe((worksheet) => {\n        handleWorksheet(worksheet);\n      }), workbook.sheetDisposed$.subscribe((worksheet) => {\n        const subUnitId = worksheet.getSheetId();\n        this._rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule) => {\n          [RangeProtectionPermissionEditPoint, RangeProtectionPermissionViewPoint].forEach((F) => {\n            const instance = new F(unitId, subUnitId, rule.permissionId);\n            this._permissionService.deletePermissionPoint(instance.id);\n          });\n        }), [...getAllWorksheetPermissionPoint(), ...getAllWorksheetPermissionPointByPointPanel()].forEach((F) => {\n          const instance = new F(unitId, subUnitId);\n          this._permissionService.deletePermissionPoint(instance.id);\n        });\n      });\n    }, \"handleWorkbook\");\n    this._univerInstanceService.getAllUnitsForType(UniverInstanceType.UNIVER_SHEET).forEach((workbook) => {\n      handleWorkbook(workbook);\n    }), this._univerInstanceService.getTypeOfUnitAdded$(UniverInstanceType.UNIVER_SHEET).pipe(takeUntil$1(this.dispose$)).subscribe(handleWorkbook), this._univerInstanceService.getTypeOfUnitDisposed$(UniverInstanceType.UNIVER_SHEET).pipe(takeUntil$1(this.dispose$)).subscribe((workbook) => {\n      workbook.getSheets().forEach((worksheet) => {\n        const unitId = workbook.getUnitId(), subUnitId = worksheet.getSheetId();\n        getAllWorksheetPermissionPoint().forEach((F) => {\n          const instance = new F(unitId, subUnitId);\n          this._permissionService.deletePermissionPoint(instance.id);\n        });\n      });\n    });\n  }\n  _initRuleChange() {\n    this.disposeWithMe(\n      this._worksheetProtectionRuleModel.ruleChange$.subscribe((info) => {\n        switch (info.type) {\n          case \"add\":\n            break;\n          case \"delete\": {\n            getAllWorksheetPermissionPoint().forEach((F) => {\n              const instance = new F(info.unitId, info.subUnitId);\n              this._permissionService.updatePermissionPoint(instance.id, !0);\n            });\n            break;\n          }\n          case \"set\": {\n            getAllWorksheetPermissionPoint().forEach((F) => {\n              const instance = new F(info.unitId, info.subUnitId);\n              this._permissionService.updatePermissionPoint(instance.id, info.rule);\n            });\n            break;\n          }\n        }\n      })\n    );\n  }\n  _initRuleSnapshot() {\n    const toJson = /* @__PURE__ */ __name(() => {\n      const object = this._worksheetProtectionRuleModel.toObject();\n      return JSON.stringify(object);\n    }, \"toJson\"), parseJson = /* @__PURE__ */ __name((json) => {\n      if (!json)\n        return {};\n      try {\n        return JSON.parse(json);\n      } catch {\n        return {};\n      }\n    }, \"parseJson\");\n    this.disposeWithMe(\n      this._resourceManagerService.registerPluginResource({\n        toJson,\n        parseJson,\n        pluginName: RULE_MODEL_PLUGIN_NAME,\n        businesses: [I.UNIVER_SHEET],\n        onLoad: /* @__PURE__ */ __name((unitId, resources) => {\n          this._worksheetProtectionRuleModel.fromObject(resources), Object.keys(resources).forEach((subUnitId) => {\n            getAllWorksheetPermissionPoint().forEach((F) => {\n              const instance = new F(unitId, subUnitId);\n              instance.value = !1, this._permissionService.addPermissionPoint(instance);\n            });\n          }), this._worksheetProtectionRuleModel.changeRuleInitState(!0);\n        }, \"onLoad\"),\n        onUnLoad: /* @__PURE__ */ __name((unitId) => {\n          this._worksheetProtectionRuleModel.deleteUnitModel(unitId);\n        }, \"onUnLoad\")\n      })\n    );\n  }\n  _initPointSnapshot() {\n    const toJson = /* @__PURE__ */ __name(() => {\n      const object = this._worksheetProtectionPointRuleModel.toObject();\n      return JSON.stringify(object);\n    }, \"toJson\"), parseJson = /* @__PURE__ */ __name((json) => {\n      if (!json)\n        return {};\n      try {\n        return JSON.parse(json);\n      } catch {\n        return {};\n      }\n    }, \"parseJson\");\n    this.disposeWithMe(\n      this._resourceManagerService.registerPluginResource({\n        toJson,\n        parseJson,\n        pluginName: POINT_MODEL_PLUGIN_NAME,\n        businesses: [I.UNIVER_SHEET],\n        onLoad: /* @__PURE__ */ __name((unitId, resources) => {\n          this._worksheetProtectionPointRuleModel.fromObject(resources), Object.keys(resources).forEach((subUnitId) => {\n            getAllWorksheetPermissionPointByPointPanel().forEach((F) => {\n              const instance = new F(unitId, subUnitId);\n              this._permissionService.addPermissionPoint(instance);\n            });\n          });\n        }, \"onLoad\"),\n        onUnLoad: /* @__PURE__ */ __name((unitId) => {\n          this._worksheetProtectionPointRuleModel.deleteUnitModel(unitId);\n        }, \"onUnLoad\")\n      })\n    );\n  }\n}, __name(_a7, \"WorksheetPermissionService\"), _a7);\nWorksheetPermissionService = __decorateClass$c([\n  OnLifecycle(LifecycleStages.Starting, WorksheetPermissionService),\n  __decorateParam$c(0, Inject(IPermissionService)),\n  __decorateParam$c(1, Inject(IUniverInstanceService)),\n  __decorateParam$c(2, Inject(Injector)),\n  __decorateParam$c(3, Inject(WorksheetProtectionRuleModel)),\n  __decorateParam$c(4, Inject(WorksheetProtectionPointModel)),\n  __decorateParam$c(5, Inject(IResourceManagerService)),\n  __decorateParam$c(6, Inject(RangeProtectionRuleModel))\n], WorksheetPermissionService);\nconst SetWorksheetPermissionPointsMutation = {\n  id: \"sheet.mutation.set-worksheet-permission-points\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { rule } = params;\n    return accessor.get(WorksheetProtectionPointModel).addRule(rule), !0;\n  }, \"handler\")\n}, SetWorksheetPermissionPointsCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-permission-points\",\n  async handler(accessor, params) {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), { rule } = params;\n    return commandService.executeCommand(SetWorksheetPermissionPointsMutation.id, {\n      rule,\n      unitId: rule.unitId,\n      subUnitId: rule.subUnitId\n    }), !0;\n  }\n}, FactoryDeleteRangeProtectionMutation = /* @__PURE__ */ __name((accessor, param) => {\n  const selectionProtectionRuleModel = accessor.get(RangeProtectionRuleModel), rules = param.ruleIds.map((id) => selectionProtectionRuleModel.getRule(param.unitId, param.subUnitId, id)).filter((rule) => !!rule);\n  return { id: AddRangeProtectionMutation.id, params: { subUnitId: param.subUnitId, unitId: param.unitId, rules } };\n}, \"FactoryDeleteRangeProtectionMutation\"), DeleteRangeProtectionMutation = {\n  id: \"sheet.mutation.delete-range-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, ruleIds } = params, selectionProtectionRuleModel = accessor.get(RangeProtectionRuleModel);\n    return ruleIds.forEach((id) => {\n      selectionProtectionRuleModel.deleteRule(unitId, subUnitId, id);\n    }), !0;\n  }, \"handler\")\n}, FactoryAddRangeProtectionMutation = /* @__PURE__ */ __name((param) => {\n  const deleteParams = { ...param, ruleIds: param.rules.map((rule) => rule.id) };\n  return { id: DeleteRangeProtectionMutation.id, params: deleteParams };\n}, \"FactoryAddRangeProtectionMutation\"), AddRangeProtectionMutation = {\n  id: \"sheet.mutation.add-range-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, rules } = params, selectionProtectionRuleModel = accessor.get(RangeProtectionRuleModel);\n    return rules.forEach((rule) => {\n      selectionProtectionRuleModel.addRule(unitId, subUnitId, rule);\n    }), !0;\n  }, \"handler\")\n}, AddRangeProtectionCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.add-range-protection\",\n  async handler(accessor, params) {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), selectionProtectionModel = accessor.get(RangeProtectionRuleModel), { rule, permissionId } = params, { unitId, subUnitId, ranges, name, description } = rule, rules = [{\n      ranges,\n      permissionId,\n      id: selectionProtectionModel.createRuleId(unitId, subUnitId),\n      name,\n      description,\n      unitType: rule.unitType,\n      unitId,\n      subUnitId\n    }];\n    if (await commandService.executeCommand(AddRangeProtectionMutation.id, {\n      unitId,\n      subUnitId,\n      rules\n    })) {\n      const redoMutations = [{ id: AddRangeProtectionMutation.id, params: { unitId, subUnitId, rules } }], undoMutations = [{ id: DeleteRangeProtectionMutation.id, params: { unitId, subUnitId, ruleIds: rules.map((rule2) => rule2.id) } }];\n      undoRedoService.pushUndoRedo({\n        unitID: unitId,\n        redoMutations,\n        undoMutations\n      });\n    }\n    return !0;\n  }\n}, DeleteRangeProtectionCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.delete-range-protection\",\n  async handler(accessor, params) {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), { unitId, subUnitId, rule } = params, redoMutationParam = {\n      unitId,\n      subUnitId,\n      ruleIds: [rule.id]\n    };\n    return await commandService.executeCommand(DeleteRangeProtectionMutation.id, redoMutationParam) && undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      redoMutations: [{ id: DeleteRangeProtectionMutation.id, params: redoMutationParam }],\n      undoMutations: [{ id: AddRangeProtectionMutation.id, params: { unitId, subUnitId, rules: [rule] } }]\n    }), !0;\n  }\n}, SetRangeProtectionMutation = {\n  id: \"sheet.mutation.set-range-protection\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { unitId, subUnitId, rule, ruleId } = params;\n    return accessor.get(RangeProtectionRuleModel).setRule(unitId, subUnitId, ruleId, rule), !0;\n  }, \"handler\")\n}, FactorySetRangeProtectionMutation = /* @__PURE__ */ __name((accessor, param) => {\n  const { unitId, subUnitId, ruleId } = param, oldRule = accessor.get(RangeProtectionRuleModel).getRule(unitId, subUnitId, ruleId);\n  return oldRule ? {\n    id: SetRangeProtectionMutation.id,\n    params: {\n      ...param,\n      rule: oldRule\n    }\n  } : null;\n}, \"FactorySetRangeProtectionMutation\"), SetRangeProtectionCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-range-protection\",\n  async handler(accessor, params) {\n    if (!params)\n      return !1;\n    const commandService = accessor.get(ICommandService), selectionProtectionModel = accessor.get(RangeProtectionRuleModel), undoRedoService = accessor.get(IUndoRedoService), { rule, permissionId, oldRule } = params, { unitId, subUnitId, ranges, name, description } = rule;\n    if (rule.id) {\n      const redoMutationParam = {\n        unitId,\n        subUnitId,\n        ruleId: rule.id,\n        rule: {\n          ranges,\n          permissionId,\n          id: selectionProtectionModel.createRuleId(unitId, subUnitId),\n          name,\n          description\n        }\n      };\n      if (await commandService.executeCommand(SetRangeProtectionMutation.id, redoMutationParam)) {\n        const redoMutations = [{\n          id: SetRangeProtectionMutation.id,\n          params: redoMutationParam\n        }], undoMutations = [{\n          id: SetRangeProtectionMutation.id,\n          params: {\n            unitId,\n            subUnitId,\n            ruleId: rule.id,\n            rule: oldRule\n          }\n        }];\n        undoRedoService.pushUndoRedo({\n          unitID: unitId,\n          redoMutations,\n          undoMutations\n        });\n      }\n    }\n    return !0;\n  }\n}, ReorderRangeUndoMutationFactory = /* @__PURE__ */ __name((params) => {\n  const { order } = params, newOrder = {};\n  return Object.keys(order).forEach((key) => {\n    newOrder[order[Number(key)]] = Number(key);\n  }), {\n    ...params,\n    order: newOrder\n  };\n}, \"ReorderRangeUndoMutationFactory\"), ReorderRangeMutation = {\n  id: \"sheet.mutation.reorder-range\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const { subUnitId, unitId, range, order } = params, worksheet = accessor.get(IUniverInstanceService).getUnit(unitId).getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      return !1;\n    const cellDataMatrix = new ObjectMatrix();\n    Range.foreach(range, (row, col) => {\n      if (order.hasOwnProperty(row)) {\n        const targetRow = order[row], cloneCell = Tools.deepClone(worksheet.getCellRaw(targetRow, col));\n        cellDataMatrix.setValue(row, col, cloneCell);\n      }\n    });\n    const worksheetCellDataMatrix = worksheet.getCellMatrix();\n    return cellDataMatrix.forValue((row, col, cellData) => {\n      worksheetCellDataMatrix.setValue(row, col, cellData);\n    }), !0;\n  }, \"handler\")\n}, ReorderRangeCommandId = \"sheet.command.reorder-range\", ReorderRangeCommand = {\n  id: ReorderRangeCommandId,\n  type: CommandType.COMMAND,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    var _a20, _b;\n    const { subUnitId, unitId, range, order } = params, commandService = accessor.get(ICommandService), reorderMutation = {\n      id: ReorderRangeMutation.id,\n      params: {\n        unitId,\n        subUnitId,\n        order,\n        range\n      }\n    }, undoReorderMutation = {\n      id: ReorderRangeMutation.id,\n      params: ReorderRangeUndoMutationFactory(reorderMutation.params)\n    }, interceptorCommands = accessor.get(SheetInterceptorService).onCommandExecute({ id: ReorderRangeCommand.id, params }), redos = [\n      ...(_a20 = interceptorCommands.preRedos) != null ? _a20 : [],\n      reorderMutation,\n      ...interceptorCommands.redos\n    ], undos = [\n      ...(_b = interceptorCommands.preUndos) != null ? _b : [],\n      undoReorderMutation,\n      ...interceptorCommands.undos\n    ];\n    return sequenceExecute(redos, commandService).result ? (accessor.get(IUndoRedoService).pushUndoRedo({\n      unitID: unitId,\n      undoMutations: undos,\n      redoMutations: redos\n    }), !0) : !1;\n  }, \"handler\")\n}, MAX_CELL_PER_SHEET_KEY = \"maxCellsPerSheet\", MAX_CELL_PER_SHEET_DEFAULT = 3e6, ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY = \"ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY\";\nvar __defProp$b = Object.defineProperty, __getOwnPropDesc$b = Object.getOwnPropertyDescriptor, __decorateClass$b = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$b(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$b(target, key, result), result;\n}, \"__decorateClass$b\"), __decorateParam$b = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$b\"), _a8;\nlet BasicWorksheetController = (_a8 = class extends Disposable {\n  // eslint-disable-next-line max-lines-per-function\n  constructor(_commandService, _configService, _dataSyncPrimaryController) {\n    var _a20;\n    super(), this._commandService = _commandService, this._configService = _configService, this._dataSyncPrimaryController = _dataSyncPrimaryController, [\n      SetRangeValuesMutation,\n      InsertColMutation,\n      InsertRowMutation,\n      InsertSheetMutation,\n      MoveRangeMutation,\n      MoveRowsMutation,\n      MoveColsMutation,\n      RemoveColMutation,\n      RemoveRowMutation,\n      RemoveSheetMutation,\n      RemoveWorksheetMergeMutation,\n      RemoveNumfmtMutation,\n      AddWorksheetMergeMutation,\n      SetWorkbookNameMutation,\n      SetWorksheetNameMutation,\n      SetNumfmtMutation,\n      ReorderRangeMutation,\n      EmptyMutation,\n      SetWorksheetColWidthMutation\n    ].forEach((mutation) => {\n      var _a21;\n      this._commandService.registerCommand(mutation), (_a21 = this._dataSyncPrimaryController) == null || _a21.registerSyncingMutations(mutation);\n    }), ((_a20 = this._configService.getConfig(ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY)) != null ? _a20 : !1) || [\n      ClearSelectionAllCommand,\n      ClearSelectionContentCommand,\n      ClearSelectionFormatCommand,\n      CopySheetCommand,\n      DeleteRangeMoveLeftCommand,\n      DeleteRangeMoveUpCommand,\n      DeltaColumnWidthCommand,\n      DeltaRowHeightCommand,\n      InsertColAfterCommand,\n      InsertColBeforeCommand,\n      InsertColCommand,\n      InsertRangeMoveDownCommand,\n      InsertRangeMoveRightCommand,\n      InsertRowAfterCommand,\n      InsertRowBeforeCommand,\n      InsertRowCommand,\n      InsertSheetCommand,\n      MoveColsCommand,\n      MoveRangeCommand,\n      MoveRowsCommand,\n      RemoveColCommand,\n      RemoveRowCommand,\n      RemoveSheetCommand,\n      ReorderRangeCommand,\n      RemoveWorksheetMergeCommand,\n      ResetBackgroundColorCommand,\n      ResetTextColorCommand,\n      SetBackgroundColorCommand,\n      SetBorderBasicCommand,\n      SetBorderColorCommand,\n      SetBorderCommand,\n      SetBorderPositionCommand,\n      SetBorderStyleCommand,\n      SetColHiddenCommand,\n      SetColHiddenMutation,\n      SetColVisibleMutation,\n      SetColWidthCommand,\n      SetFrozenCancelCommand,\n      SetFrozenCommand,\n      SetFrozenMutation,\n      SetHorizontalTextAlignCommand,\n      SetRangeValuesCommand,\n      SetRowHeightCommand,\n      SetRowHiddenCommand,\n      SetRowHiddenMutation,\n      SetRowVisibleMutation,\n      SetSelectedColsVisibleCommand,\n      SetSelectedRowsVisibleCommand,\n      SetSpecificColsVisibleCommand,\n      SetSpecificRowsVisibleCommand,\n      SetStyleCommand,\n      SetTabColorCommand,\n      SetTabColorMutation,\n      SetTextColorCommand,\n      SetTextRotationCommand,\n      SetTextWrapCommand,\n      SetVerticalTextAlignCommand,\n      SetWorkbookNameCommand,\n      SetWorksheetActivateCommand,\n      SetWorksheetActiveOperation,\n      SetWorksheetHideCommand,\n      SetWorksheetHideMutation,\n      SetWorksheetNameCommand,\n      SetWorksheetOrderCommand,\n      SetWorksheetOrderMutation,\n      SetWorksheetRowAutoHeightMutation,\n      SetWorksheetRowHeightMutation,\n      SetWorksheetRowIsAutoHeightCommand,\n      SetWorksheetRowIsAutoHeightMutation,\n      SetSelectionsOperation,\n      ScrollToCellOperation,\n      InsertDefinedNameCommand,\n      RemoveDefinedNameCommand,\n      SetDefinedNameCommand,\n      SetWorksheetShowCommand,\n      // permissions range protection\n      SetWorksheetPermissionPointsCommand,\n      AddWorksheetProtectionMutation,\n      SetWorksheetProtectionMutation,\n      DeleteWorksheetProtectionMutation,\n      SetWorksheetPermissionPointsMutation,\n      AddRangeProtectionCommand,\n      DeleteRangeProtectionCommand,\n      SetRangeProtectionCommand,\n      AddRangeProtectionMutation,\n      DeleteRangeProtectionMutation,\n      SetRangeProtectionMutation\n    ].forEach((command) => this.disposeWithMe(this._commandService.registerCommand(command))), this._configService.setConfig(MAX_CELL_PER_SHEET_KEY, MAX_CELL_PER_SHEET_DEFAULT);\n  }\n}, __name(_a8, \"BasicWorksheetController\"), _a8);\nBasicWorksheetController = __decorateClass$b([\n  OnLifecycle(LifecycleStages.Starting, BasicWorksheetController),\n  __decorateParam$b(0, ICommandService),\n  __decorateParam$b(1, IConfigService),\n  __decorateParam$b(2, Optional(DataSyncPrimaryController))\n], BasicWorksheetController);\nvar __defProp$a = Object.defineProperty, __getOwnPropDesc$a = Object.getOwnPropertyDescriptor, __decorateClass$a = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$a(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$a(target, key, result), result;\n}, \"__decorateClass$a\"), __decorateParam$a = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$a\"), _a9;\nlet CalculateResultApplyController = (_a9 = class extends Disposable {\n  constructor(_univerInstanceService, _commandService) {\n    super(), this._univerInstanceService = _univerInstanceService, this._commandService = _commandService, this._initialize();\n  }\n  _initialize() {\n    this.disposeWithMe(\n      this._commandService.onCommandExecuted((command) => {\n        if (command.id !== SetFormulaCalculationResultMutation.id)\n          return;\n        const params = command.params, { unitData } = params, unitIds = Object.keys(unitData), redoMutationsInfo = [];\n        return unitIds.forEach((unitId) => {\n          const sheetData = unitData[unitId];\n          if (sheetData == null)\n            return !0;\n          Object.keys(sheetData).forEach((sheetId) => {\n            const cellData = sheetData[sheetId];\n            if (cellData == null)\n              return !0;\n            const cellValue = this._getMergedCellData(unitId, sheetId, cellData), setRangeValuesMutation = {\n              subUnitId: sheetId,\n              unitId,\n              cellValue\n            };\n            redoMutationsInfo.push({\n              id: SetRangeValuesMutation.id,\n              params: setRangeValuesMutation\n            });\n          });\n        }), redoMutationsInfo.every(\n          (m) => this._commandService.executeCommand(m.id, m.params, {\n            onlyLocal: !0\n          })\n        );\n      })\n    );\n  }\n  /**\n   * Priority that mainly deals with number format in unitData\n   * @param unitId\n   * @param sheetId\n   * @param cellData\n   * @returns\n   */\n  _getMergedCellData(unitId, sheetId, cellData) {\n    const workbook = this._univerInstanceService.getUniverSheetInstance(unitId), styles = workbook == null ? void 0 : workbook.getStyles(), worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(sheetId), oldCellDataMatrix = worksheet == null ? void 0 : worksheet.getCellMatrix(), cellDataMatrix = new ObjectMatrix(cellData);\n    return cellDataMatrix.forValue((row, col, cell) => {\n      const oldCell = oldCellDataMatrix == null ? void 0 : oldCellDataMatrix.getValue(row, col), newCell = handleNumfmtInCell(oldCell, cell, styles);\n      cellDataMatrix.setValue(row, col, newCell);\n    }), cellDataMatrix.clone();\n  }\n}, __name(_a9, \"CalculateResultApplyController\"), _a9);\nCalculateResultApplyController = __decorateClass$a([\n  OnLifecycle(LifecycleStages.Ready, CalculateResultApplyController),\n  __decorateParam$a(0, Inject(IUniverInstanceService)),\n  __decorateParam$a(1, ICommandService)\n], CalculateResultApplyController);\nconst EffectRefRangId = {\n  MoveRangeCommandId,\n  InsertRowCommandId,\n  InsertColCommandId,\n  RemoveColCommandId,\n  RemoveRowCommandId,\n  DeleteRangeMoveLeftCommandId,\n  DeleteRangeMoveUpCommandId,\n  InsertRangeMoveDownCommandId,\n  InsertRangeMoveRightCommandId,\n  MoveColsCommandId,\n  MoveRowsCommandId,\n  ReorderRangeCommandId\n};\nvar OperatorType = /* @__PURE__ */ ((OperatorType2) => (OperatorType2[OperatorType2.Set = 0] = \"Set\", OperatorType2[OperatorType2.Delete = 1] = \"Delete\", OperatorType2[OperatorType2.HorizontalMove = 2] = \"HorizontalMove\", OperatorType2[OperatorType2.VerticalMove = 3] = \"VerticalMove\", OperatorType2[OperatorType2.Unknown = 4] = \"Unknown\", OperatorType2))(OperatorType || {});\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER, handleRangeTypeInput = /* @__PURE__ */ __name((range) => {\n  const _range = { ...range }, isColumn = Number.isNaN(_range.startRow) && Number.isNaN(_range.endRow) && !Number.isNaN(_range.startColumn) && !Number.isNaN(_range.endColumn), isRow = Number.isNaN(_range.startColumn) && Number.isNaN(_range.endColumn) && !Number.isNaN(_range.startRow) && !Number.isNaN(_range.endRow);\n  return (_range.rangeType === RANGE_TYPE.COLUMN || isColumn) && (_range.startRow = 0, _range.endRow = MAX_SAFE_INTEGER), (_range.rangeType === RANGE_TYPE.ROW || isRow) && (_range.startColumn = 0, _range.endColumn = MAX_SAFE_INTEGER), _range.rangeType === RANGE_TYPE.ALL && (_range.startColumn = 0, _range.endColumn = MAX_SAFE_INTEGER, _range.startRow = 0, _range.endRow = MAX_SAFE_INTEGER), _range;\n}, \"handleRangeTypeInput\"), rotateRange = /* @__PURE__ */ __name((range) => {\n  let rangeType = range.rangeType;\n  return range.rangeType === RANGE_TYPE.COLUMN ? rangeType = RANGE_TYPE.ROW : range.rangeType === RANGE_TYPE.ROW && (rangeType = RANGE_TYPE.COLUMN), {\n    startRow: range.startColumn,\n    endRow: range.endColumn,\n    startColumn: range.startRow,\n    endColumn: range.endRow,\n    rangeType\n  };\n}, \"rotateRange\"), handleBaseMoveRowsCols = /* @__PURE__ */ __name((fromRange, toRange, effectRange) => {\n  const _effectRange = { ...effectRange }, _toRange = { ...toRange }, getIntersects = /* @__PURE__ */ __name((line1, line2) => {\n    const start = Math.max(line1.start, line2.start), end = Math.min(line1.end, line2.end);\n    return end < start ? null : { start, end };\n  }, \"getIntersects\"), getLength = /* @__PURE__ */ __name((line) => line.end - line.start + 1, \"getLength\"), getRelative = /* @__PURE__ */ __name((line, origin) => ({\n    start: line.start - origin.start,\n    end: line.start - origin.start + line.end - line.start\n  }), \"getRelative\"), getAbsolute = /* @__PURE__ */ __name((line, origin) => ({\n    start: origin.start + line.start,\n    end: origin.start + line.start + line.end - line.start\n  }), \"getAbsolute\"), isToLargeFrom = toRange.start > fromRange.start;\n  if (isToLargeFrom) {\n    const step = Math.min(fromRange.end, toRange.start) - fromRange.start + 1;\n    _toRange.start -= step, _toRange.end -= step;\n  }\n  const fromRangeStep = getLength(fromRange), toRangeStep = fromRangeStep, fromRangeIntersectsEffectRange = getIntersects(fromRange, _effectRange), isFromRangeContainEffectRange = fromRangeIntersectsEffectRange && getLength(fromRangeIntersectsEffectRange) >= getLength(_effectRange);\n  if (fromRange.end < _effectRange.start)\n    _effectRange.start -= fromRangeStep, _effectRange.end -= fromRangeStep;\n  else if (fromRangeIntersectsEffectRange) {\n    const fromRangeIntersectsEffectRangeStep = getLength(fromRangeIntersectsEffectRange);\n    if (isFromRangeContainEffectRange) {\n      const relative = getRelative(_effectRange, fromRange), newLine = getAbsolute(relative, _toRange);\n      _effectRange.start = newLine.start, _effectRange.end = newLine.end;\n    } else fromRangeIntersectsEffectRange.start > fromRange.start ? isToLargeFrom ? (_effectRange.end -= fromRangeIntersectsEffectRangeStep + fromRangeStep, _effectRange.start -= fromRangeStep) : _effectRange.end -= fromRangeIntersectsEffectRangeStep : isToLargeFrom ? _effectRange.end -= fromRangeIntersectsEffectRangeStep : _effectRange.start > fromRange.start && _effectRange.end > fromRange.end ? (_effectRange.start -= fromRangeStep, _effectRange.end -= fromRangeStep + fromRangeIntersectsEffectRangeStep) : _effectRange.end -= fromRangeIntersectsEffectRangeStep;\n  }\n  const toRangeIntersectsEffectRange = getIntersects(_toRange, _effectRange);\n  return isFromRangeContainEffectRange || (_toRange.start <= _effectRange.start ? (_effectRange.start += toRangeStep, _effectRange.end += toRangeStep) : toRangeIntersectsEffectRange && (isToLargeFrom ? _toRange.end <= _effectRange.start || _toRange.start <= _effectRange.start && _toRange.end >= _effectRange.start ? (_effectRange.start += toRangeStep, _effectRange.end += toRangeStep) : _toRange.start >= _effectRange.start && _toRange.start <= _effectRange.end && (_effectRange.end += toRangeStep) : _effectRange.start < _toRange.start && _effectRange.end > _toRange.start ? _effectRange.end += toRangeStep : (_effectRange.start >= _toRange.end || _effectRange.start >= _toRange.start && _effectRange.start <= _toRange.end) && (_effectRange.end += toRangeStep, _effectRange.start += toRangeStep))), {\n    step: _effectRange.start - effectRange.start,\n    length: getLength(_effectRange) - getLength(effectRange)\n  };\n}, \"handleBaseMoveRowsCols\"), handleMoveRows = /* @__PURE__ */ __name((params, targetRange) => {\n  const { fromRange, toRange } = params.params || {};\n  if (!toRange || !fromRange)\n    return [];\n  const _fromRange = handleRangeTypeInput(fromRange), _toRange = handleRangeTypeInput(toRange), _targetRange = handleRangeTypeInput(targetRange), result = handleBaseMoveRowsCols(\n    { start: _fromRange.startRow, end: _fromRange.endRow },\n    { start: _toRange.startRow, end: _toRange.endRow },\n    { start: _targetRange.startRow, end: _targetRange.endRow }\n  );\n  return result === null ? [\n    {\n      type: OperatorType.Delete\n    }\n  ] : [\n    {\n      type: OperatorType.VerticalMove,\n      step: result.step || 0,\n      length: result.length || 0\n    }\n  ];\n}, \"handleMoveRows\"), handleMoveRowsCommon = /* @__PURE__ */ __name((params, targetRange) => {\n  const { fromRange, toRange } = params.params || {};\n  if (!fromRange || !toRange)\n    return [targetRange];\n  const fromRow = fromRange.startRow, count = fromRange.endRow - fromRange.startRow + 1, toRow = toRange.startRow, matrix = new ObjectMatrix();\n  return Range.foreach(targetRange, (row, col) => {\n    matrix.setValue(row, col, 1);\n  }), matrix.moveRows(fromRow, count, toRow), queryObjectMatrix(matrix, (value) => value === 1);\n}, \"handleMoveRowsCommon\"), handleReorderRangeCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  const { range, order } = param.params || {};\n  if (!range || !order)\n    return [targetRange];\n  const matrix = new ObjectMatrix();\n  Range.foreach(targetRange, (row, col) => {\n    matrix.setValue(row, col, 1);\n  });\n  const cacheMatrix = new ObjectMatrix();\n  return Range.foreach(range, (row, col) => {\n    var _a20;\n    if (order.hasOwnProperty(row)) {\n      const targetRow = order[row], cloneCell = (_a20 = matrix.getValue(targetRow, col)) != null ? _a20 : 0;\n      cacheMatrix.setValue(row, col, cloneCell);\n    }\n  }), cacheMatrix.forValue((row, col, cellData) => {\n    matrix.setValue(row, col, cellData);\n  }), queryObjectMatrix(matrix, (value) => value === 1);\n}, \"handleReorderRangeCommon\"), handleMoveCols = /* @__PURE__ */ __name((params, targetRange) => {\n  const { fromRange, toRange } = params.params || {};\n  if (!toRange || !fromRange)\n    return [];\n  const _fromRange = handleRangeTypeInput(fromRange), _toRange = handleRangeTypeInput(toRange), _targetRange = handleRangeTypeInput(targetRange), result = handleBaseMoveRowsCols(\n    { start: _fromRange.startColumn, end: _fromRange.endColumn },\n    { start: _toRange.startColumn, end: _toRange.endColumn },\n    { start: _targetRange.startColumn, end: _targetRange.endColumn }\n  );\n  return result === null ? [\n    {\n      type: OperatorType.Delete\n    }\n  ] : [\n    {\n      type: OperatorType.HorizontalMove,\n      step: result.step || 0,\n      length: result.length || 0\n    }\n  ];\n}, \"handleMoveCols\"), handleMoveColsCommon = /* @__PURE__ */ __name((params, targetRange) => {\n  const { fromRange, toRange } = params.params || {};\n  if (!fromRange || !toRange)\n    return [targetRange];\n  const fromCol = fromRange.startColumn, count = fromRange.endColumn - fromRange.startColumn + 1, toCol = toRange.startColumn, matrix = new ObjectMatrix();\n  return Range.foreach(targetRange, (row, col) => {\n    matrix.setValue(row, col, 1);\n  }), matrix.moveColumns(fromCol, count, toCol), queryObjectMatrix(matrix, (value) => value === 1);\n}, \"handleMoveColsCommon\"), handleMoveRange = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20, _b;\n  const toRange = (_a20 = param.params) == null ? void 0 : _a20.toRange, fromRange = (_b = param.params) == null ? void 0 : _b.fromRange;\n  if (!toRange || !fromRange)\n    return [];\n  const operators = [];\n  if (Rectangle.contains(toRange, targetRange) && operators.push({\n    type: OperatorType.Delete\n  }), Rectangle.contains(fromRange, targetRange)) {\n    operators.push({\n      type: OperatorType.Delete\n    });\n    const relativeRange = Rectangle.getRelativeRange(targetRange, fromRange), positionRange = Rectangle.getPositionRange(relativeRange, toRange);\n    return [\n      {\n        type: OperatorType.Set,\n        range: positionRange\n      }\n    ];\n  }\n  return operators;\n}, \"handleMoveRange\"), handleMoveRangeCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20, _b;\n  const toRange = (_a20 = param.params) == null ? void 0 : _a20.toRange, fromRange = (_b = param.params) == null ? void 0 : _b.fromRange;\n  if (!toRange || !fromRange)\n    return [targetRange];\n  if (!Rectangle.intersects(fromRange, targetRange) && !Rectangle.intersects(toRange, targetRange))\n    return [targetRange];\n  if (Rectangle.contains(fromRange, targetRange)) {\n    const relativeRange = Rectangle.getRelativeRange(targetRange, fromRange);\n    return [Rectangle.getPositionRange(relativeRange, toRange)];\n  }\n  const matrix = new ObjectMatrix();\n  Range.foreach(targetRange, (row, col) => {\n    matrix.setValue(row, col, 1);\n  });\n  const fromMatrix = new ObjectMatrix(), loopFromRange = Rectangle.getIntersects(fromRange, targetRange);\n  loopFromRange && Range.foreach(loopFromRange, (row, col) => {\n    matrix.getValue(row, col) && (matrix.setValue(row, col, void 0), fromMatrix.setValue(row, col, 1));\n  });\n  const columnOffset = toRange.startColumn - fromRange.startColumn, rowOffset = toRange.startRow - fromRange.startRow, loopToRange = {\n    startColumn: toRange.startColumn - columnOffset,\n    endColumn: toRange.endColumn - columnOffset,\n    startRow: toRange.startRow - rowOffset,\n    endRow: toRange.endRow - rowOffset\n  };\n  return loopToRange && Range.foreach(loopToRange, (row, col) => {\n    var _a21;\n    const targetRow = row + rowOffset, targetCol = col + columnOffset;\n    matrix.setValue(targetRow, targetCol, (_a21 = fromMatrix.getValue(row, col)) != null ? _a21 : 0);\n  }), queryObjectMatrix(matrix, (value) => value === 1);\n}, \"handleMoveRangeCommon\"), handleBaseRemoveRange = /* @__PURE__ */ __name((_removeRange, _targetRange) => {\n  const removeRange = handleRangeTypeInput(_removeRange), targetRange = handleRangeTypeInput(_targetRange), getLength = /* @__PURE__ */ __name((range) => range.endColumn - range.startColumn + 1, \"getLength\"), getRowLength = /* @__PURE__ */ __name((range) => range.endRow - range.startRow + 1, \"getRowLength\");\n  if (removeRange.startRow <= targetRange.startRow && removeRange.endRow >= targetRange.endRow) {\n    if (\n      // 2\n      targetRange.startColumn < removeRange.startColumn && targetRange.endColumn >= removeRange.startColumn && targetRange.endColumn <= removeRange.endColumn || // 6\n      targetRange.startColumn < removeRange.startColumn && targetRange.endColumn >= removeRange.endColumn\n    ) {\n      const intersectedRange = Rectangle.getIntersects(targetRange, removeRange);\n      if (intersectedRange)\n        return { step: 0, length: -getLength(intersectedRange) };\n    }\n    if (targetRange.startColumn >= removeRange.startColumn && targetRange.endColumn <= removeRange.endColumn && getRowLength(removeRange) >= getRowLength(targetRange))\n      return null;\n    if (targetRange.startColumn >= removeRange.startColumn && targetRange.startColumn <= removeRange.endColumn && targetRange.endColumn > removeRange.endColumn) {\n      const intersectedRange = Rectangle.getIntersects(targetRange, removeRange);\n      if (intersectedRange) {\n        const length = -getLength(intersectedRange);\n        return { step: -(getLength(removeRange) - getLength(intersectedRange)), length };\n      }\n    }\n    if (targetRange.startColumn > removeRange.endColumn)\n      return { step: -getLength(removeRange), length: 0 };\n  }\n  return { step: 0, length: 0 };\n}, \"handleBaseRemoveRange\"), handleIRemoveCol = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseRemoveRange(range, targetRange);\n  if (!result)\n    operators.push({ type: OperatorType.Delete });\n  else {\n    const { step, length } = result;\n    operators.push({\n      type: OperatorType.HorizontalMove,\n      step,\n      length\n    });\n  }\n  return operators;\n}, \"handleIRemoveCol\"), handleIRemoveRow = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseRemoveRange(rotateRange(range), rotateRange(targetRange));\n  if (!result)\n    operators.push({ type: OperatorType.Delete });\n  else {\n    const { step, length } = result;\n    operators.push({\n      type: OperatorType.VerticalMove,\n      step,\n      length\n    });\n  }\n  return operators;\n}, \"handleIRemoveRow\"), handleReorderRange = /* @__PURE__ */ __name((param, targetRange) => {\n  const { range, order } = param.params || {};\n  if (!range || !order)\n    return [];\n  if (Rectangle.contains(range, targetRange) && targetRange.endRow === targetRange.startRow) {\n    const operators = [], targetRow = targetRange.startRow;\n    for (const k in order)\n      if (order[k] === targetRow) {\n        const toRow = Number(k);\n        return operators.push({\n          type: OperatorType.VerticalMove,\n          step: toRow - targetRow,\n          length: 0\n        }), operators;\n      }\n    return [];\n  }\n  return [];\n}, \"handleReorderRange\"), handleBaseInsertRange = /* @__PURE__ */ __name((_insertRange, _targetRange) => {\n  const insertRange = handleRangeTypeInput(_insertRange), targetRange = handleRangeTypeInput(_targetRange), getLength = /* @__PURE__ */ __name((range) => range.endColumn - range.startColumn + 1, \"getLength\");\n  if (insertRange.startRow <= targetRange.startRow && insertRange.endRow >= targetRange.endRow) {\n    if (\n      // 2\n      targetRange.startColumn < insertRange.startColumn && targetRange.endColumn >= insertRange.startColumn && targetRange.endColumn <= insertRange.endColumn || // 6\n      targetRange.startColumn < insertRange.startColumn && targetRange.endColumn >= insertRange.endColumn\n    )\n      return { step: 0, length: getLength(insertRange) };\n    if (\n      // 3\n      targetRange.startColumn >= insertRange.startColumn && targetRange.endColumn <= insertRange.endColumn || // 4\n      targetRange.startColumn > insertRange.startColumn && targetRange.startColumn <= insertRange.endColumn && targetRange.endColumn > insertRange.endColumn || //5\n      targetRange.startColumn >= insertRange.endColumn\n    )\n      return { step: getLength(insertRange), length: 0 };\n  }\n  return { step: 0, length: 0 };\n}, \"handleBaseInsertRange\");\nfunction handleBaseMoveRange(fromRange, toRange, targetRange) {\n  const operators = [];\n  if (Rectangle.contains(toRange, targetRange) && operators.push({\n    type: OperatorType.Delete\n  }), Rectangle.contains(fromRange, targetRange)) {\n    operators.push({\n      type: OperatorType.Delete\n    });\n    const relativeRange = Rectangle.getRelativeRange(targetRange, fromRange), positionRange = Rectangle.getPositionRange(relativeRange, toRange);\n    return [\n      {\n        type: OperatorType.Set,\n        range: positionRange\n      }\n    ];\n  }\n  return operators;\n}\n__name(handleBaseMoveRange, \"handleBaseMoveRange\");\nconst handleInsertRow = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseInsertRange(rotateRange(range), rotateRange(targetRange)), { step, length } = result;\n  return operators.push({\n    type: OperatorType.VerticalMove,\n    step,\n    length\n  }), operators;\n}, \"handleInsertRow\"), handleInsertCol = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseInsertRange(range, targetRange), { step, length } = result;\n  return operators.push({\n    type: OperatorType.HorizontalMove,\n    step,\n    length\n  }), operators;\n}, \"handleInsertCol\"), handleInsertRangeMoveDown = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseInsertRange(rotateRange(range), rotateRange(targetRange)), { step, length } = result;\n  return operators.push({\n    type: OperatorType.VerticalMove,\n    step,\n    length\n  }), operators;\n}, \"handleInsertRangeMoveDown\"), handleInsertRangeMoveDownCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [targetRange];\n  const moveCount = range.endRow - range.startRow + 1, bottomRange = {\n    ...range,\n    startRow: range.startRow,\n    endRow: Number.POSITIVE_INFINITY\n  }, noMoveRanges = Rectangle.subtract(targetRange, bottomRange), targetMoveRange = Rectangle.getIntersects(bottomRange, targetRange);\n  if (!targetMoveRange)\n    return [targetRange];\n  const matrix = new ObjectMatrix();\n  return noMoveRanges.forEach((noMoveRange) => {\n    Range.foreach(noMoveRange, (row, col) => {\n      matrix.setValue(row, col, 1);\n    });\n  }), targetMoveRange && Range.foreach(targetMoveRange, (row, col) => {\n    matrix.setValue(row + moveCount, col, 1);\n  }), queryObjectMatrix(matrix, (v) => v === 1);\n}, \"handleInsertRangeMoveDownCommon\"), handleInsertRangeMoveRight = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseInsertRange(range, targetRange), { step, length } = result;\n  return operators.push({\n    type: OperatorType.HorizontalMove,\n    step,\n    length\n  }), operators;\n}, \"handleInsertRangeMoveRight\"), handleInsertRangeMoveRightCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [targetRange];\n  const moveCount = range.endColumn - range.startColumn + 1, bottomRange = {\n    ...range,\n    startColumn: range.startColumn,\n    endColumn: Number.POSITIVE_INFINITY\n  }, noMoveRanges = Rectangle.subtract(targetRange, bottomRange), targetMoveRange = Rectangle.getIntersects(bottomRange, targetRange);\n  if (!targetMoveRange)\n    return [targetRange];\n  const matrix = new ObjectMatrix();\n  return noMoveRanges.forEach((noMoveRange) => {\n    Range.foreach(noMoveRange, (row, col) => {\n      matrix.setValue(row, col, 1);\n    });\n  }), targetMoveRange && Range.foreach(targetMoveRange, (row, col) => {\n    matrix.setValue(row, col + moveCount, 1);\n  }), queryObjectMatrix(matrix, (v) => v === 1);\n}, \"handleInsertRangeMoveRightCommon\"), handleDeleteRangeMoveLeft = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseRemoveRange(range, targetRange);\n  if (!result)\n    operators.push({ type: OperatorType.Delete });\n  else {\n    const { step, length } = result;\n    operators.push({\n      type: OperatorType.HorizontalMove,\n      step,\n      length\n    });\n  }\n  return operators;\n}, \"handleDeleteRangeMoveLeft\"), handleDeleteRangeMoveLeftCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [targetRange];\n  const rightRange = {\n    startRow: range.startRow,\n    endRow: range.endRow,\n    startColumn: range.startColumn,\n    endColumn: Number.POSITIVE_INFINITY\n  }, moveCount = range.endColumn - range.startColumn + 1, targetDeleteRange = Rectangle.getIntersects(range, targetRange), noMoveRanges = Rectangle.subtract(targetRange, rightRange), targetMoveRange = Rectangle.getIntersects(rightRange, targetRange);\n  if (!targetDeleteRange && !targetMoveRange)\n    return [targetRange];\n  const matrix = new ObjectMatrix();\n  return targetMoveRange && Range.foreach(targetMoveRange, (row, col) => {\n    matrix.setValue(row, col - moveCount, 1);\n  }), targetDeleteRange && Range.foreach(targetDeleteRange, (row, col) => {\n    matrix.setValue(row, col - moveCount, 0);\n  }), noMoveRanges.forEach((noMoveRange) => {\n    Range.foreach(noMoveRange, (row, col) => {\n      matrix.setValue(row, col, 1);\n    });\n  }), queryObjectMatrix(matrix, (v) => v === 1);\n}, \"handleDeleteRangeMoveLeftCommon\"), handleDeleteRangeMoveUp = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [];\n  const operators = [], result = handleBaseRemoveRange(rotateRange(range), rotateRange(targetRange));\n  if (!result)\n    operators.push({ type: OperatorType.Delete });\n  else {\n    const { step, length } = result;\n    operators.push({\n      type: OperatorType.VerticalMove,\n      step,\n      length\n    });\n  }\n  return operators;\n}, \"handleDeleteRangeMoveUp\"), handleDeleteRangeMoveUpCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const range = (_a20 = param.params) == null ? void 0 : _a20.range;\n  if (!range)\n    return [targetRange];\n  const bottomRange = {\n    ...range,\n    startRow: range.startRow,\n    endRow: Number.POSITIVE_INFINITY\n  }, moveCount = range.endRow - range.startRow + 1, targetDeleteRange = Rectangle.getIntersects(range, targetRange), noMoveRanges = Rectangle.subtract(targetRange, bottomRange), targetMoveRange = Rectangle.getIntersects(bottomRange, targetRange);\n  if (!targetDeleteRange && !targetMoveRange)\n    return [targetRange];\n  const matrix = new ObjectMatrix();\n  return targetMoveRange && Range.foreach(targetMoveRange, (row, col) => {\n    matrix.setValue(row - moveCount, col, 1);\n  }), targetDeleteRange && Range.foreach(targetDeleteRange, (row, col) => {\n    matrix.setValue(row - moveCount, col, 0);\n  }), noMoveRanges.forEach((noMoveRange) => {\n    Range.foreach(noMoveRange, (row, col) => {\n      matrix.setValue(row, col, 1);\n    });\n  }), queryObjectMatrix(matrix, (v) => v === 1);\n}, \"handleDeleteRangeMoveUpCommon\"), handleRemoveRowCommon = /* @__PURE__ */ __name((param, targetRange) => {\n  var _a20;\n  const ranges = (_a20 = param.ranges) != null ? _a20 : [param.range], matrix = new ObjectMatrix();\n  return Range.foreach(targetRange, (row, col) => {\n    matrix.setValue(row, col, 1);\n  }), ranges.forEach((range) => {\n    const startRow = range.startRow, count = range.endRow - startRow + 1;\n    matrix.removeRows(startRow, count);\n  }), queryObjectMatrix(matrix, (value) => value === 1);\n}, \"handleRemoveRowCommon\"), runRefRangeMutations = /* @__PURE__ */ __name((operators, range) => {\n  let result = { ...range };\n  return operators.forEach((operator) => {\n    switch (operator.type) {\n      case OperatorType.Delete: {\n        result = null;\n        break;\n      }\n      case OperatorType.HorizontalMove: {\n        if (!result)\n          return;\n        result.startColumn += operator.step, result.endColumn += operator.step + (operator.length || 0);\n        break;\n      }\n      case OperatorType.VerticalMove: {\n        if (!result)\n          return;\n        result.startRow += operator.step, result.endRow += operator.step + (operator.length || 0);\n        break;\n      }\n      case OperatorType.Set: {\n        result = operator.range;\n        break;\n      }\n    }\n  }), result && (result.endColumn < result.startColumn || result.endRow < result.startRow) ? null : result;\n}, \"runRefRangeMutations\"), handleDefaultRangeChangeWithEffectRefCommands = /* @__PURE__ */ __name((range, commandInfo) => {\n  let operator = [];\n  switch (commandInfo.id) {\n    case EffectRefRangId.DeleteRangeMoveLeftCommandId: {\n      operator = handleDeleteRangeMoveLeft(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.DeleteRangeMoveUpCommandId: {\n      operator = handleDeleteRangeMoveUp(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.InsertColCommandId: {\n      operator = handleInsertCol(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.InsertRangeMoveDownCommandId: {\n      operator = handleInsertRangeMoveDown(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.InsertRangeMoveRightCommandId: {\n      operator = handleInsertRangeMoveRight(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.InsertRowCommandId: {\n      operator = handleInsertRow(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.MoveColsCommandId: {\n      operator = handleMoveCols(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.MoveRangeCommandId: {\n      operator = handleMoveRange(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.MoveRowsCommandId: {\n      operator = handleMoveRows(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.RemoveColCommandId: {\n      operator = handleIRemoveCol(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.RemoveRowCommandId: {\n      operator = handleIRemoveRow(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.ReorderRangeCommandId: {\n      operator = handleReorderRange(commandInfo, range);\n      break;\n    }\n  }\n  return runRefRangeMutations(operator, range);\n}, \"handleDefaultRangeChangeWithEffectRefCommands\"), handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests = /* @__PURE__ */ __name((range, commandInfo, deps) => [DeleteRangeMoveLeftCommand.id, DeleteRangeMoveUpCommand.id].includes(commandInfo.id) || getEffectedRangesOnCommand(commandInfo, deps).some((effectRange) => Rectangle.intersects(effectRange, range)) ? handleDefaultRangeChangeWithEffectRefCommands(range, commandInfo) : range, \"handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests\"), handleCommonDefaultRangeChangeWithEffectRefCommands = /* @__PURE__ */ __name((range, commandInfo) => {\n  let operator = [];\n  switch (commandInfo.id) {\n    case EffectRefRangId.DeleteRangeMoveLeftCommandId:\n      return handleDeleteRangeMoveLeftCommon(commandInfo, range);\n    case EffectRefRangId.DeleteRangeMoveUpCommandId:\n      return handleDeleteRangeMoveUpCommon(commandInfo, range);\n    case EffectRefRangId.InsertRangeMoveDownCommandId:\n      return handleInsertRangeMoveDownCommon(commandInfo, range);\n    case EffectRefRangId.InsertRangeMoveRightCommandId:\n      return handleInsertRangeMoveRightCommon(commandInfo, range);\n    case EffectRefRangId.InsertColCommandId: {\n      operator = handleInsertCol(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.InsertRowCommandId: {\n      operator = handleInsertRow(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.MoveColsCommandId:\n      return handleMoveColsCommon(commandInfo, range);\n    case EffectRefRangId.MoveRangeCommandId:\n      return handleMoveRangeCommon(commandInfo, range);\n    case EffectRefRangId.MoveRowsCommandId:\n      return handleMoveRowsCommon(commandInfo, range);\n    case EffectRefRangId.ReorderRangeCommandId:\n      return handleReorderRangeCommon(commandInfo, range);\n    case EffectRefRangId.RemoveColCommandId: {\n      operator = handleIRemoveCol(commandInfo, range);\n      break;\n    }\n    case EffectRefRangId.RemoveRowCommandId:\n      return handleRemoveRowCommon(commandInfo.params, range);\n  }\n  return runRefRangeMutations(operator, range);\n}, \"handleCommonDefaultRangeChangeWithEffectRefCommands\"), handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests = /* @__PURE__ */ __name((range, commandInfo, deps) => [DeleteRangeMoveLeftCommand.id, DeleteRangeMoveUpCommand.id, InsertRangeMoveDownCommand.id, InsertRangeMoveRightCommandId].includes(commandInfo.id) || getEffectedRangesOnCommand(commandInfo, deps).some((effectRange) => Rectangle.intersects(effectRange, range)) ? handleCommonDefaultRangeChangeWithEffectRefCommands(range, commandInfo) : range, \"handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests\");\nfunction adjustRangeOnMutation(range, mutation) {\n  const { id, params } = mutation;\n  let baseRangeOperator = {\n    length: 0,\n    step: 0,\n    type: OperatorType.Unknown\n  };\n  switch (id) {\n    case RemoveSheetMutation.id:\n      baseRangeOperator.type = OperatorType.Delete;\n      break;\n    case MoveRowsMutation.id:\n      baseRangeOperator = handleBaseMoveRowsCols(\n        { start: params.sourceRange.startRow, end: params.sourceRange.endRow },\n        { start: params.targetRange.startRow, end: params.targetRange.endRow },\n        { start: range.startRow, end: range.endRow }\n      ), baseRangeOperator.type = OperatorType.VerticalMove;\n      break;\n    case MoveColsMutation.id:\n      baseRangeOperator = handleBaseMoveRowsCols(\n        { start: params.sourceRange.startColumn, end: params.sourceRange.endColumn },\n        { start: params.targetRange.startColumn, end: params.targetRange.endColumn },\n        { start: range.startColumn, end: range.endColumn }\n      ), baseRangeOperator.type = OperatorType.HorizontalMove;\n      break;\n    case RemoveColMutation.id:\n      baseRangeOperator = handleBaseRemoveRange(params.range, range), baseRangeOperator ? baseRangeOperator.type = OperatorType.HorizontalMove : baseRangeOperator = { step: 0, length: 0, type: OperatorType.Delete };\n      break;\n    case RemoveRowMutation.id:\n      baseRangeOperator = handleBaseRemoveRange(rotateRange(params.range), rotateRange(range)), baseRangeOperator ? baseRangeOperator.type = OperatorType.VerticalMove : baseRangeOperator = { step: 0, length: 0, type: OperatorType.Delete };\n      break;\n    case InsertRowMutation.id:\n      baseRangeOperator = handleBaseInsertRange(rotateRange(params.range), rotateRange(range)), baseRangeOperator.type = OperatorType.VerticalMove;\n      break;\n    case InsertColMutation.id:\n      baseRangeOperator = handleBaseInsertRange(params.range, range), baseRangeOperator.type = OperatorType.HorizontalMove;\n      break;\n    case MoveRangeMutation.id:\n      {\n        const fromRange = params.fromRange || new ObjectMatrix(params.from).getRange(), toRange = params.toRange || new ObjectMatrix(params.to).getRange();\n        baseRangeOperator = handleBaseMoveRange(\n          fromRange,\n          toRange,\n          range\n        );\n      }\n      break;\n  }\n  return baseRangeOperator ? Array.isArray(baseRangeOperator) ? runRefRangeMutations(baseRangeOperator, range) : runRefRangeMutations([baseRangeOperator], range) : range;\n}\n__name(adjustRangeOnMutation, \"adjustRangeOnMutation\");\nfunction getEffectedRangesOnCommand(command, deps) {\n  var _a20, _b, _c, _d, _e, _f;\n  const { selectionManagerService } = deps;\n  switch (command.id) {\n    case EffectRefRangId.MoveColsCommandId: {\n      const params = command.params;\n      return [\n        params.fromRange,\n        {\n          ...params.toRange,\n          startColumn: params.toRange.startColumn - 0.5,\n          endColumn: params.toRange.endColumn - 0.5\n        }\n      ];\n    }\n    case EffectRefRangId.MoveRowsCommandId: {\n      const params = command.params;\n      return [\n        params.fromRange,\n        {\n          ...params.toRange,\n          startRow: params.toRange.startRow - 0.5,\n          endRow: params.toRange.startRow - 0.5\n        }\n      ];\n    }\n    case EffectRefRangId.MoveRangeCommandId: {\n      const params = command;\n      return [params.params.fromRange, params.params.toRange];\n    }\n    case EffectRefRangId.InsertRowCommandId: {\n      const range = command.params.range;\n      return [\n        {\n          ...range,\n          startRow: range.startRow - 0.5,\n          endRow: range.endRow - 0.5\n        }\n      ];\n    }\n    case EffectRefRangId.InsertColCommandId: {\n      const range = command.params.range;\n      return [\n        {\n          ...range,\n          startColumn: range.startColumn - 0.5,\n          endColumn: range.endColumn - 0.5\n        }\n      ];\n    }\n    case EffectRefRangId.RemoveRowCommandId:\n      return [command.params.range];\n    case EffectRefRangId.RemoveColCommandId:\n      return [command.params.range];\n    case EffectRefRangId.DeleteRangeMoveUpCommandId:\n    case EffectRefRangId.InsertRangeMoveDownCommandId: {\n      const range = ((_a20 = command.params) == null ? void 0 : _a20.range) || ((_c = (_b = selectionManagerService.getCurrentSelections()) == null ? void 0 : _b.map((s) => s.range)) == null ? void 0 : _c[0]);\n      return range ? [range] : [];\n    }\n    case EffectRefRangId.DeleteRangeMoveLeftCommandId:\n    case EffectRefRangId.InsertRangeMoveRightCommandId: {\n      const range = ((_d = command.params) == null ? void 0 : _d.range) || ((_f = (_e = selectionManagerService.getCurrentSelections()) == null ? void 0 : _e.map((s) => s.range)) == null ? void 0 : _f[0]);\n      return range ? [range] : [];\n    }\n    case EffectRefRangId.ReorderRangeCommandId: {\n      const params = command, { range, order } = params.params, effectRanges = [];\n      for (let row = range.startRow; row <= range.endRow; row++)\n        row in order && effectRanges.push({\n          startRow: row,\n          endRow: row,\n          startColumn: range.startColumn,\n          endColumn: range.endColumn\n        });\n      return effectRanges;\n    }\n  }\n}\n__name(getEffectedRangesOnCommand, \"getEffectedRangesOnCommand\");\nfunction getEffectedRangesOnMutation(mutation) {\n  switch (mutation.id) {\n    case MoveColsMutation.id: {\n      const params = mutation.params;\n      return [\n        params.sourceRange,\n        {\n          ...params.targetRange,\n          startColumn: params.targetRange.startColumn - 0.5,\n          endColumn: params.targetRange.startColumn - 0.5\n        }\n      ];\n    }\n    case MoveRowsMutation.id: {\n      const params = mutation.params;\n      return [\n        params.sourceRange,\n        {\n          ...params.targetRange,\n          startRow: params.targetRange.startRow - 0.5,\n          endRow: params.targetRange.startRow - 0.5\n        }\n      ];\n    }\n    case MoveRangeMutation.id: {\n      const params = mutation.params;\n      return [new ObjectMatrix(params.from.value).getRange(), new ObjectMatrix(params.to.value).getRange()];\n    }\n    case InsertColMutation.id: {\n      const range = mutation.params.range;\n      return [\n        {\n          ...range,\n          startColumn: range.startColumn - 0.5,\n          endColumn: range.startColumn - 0.5\n        }\n      ];\n    }\n    case InsertRowMutation.id: {\n      const range = mutation.params.range;\n      return [\n        {\n          ...range,\n          startRow: range.startRow - 0.5,\n          endRow: range.startRow - 0.5\n        }\n      ];\n    }\n    case RemoveColMutation.id:\n      return [mutation.params.range];\n    case RemoveRowMutation.id:\n      return [mutation.params.range];\n  }\n}\n__name(getEffectedRangesOnMutation, \"getEffectedRangesOnMutation\");\nvar __defProp$9 = Object.defineProperty, __getOwnPropDesc$9 = Object.getOwnPropertyDescriptor, __decorateClass$9 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$9(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$9(target, key, result), result;\n}, \"__decorateClass$9\"), __decorateParam$9 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$9\");\nconst MERGE_REDO = createInterceptorKey(\"MERGE_REDO\"), MERGE_UNDO = createInterceptorKey(\"MERGE_UNDO\"), MAX_ROW_COL = Math.floor(Number.MAX_SAFE_INTEGER / 10), _WatchRange = class _WatchRange extends Disposable {\n  constructor(_unitId, _subUnitId, _range, _callback, _skipIntersects = !1) {\n    super(), this._unitId = _unitId, this._subUnitId = _subUnitId, this._range = _range, this._callback = _callback, this._skipIntersects = _skipIntersects;\n  }\n  onMutation(mutation) {\n    var _a20, _b;\n    if (((_a20 = mutation.params) == null ? void 0 : _a20.unitId) !== this._unitId)\n      return;\n    if (mutation.id === MoveRangeMutation.id) {\n      const params = mutation.params;\n      if (params.from.subUnitId !== this._subUnitId || params.to.subUnitId !== this._subUnitId)\n        return;\n    } else if (((_b = mutation.params) == null ? void 0 : _b.subUnitId) !== this._subUnitId)\n      return;\n    if (!this._range)\n      return;\n    if (this._skipIntersects) {\n      if (mutation.id === RemoveSheetMutation.id)\n        return;\n      const effectRanges = getEffectedRangesOnMutation(mutation);\n      if (effectRanges != null && effectRanges.some((effectRange) => Rectangle.intersects(effectRange, this._range)))\n        return;\n    }\n    const afterRange = adjustRangeOnMutation(this._range, mutation);\n    if (afterRange && Rectangle.equals(afterRange, this._range))\n      return !1;\n    const beforeChange = this._range;\n    this._range = afterRange, this._callback(beforeChange, afterRange);\n  }\n};\n__name(_WatchRange, \"WatchRange\");\nlet WatchRange = _WatchRange;\nvar _a10;\nlet RefRangeService = (_a10 = class extends Disposable {\n  constructor(_commandService, _sheetInterceptorService, _univerInstanceService, _selectionManagerService) {\n    super();\n    __publicField(this, \"interceptor\", new InterceptorManager({ MERGE_REDO, MERGE_UNDO }));\n    __publicField(this, \"_watchRanges\", /* @__PURE__ */ new Set());\n    __publicField(this, \"_refRangeManagerMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_serializer\", createRangeSerializer());\n    // eslint-disable-next-line max-lines-per-function\n    __publicField(this, \"_onRefRangeChange\", /* @__PURE__ */ __name(() => {\n      this._sheetInterceptorService.interceptCommand({\n        // eslint-disable-next-line max-lines-per-function\n        getMutations: /* @__PURE__ */ __name((command) => {\n          const worksheet = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET).getActiveSheet(), unitId = getUnitId(this._univerInstanceService), subUnitId = getSubUnitId(this._univerInstanceService);\n          if (!worksheet || !unitId || !subUnitId)\n            return { redos: [], undos: [], preRedos: [], preUndos: [] };\n          const result = ((/* @__PURE__ */ __name(() => {\n            switch (command.id) {\n              case EffectRefRangId.MoveColsCommandId: {\n                const params = command.params, startColumn = Math.min(params.fromRange.startColumn, params.toRange.startColumn);\n                return this._checkRange(\n                  [{ ...params.fromRange, startColumn, endColumn: worksheet.getColumnCount() - 1 }],\n                  unitId,\n                  subUnitId\n                );\n              }\n              case EffectRefRangId.MoveRowsCommandId: {\n                const params = command.params, startRow = Math.min(params.fromRange.startRow, params.toRange.startRow);\n                return this._checkRange(\n                  [{ ...params.fromRange, startRow, endRow: worksheet.getRowCount() - 1 }],\n                  unitId,\n                  subUnitId\n                );\n              }\n              case EffectRefRangId.MoveRangeCommandId: {\n                const params = command;\n                return this._checkRange(\n                  [params.params.fromRange, params.params.toRange],\n                  unitId,\n                  subUnitId\n                );\n              }\n              case EffectRefRangId.InsertRowCommandId: {\n                const range = {\n                  startRow: command.params.range.startRow,\n                  endRow: worksheet.getRowCount() - 1,\n                  startColumn: 0,\n                  endColumn: worksheet.getColumnCount() - 1,\n                  rangeType: RANGE_TYPE.ROW\n                };\n                return this._checkRange([range], unitId, subUnitId);\n              }\n              case EffectRefRangId.InsertColCommandId: {\n                const colStart = command.params.range.startColumn, range = {\n                  startRow: 0,\n                  endRow: worksheet.getRowCount() - 1,\n                  startColumn: colStart,\n                  endColumn: worksheet.getColumnCount() - 1,\n                  rangeType: RANGE_TYPE.COLUMN\n                };\n                return this._checkRange([range], unitId, subUnitId);\n              }\n              case EffectRefRangId.RemoveRowCommandId: {\n                const range = {\n                  startRow: command.params.range.startRow,\n                  endRow: worksheet.getRowCount() - 1,\n                  startColumn: 0,\n                  endColumn: worksheet.getColumnCount() - 1,\n                  rangeType: RANGE_TYPE.ROW\n                };\n                return this._checkRange([range], unitId, subUnitId);\n              }\n              case EffectRefRangId.RemoveColCommandId: {\n                const colStart = command.params.range.startColumn, range = {\n                  startRow: 0,\n                  endRow: worksheet.getRowCount() - 1,\n                  startColumn: colStart,\n                  endColumn: worksheet.getColumnCount() - 1,\n                  rangeType: RANGE_TYPE.COLUMN\n                };\n                return this._checkRange([range], unitId, subUnitId);\n              }\n              case EffectRefRangId.DeleteRangeMoveUpCommandId:\n              case EffectRefRangId.InsertRangeMoveDownCommandId: {\n                const range = command.params.range || getSelectionRanges(this._selectionManagerService)[0], effectRange = {\n                  startRow: range.startRow,\n                  startColumn: range.startColumn,\n                  endColumn: range.endColumn,\n                  endRow: MAX_ROW_COL\n                };\n                return this._checkRange([effectRange], unitId, subUnitId);\n              }\n              case EffectRefRangId.DeleteRangeMoveLeftCommandId:\n              case EffectRefRangId.InsertRangeMoveRightCommandId: {\n                const range = command.params.range || getSelectionRanges(this._selectionManagerService)[0], effectRange = {\n                  startRow: range.startRow,\n                  startColumn: range.startColumn,\n                  endColumn: MAX_ROW_COL,\n                  endRow: range.endRow\n                };\n                return this._checkRange([effectRange], unitId, subUnitId);\n              }\n              case EffectRefRangId.ReorderRangeCommandId: {\n                const params = command, { range, order } = params.params, effectRanges = [];\n                for (let row = range.startRow; row <= range.endRow; row++)\n                  row in order && effectRanges.push({\n                    startRow: row,\n                    endRow: row,\n                    startColumn: range.startColumn,\n                    endColumn: range.endColumn\n                  });\n                return this._checkRange(effectRanges, unitId, subUnitId);\n              }\n            }\n          }, \"getEffectsCbList\"))() || []).reduce(\n            (result2, currentFn) => {\n              const v = currentFn(command);\n              return result2.push(v), result2;\n            },\n            []\n          ).reduce(\n            (result2, currentValue) => {\n              var _a20, _b;\n              return result2.redos.push(...currentValue.redos), result2.undos.push(...currentValue.undos), result2.preRedos.push(...(_a20 = currentValue.preRedos) != null ? _a20 : []), result2.preUndos.push(...(_b = currentValue.preUndos) != null ? _b : []), result2;\n            },\n            { redos: [], undos: [], preUndos: [], preRedos: [] }\n          ), preRedos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_REDO)(\n            result.preRedos,\n            null\n          ) || [], redos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_REDO)(\n            result.redos,\n            null\n          ) || [], preUndos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_UNDO)(\n            result.preUndos,\n            null\n          ) || [], undos = this.interceptor.fetchThroughInterceptors(this.interceptor.getInterceptPoints().MERGE_UNDO)(\n            result.undos,\n            null\n          ) || [];\n          return { redos, undos, preRedos, preUndos };\n        }, \"getMutations\")\n      });\n    }, \"_onRefRangeChange\"));\n    __publicField(this, \"_checkRange\", /* @__PURE__ */ __name((effectRanges, unitId, subUnitId) => {\n      const managerId = getRefRangId(unitId, subUnitId), manager = this._refRangeManagerMap.get(managerId);\n      if (manager) {\n        const callbackSet = /* @__PURE__ */ new Set();\n        return [...manager.keys()].forEach((key) => {\n          const cbList = manager.get(key), range = this._serializer.deserialize(key), realRange = {\n            ...range,\n            startRow: +range.startRow,\n            endRow: +range.endRow,\n            startColumn: +range.startColumn,\n            endColumn: +range.endColumn,\n            rangeType: range.rangeType && +range.rangeType\n          };\n          effectRanges.some((item) => Rectangle.intersects(item, realRange)) && cbList && cbList.forEach((callback) => {\n            callbackSet.add(callback);\n          });\n        }), [...callbackSet];\n      }\n      return [];\n    }, \"_checkRange\"));\n    /**\n     * Listens to an area and triggers a fall back when movement occurs\n     * @param {IRange} range the area that needs to be monitored\n     * @param {RefRangCallback} callback the callback function that is executed when the range changes\n     * @param {string} [_unitId]\n     * @param {string} [_subUnitId]\n     * @memberof RefRangeService\n     */\n    __publicField(this, \"registerRefRange\", /* @__PURE__ */ __name((range, callback, _unitId, _subUnitId) => {\n      const unitId = _unitId || getUnitId(this._univerInstanceService), subUnitId = _subUnitId || getSubUnitId(this._univerInstanceService);\n      if (!unitId || !subUnitId)\n        return toDisposable(() => {\n        });\n      const refRangeManagerId = getRefRangId(unitId, subUnitId), rangeString = this._serializer.serialize(range);\n      let manager = this._refRangeManagerMap.get(refRangeManagerId);\n      manager || (manager = /* @__PURE__ */ new Map(), this._refRangeManagerMap.set(refRangeManagerId, manager));\n      const refRangeCallbackList = manager.get(rangeString);\n      return refRangeCallbackList ? refRangeCallbackList.add(callback) : manager.set(rangeString, /* @__PURE__ */ new Set([callback])), toDisposable(() => {\n        const refRangeCallbackList2 = manager.get(rangeString);\n        refRangeCallbackList2 && (refRangeCallbackList2.delete(callback), refRangeCallbackList2.size || (manager.delete(rangeString), manager.size || this._refRangeManagerMap.delete(refRangeManagerId)));\n      });\n    }, \"registerRefRange\"));\n    this._commandService = _commandService, this._sheetInterceptorService = _sheetInterceptorService, this._univerInstanceService = _univerInstanceService, this._selectionManagerService = _selectionManagerService, this._onRefRangeChange(), this.interceptor.intercept(this.interceptor.getInterceptPoints().MERGE_REDO, {\n      priority: -1,\n      handler: /* @__PURE__ */ __name((list) => list, \"handler\")\n    }), this.interceptor.intercept(this.interceptor.getInterceptPoints().MERGE_UNDO, {\n      priority: -1,\n      handler: /* @__PURE__ */ __name((list) => list, \"handler\")\n    });\n  }\n  watchRange(unitId, subUnitId, range, callback, skipIntersects) {\n    let watchRangesListener;\n    this._watchRanges.size === 0 && (watchRangesListener = this._commandService.onCommandExecuted((command) => {\n      if (command.type !== CommandType.MUTATION) return !1;\n      for (const watchRange2 of this._watchRanges)\n        watchRange2.onMutation(command);\n    }));\n    const watchRange = new WatchRange(unitId, subUnitId, range, callback, skipIntersects);\n    this._watchRanges.add(watchRange);\n    const teardownWatching = toDisposable(() => {\n      this._watchRanges.delete(watchRange), this._watchRanges.size === 0 && (watchRangesListener == null || watchRangesListener.dispose(), watchRangesListener = null);\n    }), registerToService = this.disposeWithMe(teardownWatching);\n    return toDisposable(() => {\n      registerToService.dispose(), teardownWatching.dispose();\n    });\n  }\n}, __name(_a10, \"RefRangeService\"), _a10);\nRefRangeService = __decorateClass$9([\n  OnLifecycle(LifecycleStages.Ready, RefRangeService),\n  __decorateParam$9(0, ICommandService),\n  __decorateParam$9(1, Inject(SheetInterceptorService)),\n  __decorateParam$9(2, Inject(IUniverInstanceService)),\n  __decorateParam$9(3, Inject(SheetsSelectionsService))\n], RefRangeService);\nfunction getUnitId(univerInstanceService) {\n  return univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET).getUnitId();\n}\n__name(getUnitId, \"getUnitId\");\nfunction getSubUnitId(univerInstanceService) {\n  var _a20;\n  return (_a20 = univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET).getActiveSheet()) == null ? void 0 : _a20.getSheetId();\n}\n__name(getSubUnitId, \"getSubUnitId\");\nfunction getSelectionRanges(selectionManagerService) {\n  var _a20;\n  return ((_a20 = selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range)) || [];\n}\n__name(getSelectionRanges, \"getSelectionRanges\");\nfunction getRefRangId(unitId, subUnitId) {\n  return `${unitId}_${subUnitId}`;\n}\n__name(getRefRangId, \"getRefRangId\");\nfunction createRangeSerializer() {\n  const keyList = [\"startRow\", \"startColumn\", \"endRow\", \"endColumn\", \"rangeType\"], SPLIT_CODE = \"_\";\n  return {\n    deserialize: /* @__PURE__ */ __name((rangeString) => {\n      const map2 = keyList.reduce(\n        (preValue, currentValue, index) => (preValue[String(index)] = currentValue, preValue),\n        {}\n      );\n      return rangeString.split(SPLIT_CODE).reduce(\n        (preValue, currentValue, _index) => {\n          const index = String(_index);\n          return currentValue && map2[index] && (preValue[map2[index]] = currentValue), preValue;\n        },\n        {}\n      );\n    }, \"deserialize\"),\n    serialize: /* @__PURE__ */ __name((range) => keyList.reduce((preValue, currentValue, index) => {\n      const value = range[currentValue];\n      return value !== void 0 ? `${preValue}${index > 0 ? SPLIT_CODE : \"\"}${value}` : `${preValue}`;\n    }, \"\"), \"serialize\")\n  };\n}\n__name(createRangeSerializer, \"createRangeSerializer\");\nvar __defProp$8 = Object.defineProperty, __getOwnPropDesc$8 = Object.getOwnPropertyDescriptor, __decorateClass$8 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$8(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$8(target, key, result), result;\n}, \"__decorateClass$8\"), __decorateParam$8 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$8\");\nconst mutationIdByRowCol$1 = [InsertColMutation.id, InsertRowMutation.id, RemoveColMutation.id, RemoveRowMutation.id], mutationIdArrByMove$1 = [MoveRowsMutation.id, MoveColsMutation.id];\nfunction getAddMergeMutationRangeByType(selection, type) {\n  let ranges = selection;\n  if (type !== void 0) {\n    const rectangles = [];\n    for (let i = 0; i < ranges.length; i++) {\n      const { startRow, endRow, startColumn, endColumn } = ranges[i];\n      if (type === Dimension.ROWS)\n        for (let r = startRow; r <= endRow; r++) {\n          const data = {\n            startRow: r,\n            endRow: r,\n            startColumn,\n            endColumn\n          };\n          rectangles.push(data);\n        }\n      else if (type === Dimension.COLUMNS)\n        for (let c = startColumn; c <= endColumn; c++) {\n          const data = {\n            startRow,\n            endRow,\n            startColumn: c,\n            endColumn: c\n          };\n          rectangles.push(data);\n        }\n    }\n    ranges = rectangles;\n  }\n  return ranges;\n}\n__name(getAddMergeMutationRangeByType, \"getAddMergeMutationRangeByType\");\nconst MERGE_CELL_INTERCEPTOR_CHECK = createInterceptorKey(\"mergeCellPermissionCheck\");\nvar _a11;\nlet MergeCellController = (_a11 = class extends Disposable {\n  constructor(_commandService, _refRangeService, _univerInstanceService, _injector, _sheetInterceptorService, _selectionManagerService) {\n    super();\n    __publicField(this, \"disposableCollection\", new DisposableCollection());\n    __publicField(this, \"interceptor\", new InterceptorManager({ MERGE_CELL_INTERCEPTOR_CHECK }));\n    this._commandService = _commandService, this._refRangeService = _refRangeService, this._univerInstanceService = _univerInstanceService, this._injector = _injector, this._sheetInterceptorService = _sheetInterceptorService, this._selectionManagerService = _selectionManagerService, this._onRefRangeChange(), this._initCommandInterceptor(), this._commandExecutedListener();\n  }\n  _initCommandInterceptor() {\n    const self = this;\n    this._sheetInterceptorService.interceptCommand({\n      getMutations(commandInfo) {\n        var _a20;\n        switch (commandInfo.id) {\n          case ClearSelectionAllCommand.id:\n          case ClearSelectionFormatCommand.id: {\n            const workbook = self._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET), unitId = workbook.getUnitId(), worksheet = workbook.getActiveSheet();\n            if (!worksheet)\n              return { redos: [], undos: [] };\n            const subUnitId = worksheet.getSheetId(), mergeData = worksheet.getConfig().mergeData, selections = (_a20 = self._selectionManagerService.getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n            if (selections && selections.length > 0 && selections.some(\n              (range) => mergeData.some((item) => Rectangle.intersects(item, range))\n            )) {\n              const removeMergeParams = {\n                unitId,\n                subUnitId,\n                ranges: selections\n              }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(self._injector, removeMergeParams), redos = [\n                { id: RemoveWorksheetMergeMutation.id, params: removeMergeParams }\n              ], undos = [\n                { id: AddWorksheetMergeMutation.id, params: undoRemoveMergeParams }\n              ];\n              return { redos, undos };\n            }\n          }\n        }\n        return { redos: [], undos: [] };\n      }\n    }), this._sheetInterceptorService.interceptRanges({\n      getMutations: /* @__PURE__ */ __name(({ unitId, subUnitId, ranges }) => {\n        const redos = [], undos = [], emptyInterceptorArr = { redos, undos };\n        if (!ranges || !ranges.length)\n          return emptyInterceptorArr;\n        const target = getSheetCommandTarget(this._univerInstanceService, { unitId, subUnitId });\n        if (!target)\n          return emptyInterceptorArr;\n        const { worksheet } = target, overlapRanges = worksheet.getMergeData().filter((item) => ranges.some((range) => Rectangle.intersects(item, range)));\n        return overlapRanges.length ? (redos.push({\n          id: RemoveWorksheetMergeMutation.id,\n          params: {\n            unitId,\n            subUnitId,\n            ranges: overlapRanges\n          }\n        }), undos.push({\n          id: AddWorksheetMergeMutation.id,\n          params: {\n            unitId,\n            subUnitId,\n            ranges: overlapRanges\n          }\n        }), { undos, redos }) : emptyInterceptorArr;\n      }, \"getMutations\")\n    });\n  }\n  refRangeHandle(config, unitId, subUnitId) {\n    switch (config.id) {\n      case EffectRefRangId.MoveColsCommandId: {\n        const params = config.params;\n        return this._handleMoveColsCommand(params, unitId, subUnitId);\n      }\n      case EffectRefRangId.MoveRowsCommandId: {\n        const params = config.params;\n        return this._handleMoveRowsCommand(params, unitId, subUnitId);\n      }\n      case InsertRowCommand.id: {\n        const params = config.params, _unitId = params.unitId || unitId, _subUnitId = params.subUnitId || subUnitId;\n        return this._handleInsertRowCommand(params, _unitId, _subUnitId);\n      }\n      case InsertColCommand.id: {\n        const params = config.params, _unitId = params.unitId || unitId, _subUnitId = params.subUnitId || subUnitId;\n        return this._handleInsertColCommand(params, _unitId, _subUnitId);\n      }\n      case RemoveColCommand.id: {\n        const params = config.params;\n        return this._handleRemoveColCommand(params, unitId, subUnitId);\n      }\n      case RemoveRowCommand.id: {\n        const params = config.params;\n        return this._handleRemoveRowCommand(params, unitId, subUnitId);\n      }\n      case MoveRangeCommand.id: {\n        const params = config.params;\n        return this._handleMoveRangeCommand(params, unitId, subUnitId);\n      }\n      case InsertRangeMoveRightCommand.id: {\n        const params = config.params;\n        return this._handleInsertRangeMoveRightCommand(params, unitId, subUnitId);\n      }\n      case InsertRangeMoveDownCommand.id: {\n        const params = config.params;\n        return this._handleInsertRangeMoveDownCommand(params, unitId, subUnitId);\n      }\n      case DeleteRangeMoveUpCommand.id: {\n        const params = config.params;\n        return this._handleDeleteRangeMoveUpCommand(params, unitId, subUnitId);\n      }\n      case DeleteRangeMoveLeftCommand.id: {\n        const params = config.params;\n        return this._handleDeleteRangeMoveLeftCommand(params, unitId, subUnitId);\n      }\n    }\n    return { redos: [], undos: [] };\n  }\n  _onRefRangeChange() {\n    const registerRefRange = /* @__PURE__ */ __name((unitId, subUnitId) => {\n      const workbook2 = this._univerInstanceService.getUniverSheetInstance(unitId);\n      if (!workbook2)\n        return;\n      const workSheet = workbook2 == null ? void 0 : workbook2.getSheetBySheetId(subUnitId);\n      if (!workSheet)\n        return;\n      this.disposableCollection.dispose();\n      const mergeData = workSheet.getMergeData(), handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n      mergeData.forEach((range) => {\n        this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n      });\n    }, \"registerRefRange\");\n    this.disposeWithMe(\n      this._commandService.onCommandExecuted((commandInfo) => {\n        if (commandInfo.id === SetWorksheetActivateCommand.id) {\n          const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n          if (!sheetId || !unitId)\n            return;\n          registerRefRange(unitId, sheetId);\n        }\n        if (commandInfo.id === AddWorksheetMergeMutation.id) {\n          const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n          if (!sheetId || !unitId)\n            return;\n          registerRefRange(params.unitId, params.subUnitId);\n        }\n      })\n    );\n    const workbook = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (workbook) {\n      const sheet = workbook.getActiveSheet();\n      if (!sheet) return;\n      registerRefRange(workbook.getUnitId(), sheet.getSheetId());\n    }\n  }\n  _handleMoveRowsCommand(params, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const mergeData = [...worksheet.getMergeData()], removeParams = { unitId, subUnitId, ranges: [] }, addParams = { unitId, subUnitId, ranges: [] }, { fromRange } = params, { startRow: sourceStart, endRow: sourceEnd } = fromRange;\n    if (mergeData.forEach((range) => {\n      if (sourceStart <= range.startRow && sourceEnd >= range.endRow) {\n        removeParams.ranges.push(range);\n        const operation = handleMoveRows({ id: EffectRefRangId.MoveRowsCommandId, params }, range), result = runRefRangeMutations(operation, range);\n        result && addParams.ranges.push(result);\n      }\n    }), removeParams.ranges.length === 0)\n      return this._handleNull();\n    const removeUndo = RemoveMergeUndoMutationFactory(this._injector, removeParams), addUndo = AddMergeUndoMutationFactory(this._injector, addParams);\n    return {\n      redos: [\n        { id: RemoveWorksheetMergeMutation.id, params: removeParams },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: addParams\n        }\n      ],\n      undos: [\n        { id: RemoveWorksheetMergeMutation.id, params: addUndo },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: removeUndo\n        }\n      ]\n    };\n  }\n  _handleMoveColsCommand(params, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const mergeData = [...worksheet.getMergeData()], removeParams = { unitId, subUnitId, ranges: [] }, addParams = { unitId, subUnitId, ranges: [] }, { fromRange } = params, { startColumn: sourceStart, endColumn: sourceEnd } = fromRange;\n    if (mergeData.forEach((range) => {\n      if (sourceStart <= range.startColumn && sourceEnd >= range.endColumn) {\n        removeParams.ranges.push(range);\n        const operation = handleMoveCols({ id: EffectRefRangId.MoveColsCommandId, params }, range), result = runRefRangeMutations(operation, range);\n        result && addParams.ranges.push(result);\n      }\n    }), removeParams.ranges.length === 0)\n      return this._handleNull();\n    const removeUndo = RemoveMergeUndoMutationFactory(this._injector, removeParams), addUndo = AddMergeUndoMutationFactory(this._injector, addParams);\n    return {\n      redos: [\n        { id: RemoveWorksheetMergeMutation.id, params: removeParams },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: addParams\n        }\n      ],\n      undos: [\n        { id: RemoveWorksheetMergeMutation.id, params: addUndo },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: removeUndo\n        }\n      ]\n    };\n  }\n  _handleMoveRangeCommand(params, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const mergeData = worksheet.getMergeData(), fromMergeRanges = mergeData.filter((item) => Rectangle.intersects(item, params.fromRange)), toMergeRanges = mergeData.filter((item) => Rectangle.intersects(item, params.toRange)), willMoveToMergeRanges = fromMergeRanges.map((mergeRange) => Rectangle.getRelativeRange(mergeRange, params.fromRange)).map((relativeRange) => Rectangle.getPositionRange(relativeRange, params.toRange)), addMergeCellRanges = getAddMergeMutationRangeByType(willMoveToMergeRanges).filter(\n      (range) => !mergeData.some((mergeRange) => Rectangle.equals(range, mergeRange))\n    ), redos = [\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: fromMergeRanges\n        }\n      },\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: toMergeRanges\n        }\n      },\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: addMergeCellRanges\n        }\n      }\n    ], undos = [\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: addMergeCellRanges\n        }\n      },\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: toMergeRanges\n        }\n      },\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: {\n          unitId,\n          subUnitId,\n          ranges: fromMergeRanges\n        }\n      }\n    ];\n    return { redos, undos };\n  }\n  _handleInsertRowCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const { range } = config, { startRow, endRow } = range, oldMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => (startRow > cell.startRow && startRow <= cell.endRow && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n    if (oldMergeCells.length === 0)\n      return this._handleNull();\n    const newMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => {\n      if (startRow > cell.startRow && startRow <= cell.endRow) {\n        const count = endRow - startRow + 1;\n        cell.endRow += count, this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n      }\n      return mergeCellsHasLapping;\n    }, []), removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: oldMergeCells\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeParams\n    ), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: newMergeCells\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeParams\n    ), redos = [\n      { id: RemoveWorksheetMergeMutation.id, params: removeMergeParams },\n      { id: AddWorksheetMergeMutation.id, params: addMergeParams }\n    ], undos = [\n      { id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams },\n      { id: AddWorksheetMergeMutation.id, params: undoRemoveMergeParams }\n    ];\n    return { redos, undos };\n  }\n  _handleInsertColCommand(config, unitId, subUnitId) {\n    const { range } = config, workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const { startColumn, endColumn } = range, oldMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => (startColumn > cell.startColumn && startColumn <= cell.endColumn && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n    if (oldMergeCells.length === 0)\n      return this._handleNull();\n    const newMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => {\n      if (startColumn > cell.startColumn && startColumn <= cell.endColumn) {\n        const count = endColumn - startColumn + 1;\n        cell.endColumn += count, this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n      }\n      return mergeCellsHasLapping;\n    }, []), removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: oldMergeCells\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeParams\n    ), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: newMergeCells\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeParams\n    ), redos = [\n      { id: RemoveWorksheetMergeMutation.id, params: removeMergeParams },\n      { id: AddWorksheetMergeMutation.id, params: addMergeParams }\n    ], undos = [\n      { id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams },\n      { id: AddWorksheetMergeMutation.id, params: undoRemoveMergeParams }\n    ];\n    return { redos, undos };\n  }\n  _handleRemoveColCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const { range } = config, { startColumn, endColumn } = range, oldMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => (Rectangle.intersects(range, cell) && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n    if (oldMergeCells.length === 0)\n      return this._handleNull();\n    const newMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => {\n      if (Rectangle.intersects(range, cell)) {\n        if (startColumn <= cell.startColumn && endColumn >= cell.endColumn)\n          return mergeCellsHasLapping;\n        startColumn >= cell.startColumn && endColumn <= cell.endColumn ? cell.endColumn -= endColumn - startColumn + 1 : startColumn < cell.startColumn ? (cell.startColumn = startColumn, cell.endColumn -= endColumn - startColumn + 1) : endColumn > cell.endColumn && (cell.endColumn = startColumn - 1), this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n      }\n      return mergeCellsHasLapping;\n    }, []), removeMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges: oldMergeCells\n    }, undoRemoveMergeMutationParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeMutationParams\n    ), addMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges: newMergeCells\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeMutationParams\n    ), preRedos = [{ id: RemoveWorksheetMergeMutation.id, params: removeMergeMutationParams }], redos = [{ id: AddWorksheetMergeMutation.id, params: addMergeMutationParams }], preUndos = [{ id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams }], undos = [{ id: AddWorksheetMergeMutation.id, params: undoRemoveMergeMutationParams }];\n    return { preUndos, undos, preRedos, redos };\n  }\n  _handleRemoveRowCommand(config, unitId, subUnitId) {\n    const { range } = config, workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const { startRow, endRow } = range, oldMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => (Rectangle.intersects(range, cell) && mergeCellsHasLapping.push(cell), mergeCellsHasLapping), []);\n    if (oldMergeCells.length === 0)\n      return this._handleNull();\n    const newMergeCells = Tools.deepClone(worksheet.getMergeData()).reduce((mergeCellsHasLapping, cell) => {\n      if (Rectangle.intersects(range, cell)) {\n        if (startRow <= cell.startRow && endRow >= cell.endRow)\n          return mergeCellsHasLapping;\n        startRow >= cell.startRow && endRow <= cell.endRow ? cell.endRow -= endRow - startRow + 1 : startRow < cell.startRow ? (cell.startRow = startRow, cell.endRow -= endRow - startRow + 1) : endRow > cell.endRow && (cell.endRow = startRow - 1), this._checkIsMergeCell(cell) && mergeCellsHasLapping.push(cell);\n      }\n      return mergeCellsHasLapping;\n    }, []), removeMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges: oldMergeCells\n    }, undoRemoveMergeMutationParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeMutationParams\n    ), addMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges: newMergeCells\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeMutationParams\n    ), preRedos = [{ id: RemoveWorksheetMergeMutation.id, params: removeMergeMutationParams }], redos = [{ id: AddWorksheetMergeMutation.id, params: addMergeMutationParams }], preUndos = [{ id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams }], undos = [{ id: AddWorksheetMergeMutation.id, params: undoRemoveMergeMutationParams }];\n    return { preUndos, undos, preRedos, redos };\n  }\n  _handleInsertRangeMoveRightCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const range = config.range, maxCol = worksheet.getMaxColumns() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n    mergeData.forEach((rect) => {\n      const { startRow, endRow, startColumn, endColumn } = range;\n      if (Rectangle.intersects(\n        {\n          startRow,\n          startColumn,\n          endRow,\n          endColumn: maxCol\n        },\n        rect\n      ) && (removeMergeData.push(rect), Rectangle.contains(\n        {\n          startRow,\n          startColumn,\n          endRow,\n          endColumn: maxCol\n        },\n        rect\n      ))) {\n        const currentColumnsCount = endColumn - startColumn + 1;\n        addMergeData.push({\n          startRow: rect.startRow,\n          startColumn: rect.startColumn + currentColumnsCount,\n          endRow: rect.endRow,\n          endColumn: rect.endColumn + currentColumnsCount\n        });\n      }\n    });\n    const removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: removeMergeData\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeParams\n    ), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: addMergeData\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeParams\n    );\n    return {\n      redos: [\n        { id: RemoveWorksheetMergeMutation.id, params: removeMergeParams },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: addMergeParams\n        }\n      ],\n      undos: [\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: undoRemoveMergeParams\n        },\n        { id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams }\n      ]\n    };\n  }\n  _handleInsertRangeMoveDownCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const range = config.range, maxRow = worksheet.getMaxRows() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n    mergeData.forEach((rect) => {\n      const { startRow, startColumn, endColumn, endRow } = range;\n      if (Rectangle.intersects({ startRow, startColumn, endRow: maxRow, endColumn }, rect) && (removeMergeData.push(rect), Rectangle.contains({ startRow, startColumn, endRow: maxRow, endColumn }, rect))) {\n        const rowCount = endRow - startRow + 1;\n        addMergeData.push({\n          startRow: rect.startRow + rowCount,\n          startColumn: rect.startColumn,\n          endRow: rect.endRow + rowCount,\n          endColumn: rect.endColumn\n        });\n      }\n    });\n    const removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: removeMergeData\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeParams\n    ), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: addMergeData\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeParams\n    ), redos = [\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: removeMergeParams\n      },\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: addMergeParams\n      }\n    ], undos = [\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: undoRemoveMergeParams\n      },\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: undoAddMergeParams\n      }\n    ];\n    return { redos, undos };\n  }\n  _handleDeleteRangeMoveUpCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const range = config.range, maxRow = worksheet.getMaxRows() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n    mergeData.forEach((rect) => {\n      const { startRow, startColumn, endColumn, endRow } = range;\n      if (Rectangle.intersects({ startRow, startColumn, endRow: maxRow, endColumn }, rect) && (removeMergeData.push(rect), Rectangle.contains({ startRow, startColumn, endRow: maxRow, endColumn }, rect))) {\n        const rowCount = endRow - startRow + 1, range2 = Rectangle.moveVertical(rect, -rowCount);\n        addMergeData.push(range2);\n      }\n    });\n    const removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: removeMergeData\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(\n      this._injector,\n      removeMergeParams\n    ), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: addMergeData\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(\n      this._injector,\n      addMergeParams\n    ), redos = [\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: removeMergeParams\n      },\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: addMergeParams\n      }\n    ], undos = [\n      {\n        id: AddWorksheetMergeMutation.id,\n        params: undoRemoveMergeParams\n      },\n      {\n        id: RemoveWorksheetMergeMutation.id,\n        params: undoAddMergeParams\n      }\n    ];\n    return { redos, undos };\n  }\n  _handleDeleteRangeMoveLeftCommand(config, unitId, subUnitId) {\n    const workbook = getWorkbook(this._univerInstanceService, unitId);\n    if (!workbook)\n      return this._handleNull();\n    const worksheet = getWorksheet(workbook, subUnitId);\n    if (!worksheet)\n      return this._handleNull();\n    const range = config.range, maxCol = worksheet.getMaxColumns() - 1, mergeData = worksheet.getMergeData(), removeMergeData = [], addMergeData = [];\n    mergeData.forEach((rect) => {\n      const { startRow, endRow, startColumn, endColumn } = range;\n      if (Rectangle.intersects(\n        {\n          startRow,\n          startColumn,\n          endRow,\n          endColumn: maxCol\n        },\n        rect\n      ) && (removeMergeData.push(rect), Rectangle.contains(\n        {\n          startRow,\n          startColumn,\n          endRow,\n          endColumn: maxCol\n        },\n        rect\n      ))) {\n        const currentColumnsCount = endColumn - startColumn + 1;\n        addMergeData.push({\n          startRow: rect.startRow,\n          startColumn: rect.startColumn - currentColumnsCount,\n          endRow: rect.endRow,\n          endColumn: rect.endColumn - currentColumnsCount\n        });\n      }\n    });\n    const removeMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: removeMergeData\n    }, undoRemoveMergeParams = RemoveMergeUndoMutationFactory(this._injector, removeMergeParams), addMergeParams = {\n      unitId,\n      subUnitId,\n      ranges: addMergeData\n    }, undoAddMergeParams = AddMergeUndoMutationFactory(this._injector, addMergeParams);\n    return {\n      redos: [\n        { id: RemoveWorksheetMergeMutation.id, params: removeMergeParams },\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: addMergeParams\n        }\n      ],\n      undos: [\n        {\n          id: AddWorksheetMergeMutation.id,\n          params: undoRemoveMergeParams\n        },\n        { id: RemoveWorksheetMergeMutation.id, params: undoAddMergeParams }\n      ]\n    };\n  }\n  _checkIsMergeCell(cell) {\n    return !(cell.startRow === cell.endRow && cell.startColumn === cell.endColumn);\n  }\n  _handleNull() {\n    return { redos: [], undos: [] };\n  }\n  _commandExecutedListener() {\n    this.disposeWithMe(this._commandService.onCommandExecuted((command) => {\n      if (mutationIdArrByMove$1.includes(command.id)) {\n        if (!command.params) return;\n        const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n        if (!workbook) return;\n        const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n        if (!worksheet) return;\n        const { sourceRange, targetRange } = command.params, isRowMove = sourceRange.startColumn === targetRange.startColumn && sourceRange.endColumn === targetRange.endColumn, moveLength = isRowMove ? sourceRange.endRow - sourceRange.startRow + 1 : sourceRange.endColumn - sourceRange.startColumn + 1, sourceStart = isRowMove ? sourceRange.startRow : sourceRange.startColumn, targetStart = isRowMove ? targetRange.startRow : targetRange.startColumn, mergeData = worksheet.getConfig().mergeData, adjustedMergedCells = [];\n        mergeData.forEach((merge2) => {\n          let { startRow, endRow, startColumn, endColumn, rangeType } = merge2;\n          Rectangle.intersects(merge2, sourceRange) || (isRowMove ? sourceStart < startRow && targetStart > endRow ? (startRow -= moveLength, endRow -= moveLength) : sourceStart > endRow && targetStart <= startRow && (startRow += moveLength, endRow += moveLength) : sourceStart < startColumn && targetStart > endColumn ? (startColumn -= moveLength, endColumn -= moveLength) : sourceStart > endColumn && targetStart <= startColumn && (startColumn += moveLength, endColumn += moveLength)), merge2.startRow === merge2.endRow && merge2.startColumn === merge2.endColumn || adjustedMergedCells.push({ startRow, endRow, startColumn, endColumn, rangeType });\n        }), worksheet.setMergeData(adjustedMergedCells), this.disposableCollection.dispose();\n        const { unitId, subUnitId } = command.params, handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n        adjustedMergedCells.forEach((range) => {\n          this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n        });\n      }\n      if (mutationIdByRowCol$1.includes(command.id)) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n        if (!workbook) return;\n        const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n        if (!worksheet) return;\n        const mergeData = worksheet.getConfig().mergeData, params = command.params;\n        if (!params) return;\n        const { range } = params, isRowOperation = command.id.includes(\"row\"), isAddOperation = command.id.includes(\"insert\"), operationStart = isRowOperation ? range.startRow : range.startColumn, operationEnd = isRowOperation ? range.endRow : range.endColumn, operationCount = operationEnd - operationStart + 1, adjustedMergedCells = [];\n        mergeData.forEach((merge2) => {\n          let { startRow, endRow, startColumn, endColumn, rangeType } = merge2;\n          isAddOperation ? isRowOperation ? operationStart <= startRow && (startRow += operationCount, endRow += operationCount) : operationStart <= startColumn && (startColumn += operationCount, endColumn += operationCount) : isRowOperation ? operationEnd < startRow && (startRow -= operationCount, endRow -= operationCount) : operationEnd < startColumn && (startColumn -= operationCount, endColumn -= operationCount), merge2.startRow === merge2.endRow && merge2.startColumn === merge2.endColumn || adjustedMergedCells.push({ startRow, endRow, startColumn, endColumn, rangeType });\n        }), worksheet.setMergeData(adjustedMergedCells), this.disposableCollection.dispose();\n        const { unitId, subUnitId } = command.params, handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n        adjustedMergedCells.forEach((range2) => {\n          this.disposableCollection.add(this._refRangeService.registerRefRange(range2, handler, unitId, subUnitId));\n        });\n      }\n    }));\n  }\n}, __name(_a11, \"MergeCellController\"), _a11);\nMergeCellController = __decorateClass$8([\n  OnLifecycle(LifecycleStages.Steady, MergeCellController),\n  __decorateParam$8(0, Inject(ICommandService)),\n  __decorateParam$8(1, Inject(RefRangeService)),\n  __decorateParam$8(2, Inject(IUniverInstanceService)),\n  __decorateParam$8(3, Inject(Injector)),\n  __decorateParam$8(4, Inject(SheetInterceptorService)),\n  __decorateParam$8(5, Inject(SheetsSelectionsService))\n], MergeCellController);\nfunction getWorkbook(univerInstanceService, unitId) {\n  return unitId ? univerInstanceService.getUniverSheetInstance(unitId) : univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n}\n__name(getWorkbook, \"getWorkbook\");\nfunction getWorksheet(workbook, subUnitId) {\n  return subUnitId ? workbook.getSheetBySheetId(subUnitId) : workbook.getActiveSheet();\n}\n__name(getWorksheet, \"getWorksheet\");\nvar __defProp$7 = Object.defineProperty, __getOwnPropDesc$7 = Object.getOwnPropertyDescriptor, __decorateClass$7 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$7(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$7(target, key, result), result;\n}, \"__decorateClass$7\"), __decorateParam$7 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$7\"), _a12;\nlet NumfmtService = (_a12 = class extends Disposable {\n  constructor(_resourceManagerService, _univerInstanceService, _logService) {\n    super(), this._resourceManagerService = _resourceManagerService, this._univerInstanceService = _univerInstanceService, this._logService = _logService;\n  }\n  getValue(unitId, subUnitId, row, col) {\n    const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n    if (!workbook)\n      return;\n    const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      return;\n    const styles = workbook.getStyles(), cell = worksheet.getCellRaw(row, col);\n    if (cell != null && cell.s) {\n      const style = styles.get(cell.s);\n      if (style != null && style.n)\n        return style.n;\n    }\n    return null;\n  }\n  deleteValues(unitId, subUnitId, values) {\n    const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n    if (!workbook)\n      return;\n    const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      return;\n    const styles = workbook.getStyles();\n    values.forEach((range) => {\n      Range.foreach(range, (row, col) => {\n        const cell = worksheet.getCellRaw(row, col);\n        if (!cell)\n          return;\n        const oldStyleId = cell == null ? void 0 : cell.s, newStyle = { ...oldStyleId && styles.get(oldStyleId) || {} };\n        delete newStyle.n;\n        const newStyleId = styles.setValue(newStyle);\n        cell.s = newStyleId;\n      });\n    });\n  }\n  setValues(unitId, subUnitId, values) {\n    const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n    if (!workbook)\n      return;\n    const worksheet = workbook == null ? void 0 : workbook.getSheetBySheetId(subUnitId);\n    if (!worksheet)\n      return;\n    const styles = workbook.getStyles(), matrix = worksheet.getCellMatrix();\n    values.forEach((value) => {\n      value.ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n          const cell = worksheet.getCellRaw(row, col);\n          if (cell) {\n            const newStyle = { ...styles.getStyleByCell(cell) || {}, n: { pattern: value.pattern } }, styleId = styles.setValue(newStyle);\n            cell.s = styleId;\n            const type = getCellTypeByPattern(cell, value.pattern);\n            cell.v !== void 0 && (cell.t = type, cell.v = getCellValue(type, cell));\n          } else {\n            const style = { n: { pattern: value.pattern } }, styleId = styles.setValue(style);\n            styleId && matrix.setValue(row, col, { s: styleId });\n          }\n        });\n      });\n    });\n  }\n}, __name(_a12, \"NumfmtService\"), _a12);\nNumfmtService = __decorateClass$7([\n  __decorateParam$7(0, IResourceManagerService),\n  __decorateParam$7(1, IUniverInstanceService),\n  __decorateParam$7(2, ILogService)\n], NumfmtService);\nconst getAllWorkbookPermissionPoint = /* @__PURE__ */ __name(() => [\n  WorkbookEditablePermission,\n  WorkbookPrintPermission,\n  WorkbookCommentPermission,\n  WorkbookViewPermission,\n  WorkbookCopyPermission,\n  WorkbookExportPermission,\n  WorkbookManageCollaboratorPermission,\n  WorkbookCreateSheetPermission,\n  WorkbookDeleteSheetPermission,\n  WorkbookRenameSheetPermission,\n  WorkbookHideSheetPermission,\n  WorkbookDuplicatePermission,\n  WorkbookSharePermission,\n  WorkbookMoveSheetPermission,\n  WorkbookCopySheetPermission,\n  WorkbookViewHistoryPermission,\n  WorkbookRecoverHistoryPermission\n], \"getAllWorkbookPermissionPoint\"), defaultWorkbookPermissionPoints = [\n  P.Edit,\n  P.Print,\n  P.Comment,\n  P.View,\n  P.Copy,\n  P.Export,\n  P.ManageCollaborator,\n  P.CreateSheet,\n  P.DeleteSheet,\n  P.RenameSheet,\n  P.HideSheet,\n  P.Duplicate,\n  P.Share,\n  P.MoveSheet,\n  P.CopySheet,\n  P.RecoverHistory,\n  P.ViewHistory\n];\nvar __defProp$6 = Object.defineProperty, __getOwnPropDesc$6 = Object.getOwnPropertyDescriptor, __decorateClass$6 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$6(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$6(target, key, result), result;\n}, \"__decorateClass$6\"), __decorateParam$6 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$6\"), _a13;\nlet WorkbookPermissionService = (_a13 = class extends Disposable {\n  constructor(_permissionService, _univerInstanceService, _rangeProtectionRuleModel) {\n    super(), this._permissionService = _permissionService, this._univerInstanceService = _univerInstanceService, this._rangeProtectionRuleModel = _rangeProtectionRuleModel, this._init();\n  }\n  _init() {\n    const handleWorkbook = /* @__PURE__ */ __name((workbook) => {\n      const unitId = workbook.getUnitId();\n      getAllWorkbookPermissionPoint().forEach((F) => {\n        const instance = new F(unitId);\n        this._permissionService.addPermissionPoint(instance);\n      });\n    }, \"handleWorkbook\");\n    this._univerInstanceService.getAllUnitsForType(UniverInstanceType.UNIVER_SHEET).forEach((workbook) => {\n      handleWorkbook(workbook);\n    }), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitAdded$(UniverInstanceType.UNIVER_SHEET).subscribe((workbook) => {\n      handleWorkbook(workbook);\n    })), this.disposeWithMe(this._univerInstanceService.getTypeOfUnitDisposed$(UniverInstanceType.UNIVER_SHEET).subscribe((workbook) => {\n      const unitId = workbook.getUnitId();\n      workbook.getSheets().forEach((worksheet) => {\n        const subUnitId = worksheet.getSheetId();\n        this._rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule) => {\n          [RangeProtectionPermissionEditPoint, RangeProtectionPermissionViewPoint].forEach((F) => {\n            const instance = new F(unitId, subUnitId, rule.permissionId);\n            this._permissionService.deletePermissionPoint(instance.id);\n          });\n        }), [...getAllWorksheetPermissionPoint(), ...getAllWorksheetPermissionPointByPointPanel()].forEach((F) => {\n          const instance = new F(unitId, subUnitId);\n          this._permissionService.deletePermissionPoint(instance.id);\n        });\n      }), getAllWorkbookPermissionPoint().forEach((F) => {\n        const instance = new F(unitId);\n        this._permissionService.deletePermissionPoint(instance.id);\n      });\n    }));\n  }\n}, __name(_a13, \"WorkbookPermissionService\"), _a13);\nWorkbookPermissionService = __decorateClass$6([\n  OnLifecycle(LifecycleStages.Starting, WorkbookPermissionService),\n  __decorateParam$6(0, Inject(IPermissionService)),\n  __decorateParam$6(1, Inject(IUniverInstanceService)),\n  __decorateParam$6(2, Inject(RangeProtectionRuleModel))\n], WorkbookPermissionService);\nvar __defProp$5 = Object.defineProperty, __getOwnPropDesc$5 = Object.getOwnPropertyDescriptor, __decorateClass$5 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$5(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$5(target, key, result), result;\n}, \"__decorateClass$5\"), __decorateParam$5 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$5\");\nconst SHEET_DEFINED_NAME_PLUGIN = \"SHEET_DEFINED_NAME_PLUGIN\";\nvar _a14;\nlet DefinedNameDataController = (_a14 = class extends Disposable {\n  constructor(_definedNamesService, _resourceManagerService) {\n    super(), this._definedNamesService = _definedNamesService, this._resourceManagerService = _resourceManagerService, this._initialize();\n  }\n  _initialize() {\n    this._initSnapshot();\n  }\n  _initSnapshot() {\n    const toJson = /* @__PURE__ */ __name((unitId) => {\n      const map2 = this._definedNamesService.getDefinedNameMap(unitId);\n      return map2 ? JSON.stringify(map2) : \"\";\n    }, \"toJson\"), parseJson = /* @__PURE__ */ __name((json) => {\n      if (!json)\n        return {};\n      try {\n        return JSON.parse(json);\n      } catch {\n        return {};\n      }\n    }, \"parseJson\");\n    this.disposeWithMe(\n      this._resourceManagerService.registerPluginResource({\n        pluginName: SHEET_DEFINED_NAME_PLUGIN,\n        businesses: [UniverInstanceType.UNIVER_SHEET],\n        toJson: /* @__PURE__ */ __name((unitId) => toJson(unitId), \"toJson\"),\n        parseJson: /* @__PURE__ */ __name((json) => parseJson(json), \"parseJson\"),\n        onUnLoad: /* @__PURE__ */ __name((unitId) => {\n          this._definedNamesService.removeUnitDefinedName(unitId);\n        }, \"onUnLoad\"),\n        onLoad: /* @__PURE__ */ __name((unitId, value) => {\n          this._definedNamesService.registerDefinedNames(unitId, value);\n        }, \"onLoad\")\n      })\n    );\n  }\n}, __name(_a14, \"DefinedNameDataController\"), _a14);\nDefinedNameDataController = __decorateClass$5([\n  OnLifecycle(LifecycleStages.Ready, DefinedNameDataController),\n  __decorateParam$5(0, IDefinedNamesService),\n  __decorateParam$5(1, IResourceManagerService)\n], DefinedNameDataController);\nconst getAllRangePermissionPoint = /* @__PURE__ */ __name(() => [RangeProtectionPermissionViewPoint, RangeProtectionPermissionEditPoint], \"getAllRangePermissionPoint\"), getDefaultRangePermission = /* @__PURE__ */ __name((unitId = \"unitId\", subUnitId = \"subUnitId\", permissionId = \"permissionId\") => getAllRangePermissionPoint().reduce((r, F) => {\n  const i = new F(unitId, subUnitId, permissionId);\n  return r[i.subType] = i.value, r;\n}, {}), \"getDefaultRangePermission\");\nvar __defProp$4 = Object.defineProperty, __getOwnPropDesc$4 = Object.getOwnPropertyDescriptor, __decorateClass$4 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$4(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$4(target, key, result), result;\n}, \"__decorateClass$4\"), __decorateParam$4 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$4\"), _a15;\nlet RangeProtectionRenderModel = (_a15 = class {\n  constructor(_selectionProtectionRuleModel, _permissionService) {\n    __publicField(this, \"_cache\", new LRUMap(1e4));\n    this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._permissionService = _permissionService, this._init();\n  }\n  _init() {\n    this._permissionService.permissionPointUpdate$.pipe(\n      filter((permission) => permission.type === M.SelectRange),\n      filter((permission) => getAllRangePermissionPoint().some((F) => permission instanceof F)),\n      map$1((permission) => permission)\n    ).subscribe((permission) => {\n      const ruleMap = this._selectionProtectionRuleModel.getSubunitRuleList(permission.unitId, permission.subUnitId);\n      for (const rule of ruleMap)\n        rule.permissionId === permission.permissionId && rule.ranges.forEach((range) => {\n          Range.foreach(range, (row, col) => {\n            const key = this._createKey(permission.unitId, permission.subUnitId, row, col);\n            this._cache.delete(key);\n          });\n        });\n    }), this._selectionProtectionRuleModel.ruleChange$.subscribe((info) => {\n      var _a20;\n      info.rule.ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n          const key = this._createKey(info.unitId, info.subUnitId, row, col);\n          this._cache.delete(key);\n        });\n      }), info.type === \"set\" && ((_a20 = info.oldRule) == null || _a20.ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n          const key = this._createKey(info.unitId, info.subUnitId, row, col);\n          this._cache.delete(key);\n        });\n      }));\n    });\n  }\n  _createKey(unitId, subUnitId, row, col) {\n    return `${unitId}_${subUnitId}_${row}_${col}`;\n  }\n  getCellInfo(unitId, subUnitId, row, col) {\n    const key = this._createKey(unitId, subUnitId, row, col), cacheValue = this._cache.get(key);\n    if (cacheValue)\n      return cacheValue;\n    const ruleMap = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId), defaultV = [];\n    if (!ruleMap || !ruleMap.length)\n      return defaultV;\n    const result = [];\n    for (const rule of ruleMap)\n      if (rule.ranges.some((range) => range.startRow <= row && range.endRow >= row && range.startColumn <= col && range.endColumn >= col)) {\n        const permissionMap = getAllRangePermissionPoint().reduce((result2, F) => {\n          var _a20;\n          const instance = new F(unitId, subUnitId, rule.permissionId), permission = this._permissionService.getPermissionPoint(instance.id);\n          return result2[instance.subType] = (_a20 = permission == null ? void 0 : permission.value) != null ? _a20 : instance.value, result2;\n        }, {});\n        result.push({ ...permissionMap, ruleId: rule.id, ranges: rule.ranges });\n      }\n    return this._cache.set(key, result), result;\n  }\n  clear() {\n    this._cache.clear();\n  }\n}, __name(_a15, \"RangeProtectionRenderModel\"), _a15);\nRangeProtectionRenderModel = __decorateClass$4([\n  OnLifecycle(LifecycleStages.Ready, RangeProtectionRenderModel),\n  __decorateParam$4(0, Inject(RangeProtectionRuleModel)),\n  __decorateParam$4(1, Inject(IPermissionService))\n], RangeProtectionRenderModel);\nvar __defProp$3 = Object.defineProperty, __getOwnPropDesc$3 = Object.getOwnPropertyDescriptor, __decorateClass$3 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$3(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$3(target, key, result), result;\n}, \"__decorateClass$3\"), __decorateParam$3 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$3\");\nconst mutationIdByRowCol = [InsertColMutation.id, InsertRowMutation.id, RemoveColMutation.id, RemoveRowMutation.id], mutationIdArrByMove = [MoveRowsMutation.id, MoveColsMutation.id];\nvar _a16;\nlet RangeProtectionRefRangeService = (_a16 = class extends Disposable {\n  constructor(_selectionProtectionRuleModel, _univerInstanceService, _commandService, _refRangeService, _selectionProtectionRenderModel) {\n    super();\n    __publicField(this, \"disposableCollection\", new DisposableCollection());\n    this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._univerInstanceService = _univerInstanceService, this._commandService = _commandService, this._refRangeService = _refRangeService, this._selectionProtectionRenderModel = _selectionProtectionRenderModel, this._onRefRangeChange(), this._correctPermissionRange();\n  }\n  _onRefRangeChange() {\n    const registerRefRange = /* @__PURE__ */ __name((unitId, subUnitId) => {\n      const workbook2 = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n      if (!workbook2 || !(workbook2 == null ? void 0 : workbook2.getSheetBySheetId(subUnitId)))\n        return;\n      this.disposableCollection.dispose();\n      const handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n      this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c) => [...p, ...c.ranges], []).forEach((range) => {\n        this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n      });\n    }, \"registerRefRange\");\n    this.disposeWithMe(\n      this._commandService.onCommandExecuted((commandInfo) => {\n        if (commandInfo.id === SetWorksheetActivateCommand.id) {\n          const params = commandInfo.params, sheetId = params.subUnitId, unitId = params.unitId;\n          if (!sheetId || !unitId)\n            return;\n          registerRefRange(unitId, sheetId);\n        }\n        if (commandInfo.id === SetRangeProtectionMutation.id || commandInfo.id === AddRangeProtectionMutation.id) {\n          const params = commandInfo.params, subUnitId = params.subUnitId, unitId = params.unitId;\n          if (!subUnitId || !unitId)\n            return;\n          registerRefRange(unitId, subUnitId);\n        }\n      })\n    );\n    const workbook = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (workbook) {\n      const sheet = workbook.getActiveSheet();\n      if (!sheet) return;\n      registerRefRange(workbook.getUnitId(), sheet.getSheetId());\n    }\n  }\n  refRangeHandle(config, unitId, subUnitId) {\n    switch (config.id) {\n      case MoveRowsCommand.id:\n        return this._getRefRangeMutationsByMoveRows(config.params, unitId, subUnitId);\n      case MoveColsCommand.id:\n        return this._getRefRangeMutationsByMoveCols(config.params, unitId, subUnitId);\n      case InsertRowCommand.id:\n        return this._getRefRangeMutationsByInsertRows(config.params, unitId, subUnitId);\n      case InsertColCommand.id:\n        return this._getRefRangeMutationsByInsertCols(config.params, unitId, subUnitId);\n      case RemoveColCommand.id:\n        return this._getRefRangeMutationsByDeleteCols(config.params, unitId, subUnitId);\n      case RemoveRowCommand.id:\n        return this._getRefRangeMutationsByDeleteRows(config.params, unitId, subUnitId);\n    }\n    return { redos: [], undos: [] };\n  }\n  _getRefRangeMutationsByDeleteCols(params, unitId, subUnitId) {\n    const permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => Rectangle.intersects(range, params.range))), removeRange = params.range;\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule), rangesByRemove = cloneRule.ranges.reduce((p, c) => {\n          if (Rectangle.intersects(c, removeRange)) {\n            const cloneRange = Tools.deepClone(c), { startColumn, endColumn } = removeRange;\n            if (startColumn <= cloneRange.startColumn && endColumn >= cloneRange.endColumn)\n              return p;\n            startColumn >= cloneRange.startColumn && endColumn <= cloneRange.endColumn ? cloneRange.endColumn -= endColumn - startColumn + 1 : startColumn < cloneRange.startColumn ? (cloneRange.startColumn = startColumn, cloneRange.endColumn -= endColumn - startColumn + 1) : endColumn > cloneRange.endColumn && (cloneRange.endColumn = startColumn - 1), this._checkIsRightRange(cloneRange) && p.push(cloneRange);\n          }\n          return p;\n        }, []);\n        cloneRule.ranges = rangesByRemove, cloneRule.ranges.length ? (redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } })) : (redoMutations.push({ id: DeleteRangeProtectionMutation.id, params: { unitId, subUnitId, ruleIds: [rule.id] } }), undoMutations.push({ id: AddRangeProtectionMutation.id, params: { unitId, subUnitId, name: \"\", rules: [rule] } }));\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _getRefRangeMutationsByDeleteRows(params, unitId, subUnitId) {\n    const permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => Rectangle.intersects(range, params.range))), removeRange = params.range;\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule), rangesByRemove = cloneRule.ranges.reduce((p, c) => {\n          if (Rectangle.intersects(c, removeRange)) {\n            const cloneRange = Tools.deepClone(c), { startRow, endRow } = removeRange;\n            if (startRow <= cloneRange.startRow && endRow >= cloneRange.endRow)\n              return p;\n            startRow >= cloneRange.startRow && endRow <= cloneRange.endRow ? cloneRange.endRow -= endRow - startRow + 1 : startRow < cloneRange.startRow ? (cloneRange.startRow = startRow, cloneRange.endRow -= endRow - startRow + 1) : endRow > cloneRange.endRow && (cloneRange.endRow = startRow - 1), this._checkIsRightRange(cloneRange) && p.push(cloneRange);\n          }\n          return p;\n        }, []);\n        cloneRule.ranges = rangesByRemove, redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } });\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _getRefRangeMutationsByInsertCols(params, unitId, subUnitId) {\n    const insertStart = params.range.startColumn, insertLength = params.range.endColumn - params.range.startColumn + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => insertStart > range.startColumn && insertStart <= range.endColumn));\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule);\n        let hasLap = !1;\n        cloneRule.ranges.forEach((range) => {\n          insertStart > range.startColumn && insertStart <= range.endColumn && (range.endColumn += insertLength, hasLap = !0);\n        }), hasLap && (redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } }));\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _getRefRangeMutationsByInsertRows(params, unitId, subUnitId) {\n    const insertStart = params.range.startRow, insertLength = params.range.endRow - params.range.startRow + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => insertStart > range.startRow && insertStart <= range.endRow));\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule);\n        let hasLap = !1;\n        cloneRule.ranges.forEach((range) => {\n          insertStart > range.startRow && insertStart <= range.endRow && (range.endRow += insertLength, hasLap = !0);\n        }), hasLap && (redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } }));\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _getRefRangeMutationsByMoveRows(params, unitId, subUnitId) {\n    const toRange = params.toRange, moveToStartRow = toRange.startRow, moveLength = toRange.endRow - toRange.startRow + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => moveToStartRow > range.startRow && moveToStartRow <= range.endRow));\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule), moveFromStartRow = params.fromRange.startRow;\n        let hasLap = !1;\n        cloneRule.ranges.forEach((range) => {\n          moveToStartRow > range.startRow && moveToStartRow <= range.endRow && (moveFromStartRow < range.startRow && (range.startRow = range.startRow - moveLength, range.endRow = range.endRow - moveLength), range.endRow += moveLength, hasLap = !0);\n        }), hasLap && (redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } }));\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _getRefRangeMutationsByMoveCols(params, unitId, subUnitId) {\n    const toRange = params.toRange, moveToStartCol = toRange.startColumn, moveLength = toRange.endColumn - toRange.startColumn + 1, permissionRangeLapRules = this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((range) => moveToStartCol > range.startColumn && moveToStartCol <= range.endColumn));\n    if (permissionRangeLapRules.length) {\n      const redoMutations = [], undoMutations = [];\n      return permissionRangeLapRules.forEach((rule) => {\n        const cloneRule = Tools.deepClone(rule), moveFromStartCol = params.fromRange.startColumn;\n        let hasLap = !1;\n        cloneRule.ranges.forEach((range) => {\n          moveToStartCol > range.startColumn && moveToStartCol <= range.endColumn && (moveFromStartCol < range.startColumn && (range.startColumn = range.startColumn - moveLength, range.endColumn = range.endColumn - moveLength), range.endColumn += moveLength, hasLap = !0);\n        }), hasLap && (redoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule: cloneRule, ruleId: rule.id } }), undoMutations.push({ id: SetRangeProtectionMutation.id, params: { unitId, subUnitId, rule, ruleId: rule.id } }));\n      }), { redos: redoMutations, undos: undoMutations };\n    }\n    return { undos: [], redos: [] };\n  }\n  _correctPermissionRange() {\n    this.disposeWithMe(this._commandService.onCommandExecuted((command) => {\n      if (mutationIdArrByMove.includes(command.id)) {\n        if (!command.params) return;\n        const workbook = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n        if (!workbook) return;\n        const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n        if (!worksheet) return;\n        const { sourceRange, targetRange } = command.params, isRowMove = sourceRange.startColumn === targetRange.startColumn && sourceRange.endColumn === targetRange.endColumn, moveLength = isRowMove ? sourceRange.endRow - sourceRange.startRow + 1 : sourceRange.endColumn - sourceRange.startColumn + 1, sourceStart = isRowMove ? sourceRange.startRow : sourceRange.startColumn, targetStart = isRowMove ? targetRange.startRow : targetRange.startColumn;\n        this._selectionProtectionRuleModel.getSubunitRuleList(workbook.getUnitId(), worksheet.getSheetId()).forEach((rule) => {\n          rule.ranges.forEach((range) => {\n            let { startRow, endRow, startColumn, endColumn } = range;\n            Rectangle.intersects(range, sourceRange) || (isRowMove ? sourceStart < startRow && targetStart > endRow ? (startRow -= moveLength, endRow -= moveLength) : sourceStart > endRow && targetStart <= startRow && (startRow += moveLength, endRow += moveLength) : sourceStart < startColumn && targetStart > endColumn ? (startColumn -= moveLength, endColumn -= moveLength) : sourceStart > endColumn && targetStart <= startColumn && (startColumn += moveLength, endColumn += moveLength)), this._checkIsRightRange({ startRow, endRow, startColumn, endColumn }) && (range.startColumn = startColumn, range.endColumn = endColumn, range.startRow = startRow, range.endRow = endRow);\n          });\n        }), this.disposableCollection.dispose();\n        const { unitId, subUnitId } = command.params, handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n        this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c) => [...p, ...c.ranges], []).forEach((range) => {\n          this.disposableCollection.add(this._refRangeService.registerRefRange(range, handler, unitId, subUnitId));\n        }), this._selectionProtectionRenderModel.clear();\n      }\n      if (mutationIdByRowCol.includes(command.id)) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(command.params.unitId);\n        if (!workbook) return;\n        const worksheet = workbook.getSheetBySheetId(command.params.subUnitId);\n        if (!worksheet) return;\n        const params = command.params;\n        if (!params) return;\n        const { range } = params, isRowOperation = command.id.includes(\"row\"), isAddOperation = command.id.includes(\"insert\"), operationStart = isRowOperation ? range.startRow : range.startColumn, operationEnd = isRowOperation ? range.endRow : range.endColumn, operationCount = operationEnd - operationStart + 1;\n        this._selectionProtectionRuleModel.getSubunitRuleList(workbook.getUnitId(), worksheet.getSheetId()).forEach((rule) => {\n          rule.ranges.forEach((range2) => {\n            let { startRow, endRow, startColumn, endColumn } = range2;\n            isAddOperation ? isRowOperation ? operationStart <= startRow && (startRow += operationCount, endRow += operationCount) : operationStart <= startColumn && (startColumn += operationCount, endColumn += operationCount) : isRowOperation ? operationEnd < startRow && (startRow -= operationCount, endRow -= operationCount) : operationEnd < startColumn && (startColumn -= operationCount, endColumn -= operationCount), this._checkIsRightRange({ startRow, endRow, startColumn, endColumn }) && (range2.startColumn = startColumn, range2.endColumn = endColumn, range2.startRow = startRow, range2.endRow = endRow);\n          });\n        }), this.disposableCollection.dispose();\n        const { unitId, subUnitId } = command.params, handler = /* @__PURE__ */ __name((config) => this.refRangeHandle(config, unitId, subUnitId), \"handler\");\n        this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).reduce((p, c) => [...p, ...c.ranges], []).forEach((range2) => {\n          this.disposableCollection.add(this._refRangeService.registerRefRange(range2, handler, unitId, subUnitId));\n        }), this._selectionProtectionRenderModel.clear();\n      }\n    }));\n  }\n  _checkIsRightRange(range) {\n    return range.startRow <= range.endRow && range.startColumn <= range.endColumn;\n  }\n}, __name(_a16, \"RangeProtectionRefRangeService\"), _a16);\nRangeProtectionRefRangeService = __decorateClass$3([\n  OnLifecycle(LifecycleStages.Ready, RangeProtectionRefRangeService),\n  __decorateParam$3(0, Inject(RangeProtectionRuleModel)),\n  __decorateParam$3(1, Inject(IUniverInstanceService)),\n  __decorateParam$3(2, ICommandService),\n  __decorateParam$3(3, Inject(RefRangeService)),\n  __decorateParam$3(4, Inject(RangeProtectionRenderModel))\n], RangeProtectionRefRangeService);\nvar __defProp$2 = Object.defineProperty, __getOwnPropDesc$2 = Object.getOwnPropertyDescriptor, __decorateClass$2 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$2(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$2(target, key, result), result;\n}, \"__decorateClass$2\"), __decorateParam$2 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$2\");\nconst PLUGIN_NAME$1 = \"SHEET_RANGE_PROTECTION_PLUGIN\";\nvar _a17;\nlet RangeProtectionService = (_a17 = class extends Disposable {\n  constructor(_selectionProtectionRuleModel, _permissionService, _resourceManagerService) {\n    super(), this._selectionProtectionRuleModel = _selectionProtectionRuleModel, this._permissionService = _permissionService, this._resourceManagerService = _resourceManagerService, this._initSnapshot(), this._initRuleChange();\n  }\n  _initRuleChange() {\n    this.disposeWithMe(\n      this._selectionProtectionRuleModel.ruleChange$.subscribe((info) => {\n        switch (info.type) {\n          case \"add\": {\n            getAllRangePermissionPoint().forEach((F) => {\n              const instance = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n              this._permissionService.addPermissionPoint(instance);\n            });\n            break;\n          }\n          case \"delete\": {\n            getAllRangePermissionPoint().forEach((F) => {\n              const instance = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n              this._permissionService.deletePermissionPoint(instance.id);\n            });\n            break;\n          }\n          case \"set\": {\n            info.oldRule.permissionId !== info.rule.permissionId && getAllRangePermissionPoint().forEach((F) => {\n              const oldPermissionPoint = new F(info.unitId, info.subUnitId, info.oldRule.permissionId);\n              this._permissionService.deletePermissionPoint(oldPermissionPoint.id);\n              const newPermissionPoint = new F(info.unitId, info.subUnitId, info.rule.permissionId);\n              this._permissionService.addPermissionPoint(newPermissionPoint);\n            });\n            break;\n          }\n        }\n      })\n    );\n  }\n  _initSnapshot() {\n    const toJson = /* @__PURE__ */ __name((unitID) => {\n      const v = this._selectionProtectionRuleModel.toObject()[unitID];\n      return v ? JSON.stringify(v) : \"\";\n    }, \"toJson\"), parseJson = /* @__PURE__ */ __name((json) => {\n      if (!json)\n        return {};\n      try {\n        return JSON.parse(json);\n      } catch {\n        return {};\n      }\n    }, \"parseJson\");\n    this.disposeWithMe(\n      this._resourceManagerService.registerPluginResource({\n        toJson,\n        parseJson,\n        pluginName: PLUGIN_NAME$1,\n        businesses: [I.UNIVER_SHEET],\n        onLoad: /* @__PURE__ */ __name((unitId, resources) => {\n          const result = this._selectionProtectionRuleModel.toObject();\n          result[unitId] = resources, this._selectionProtectionRuleModel.fromObject(result);\n          const allAllowedParams = [];\n          Object.keys(resources).forEach((subUnitId) => {\n            const list = resources[subUnitId];\n            this._selectionProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).forEach((rule) => {\n              allAllowedParams.push({\n                objectID: rule.permissionId,\n                unitID: unitId,\n                objectType: M.SelectRange,\n                actions: [P.View, P.Edit]\n              });\n            }), list.forEach((rule) => {\n              getAllRangePermissionPoint().forEach((Factor) => {\n                const instance = new Factor(unitId, subUnitId, rule.permissionId);\n                instance.value = !1, this._permissionService.addPermissionPoint(instance);\n              });\n            });\n          });\n        }, \"onLoad\"),\n        onUnLoad: /* @__PURE__ */ __name((unitId) => {\n          this._selectionProtectionRuleModel.deleteUnitModel(unitId);\n        }, \"onUnLoad\")\n      })\n    );\n  }\n}, __name(_a17, \"RangeProtectionService\"), _a17);\nRangeProtectionService = __decorateClass$2([\n  __decorateParam$2(0, Inject(RangeProtectionRuleModel)),\n  __decorateParam$2(1, Inject(IPermissionService)),\n  __decorateParam$2(2, Inject(IResourceManagerService))\n], RangeProtectionService);\nvar __defProp$1 = Object.defineProperty, __getOwnPropDesc$1 = Object.getOwnPropertyDescriptor, __decorateClass$1 = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc$1(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp$1(target, key, result), result;\n}, \"__decorateClass$1\"), __decorateParam$1 = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam$1\"), _a18;\nlet NumberCellDisplayController = (_a18 = class extends Disposable {\n  constructor(_sheetInterceptorService) {\n    super(), this._sheetInterceptorService = _sheetInterceptorService, this._initialize();\n  }\n  _initialize() {\n    this._initInterceptorCellContent();\n  }\n  _initInterceptorCellContent() {\n    this.disposeWithMe(\n      this._sheetInterceptorService.intercept(INTERCEPTOR_POINT.CELL_CONTENT, {\n        priority: 11,\n        handler: /* @__PURE__ */ __name((cell, location, next) => {\n          var _a20;\n          const style = location.workbook.getStyles().getStyleByCell(cell);\n          return (_a20 = style == null ? void 0 : style.n) != null && _a20.pattern ? next({ ...cell }) : (cell == null ? void 0 : cell.t) === CellValueType.NUMBER && typeof (cell == null ? void 0 : cell.v) == \"number\" ? next({\n            ...cell,\n            v: stripErrorMargin(cell.v)\n          }) : next({ ...cell });\n        }, \"handler\")\n      })\n    );\n  }\n}, __name(_a18, \"NumberCellDisplayController\"), _a18);\nNumberCellDisplayController = __decorateClass$1([\n  OnLifecycle(LifecycleStages.Ready, NumberCellDisplayController),\n  __decorateParam$1(0, Inject(SheetInterceptorService))\n], NumberCellDisplayController);\nconst IExclusiveRangeService = createIdentifier(\"univer.exclusive-range-service\"), _ExclusiveRangeService = class _ExclusiveRangeService extends Disposable {\n  constructor() {\n    super(...arguments);\n    /**\n     * Exclusive range data structure is as follows: unitId -> sheetId -> feature -> range\n     */\n    __publicField(this, \"_exclusiveRanges\", /* @__PURE__ */ new Map());\n  }\n  _ensureUnitMap(unitId) {\n    return this._exclusiveRanges.has(unitId) || this._exclusiveRanges.set(unitId, /* @__PURE__ */ new Map()), this._exclusiveRanges.get(unitId);\n  }\n  _ensureSubunitMap(unitId, sheetId) {\n    const unitMap = this._ensureUnitMap(unitId);\n    return unitMap.has(sheetId) || unitMap.set(sheetId, /* @__PURE__ */ new Map()), unitMap.get(sheetId);\n  }\n  _ensureFeature(unitId, sheetId, feature) {\n    const subunitMap = this._ensureSubunitMap(unitId, sheetId);\n    return subunitMap.has(feature) || subunitMap.set(feature, []), subunitMap.get(feature);\n  }\n  addExclusiveRange(unitId, sheetId, feature, ranges) {\n    this._ensureFeature(unitId, sheetId, feature).push(...ranges);\n  }\n  getExclusiveRanges(unitId, sheetId, feature) {\n    var _a20, _b;\n    return (_b = (_a20 = this._exclusiveRanges.get(unitId)) == null ? void 0 : _a20.get(sheetId)) == null ? void 0 : _b.get(feature);\n  }\n  clearExclusiveRanges(unitId, sheetId, feature) {\n    this._ensureFeature(unitId, sheetId, feature), this._exclusiveRanges.get(unitId).get(sheetId).set(feature, []);\n  }\n  clearExclusiveRangesByGroupId(unitId, sheetId, feature, groupId) {\n    const featureMap = this.getExclusiveRanges(unitId, sheetId, feature);\n    if (featureMap) {\n      const newFeatureMap = featureMap.filter((item) => item.groupId !== groupId);\n      this._exclusiveRanges.get(unitId).get(sheetId).set(feature, newFeatureMap);\n    }\n  }\n  getInterestGroupId(selections) {\n    const interestGroupId = [];\n    return selections.forEach((selection) => {\n      var _a20;\n      const range = selection.range, { unitId, sheetId } = range;\n      if (!unitId || !sheetId) return;\n      const featureMap = (_a20 = this._exclusiveRanges.get(unitId)) == null ? void 0 : _a20.get(sheetId);\n      if (featureMap)\n        for (const feature of featureMap.keys()) {\n          const featureMapRanges = featureMap.get(feature);\n          if (featureMapRanges) {\n            for (const featureMapRange of featureMapRanges)\n              if (Rectangle.intersects(range, featureMapRange.range)) {\n                interestGroupId.push(feature);\n                break;\n              }\n          }\n        }\n    }), interestGroupId;\n  }\n};\n__name(_ExclusiveRangeService, \"ExclusiveRangeService\");\nlet ExclusiveRangeService = _ExclusiveRangeService;\nconst PLUGIN_CONFIG_KEY = \"sheets.config\", defaultPluginConfig = {};\nvar __defProp2 = Object.defineProperty, __getOwnPropDesc = Object.getOwnPropertyDescriptor, __defNormalProp2 = /* @__PURE__ */ __name((obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, \"__defNormalProp\"), __decorateClass = /* @__PURE__ */ __name((decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp2(target, key, result), result;\n}, \"__decorateClass\"), __decorateParam = /* @__PURE__ */ __name((index, decorator) => (target, key) => decorator(target, key, index), \"__decorateParam\"), __publicField2 = /* @__PURE__ */ __name((obj, key, value) => __defNormalProp2(obj, typeof key != \"symbol\" ? key + \"\" : key, value), \"__publicField\");\nconst PLUGIN_NAME = \"SHEET_PLUGIN\";\nvar _a19;\nlet UniverSheetsPlugin = (_a19 = class extends Plugin {\n  constructor(_config = defaultPluginConfig, _injector, _configService) {\n    super(), this._config = _config, this._injector = _injector, this._configService = _configService;\n    const { ...rest } = this._config;\n    this._configService.setConfig(PLUGIN_CONFIG_KEY, rest), this._initConfig(), this._initDependencies(_injector);\n  }\n  onRendered() {\n  }\n  _initConfig() {\n    var _a20;\n    (_a20 = this._config) != null && _a20.onlyRegisterFormulaRelatedMutations && this._configService.setConfig(ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY, !0);\n  }\n  _initDependencies(sheetInjector) {\n    var _a20, _b;\n    const dependencies = [\n      // services\n      [BorderStyleManagerService],\n      [SheetsSelectionsService],\n      [RefRangeService],\n      [WorkbookPermissionService],\n      [INumfmtService, { useClass: NumfmtService }],\n      [SheetInterceptorService],\n      // controllers\n      [BasicWorksheetController],\n      [MergeCellController],\n      [NumberCellDisplayController],\n      [DefinedNameDataController],\n      // permission\n      [WorksheetPermissionService],\n      [WorksheetProtectionRuleModel],\n      [WorksheetProtectionPointModel],\n      // range protection\n      [RangeProtectionRenderModel],\n      [RangeProtectionRuleModel],\n      [RangeProtectionRefRangeService],\n      [RangeProtectionService],\n      [IExclusiveRangeService, {\n        useClass: ExclusiveRangeService,\n        deps: [SheetsSelectionsService]\n      }]\n    ];\n    (_a20 = this._config) != null && _a20.notExecuteFormula || dependencies.push([CalculateResultApplyController]), mergeOverrideWithDependencies(dependencies, (_b = this._config) == null ? void 0 : _b.override).forEach((d) => {\n      sheetInjector.add(d);\n    }), this._injector.get(SheetInterceptorService), this._injector.get(RangeProtectionService), this._injector.get(IExclusiveRangeService);\n  }\n}, __name(_a19, \"UniverSheetsPlugin\"), _a19);\n__publicField2(UniverSheetsPlugin, \"pluginName\", PLUGIN_NAME);\n__publicField2(UniverSheetsPlugin, \"type\", UniverInstanceType.UNIVER_SHEET);\nUniverSheetsPlugin = __decorateClass([\n  DependentOn(UniverFormulaEnginePlugin),\n  __decorateParam(1, Inject(Injector)),\n  __decorateParam(2, IConfigService)\n], UniverSheetsPlugin);\nconst COMMAND_LISTENER_SKELETON_CHANGE = [\n  SetWorksheetRowHeightMutation.id,\n  SetWorksheetRowIsAutoHeightMutation.id,\n  SetWorksheetRowAutoHeightMutation.id,\n  SetWorksheetColWidthMutation.id,\n  SetWorksheetActiveOperation.id,\n  MoveRowsMutation.id,\n  MoveColsMutation.id,\n  SetColHiddenMutation.id,\n  SetColVisibleMutation.id,\n  SetRowHiddenMutation.id,\n  SetRowVisibleMutation.id,\n  InsertColMutation.id,\n  InsertRowMutation.id,\n  RemoveColMutation.id,\n  RemoveRowMutation.id\n], COMMAND_LISTENER_VALUE_CHANGE = [\n  SetRangeValuesMutation.id,\n  MoveRangeMutation.id,\n  RemoveWorksheetMergeMutation.id,\n  AddWorksheetMergeMutation.id,\n  ReorderRangeMutation.id\n], SELECTION_CONTROL_BORDER_BUFFER_WIDTH = 1.5, SELECTION_CONTROL_BORDER_BUFFER_COLOR = \"rgba(255, 255, 255, 0.01)\";\nfunction getNormalSelectionStyle(themeService) {\n  const styleSheet = themeService.getCurrentTheme(), fill = new ColorKit(styleSheet.primaryColor).setAlpha(0.07).toRgbString();\n  return {\n    strokeWidth: 1,\n    stroke: styleSheet.primaryColor,\n    fill,\n    // widgets: { tl: true, tc: true, tr: true, ml: true, mr: true, bl: true, bc: true, br: true },\n    widgets: {},\n    widgetSize: 6,\n    widgetStrokeWidth: 1,\n    widgetStroke: styleSheet.colorWhite,\n    hasAutoFill: !0,\n    AutofillSize: 6,\n    AutofillStrokeWidth: 1,\n    AutofillStroke: styleSheet.colorWhite,\n    hasRowHeader: !0,\n    rowHeaderFill: fill,\n    rowHeaderStroke: styleSheet.primaryColor,\n    rowHeaderStrokeWidth: 1,\n    hasColumnHeader: !0,\n    columnHeaderFill: fill,\n    columnHeaderStroke: styleSheet.primaryColor,\n    columnHeaderStrokeWidth: 1,\n    expandCornerSize: 40\n  };\n}\n__name(getNormalSelectionStyle, \"getNormalSelectionStyle\");\nfunction convertSelectionDataToRange(selectionWithCoordAndStyle) {\n  const { rangeWithCoord, primaryWithCoord, style } = selectionWithCoordAndStyle, result = {\n    range: {\n      startRow: rangeWithCoord.startRow,\n      startColumn: rangeWithCoord.startColumn,\n      endRow: rangeWithCoord.endRow,\n      endColumn: rangeWithCoord.endColumn,\n      rangeType: rangeWithCoord.rangeType,\n      unitId: rangeWithCoord.unitId,\n      sheetId: rangeWithCoord.sheetId\n    },\n    primary: null,\n    style\n  };\n  return primaryWithCoord != null && (result.primary = convertPrimaryWithCoordToPrimary(primaryWithCoord)), result;\n}\n__name(convertSelectionDataToRange, \"convertSelectionDataToRange\");\nfunction convertPrimaryWithCoordToPrimary(primaryWithCoord) {\n  const { actualRow, actualColumn, isMerged, isMergedMainCell } = primaryWithCoord, { startRow, startColumn, endRow, endColumn } = primaryWithCoord.mergeInfo;\n  return {\n    actualRow,\n    actualColumn,\n    isMerged,\n    isMergedMainCell,\n    startRow,\n    startColumn,\n    endRow,\n    endColumn\n  };\n}\n__name(convertPrimaryWithCoordToPrimary, \"convertPrimaryWithCoordToPrimary\");\nfunction transformCellDataToSelectionData(row, column, mergeData) {\n  const newCellRange = getCellInfoInMergeData(row, column, mergeData), newSelectionData = makeCellRangeToRangeData(newCellRange);\n  if (newSelectionData)\n    return {\n      range: newSelectionData,\n      primary: newCellRange,\n      style: null\n    };\n}\n__name(transformCellDataToSelectionData, \"transformCellDataToSelectionData\");\nconst AddMergeRedoSelectionsOperationFactory = /* @__PURE__ */ __name((accessor, params, ranges) => {\n  const selectionsBeforeMutation = accessor.get(SheetsSelectionsService).getCurrentSelections(), { value, selections, unitId, subUnitId } = params;\n  if (selectionsBeforeMutation) {\n    const primaryBeforeMutation = selectionsBeforeMutation[(selectionsBeforeMutation == null ? void 0 : selectionsBeforeMutation.length) - 1].primary;\n    if (primaryBeforeMutation) {\n      const { actualColumn, actualRow } = primaryBeforeMutation;\n      let { startRow, startColumn, endRow, endColumn } = selections[selections.length - 1];\n      if (value === Dimension.COLUMNS) {\n        const rangeByColumn = ranges.find((item) => item.startColumn === actualColumn && item.endColumn === actualColumn && actualRow === item.startRow);\n        rangeByColumn && (endColumn = rangeByColumn.endColumn, startRow = rangeByColumn.startRow, endRow = rangeByColumn.endRow);\n      } else if (value === Dimension.ROWS) {\n        const rangeByRow = ranges.find((item) => item.startRow === actualRow && item.endRow === actualRow && actualColumn === item.startColumn);\n        rangeByRow && (endRow = rangeByRow.endRow, startColumn = rangeByRow.startColumn, endColumn = rangeByRow.endColumn);\n      }\n      const primary = {\n        startRow,\n        startColumn,\n        endRow,\n        endColumn,\n        actualRow,\n        actualColumn,\n        isMerged: !0,\n        isMergedMainCell: startRow === actualRow && startColumn === actualColumn\n      }, selectionsByRedo = selectionsBeforeMutation.map((selection, index, selections2) => ({\n        range: selection.range,\n        style: null,\n        primary: index === selections2.length - 1 ? primary : null\n      })), setSelectionsParamByRedo = {\n        unitId,\n        subUnitId,\n        selections: selectionsByRedo\n      };\n      return {\n        id: SetSelectionsOperation.id,\n        params: setSelectionsParamByRedo\n      };\n    }\n    return null;\n  }\n  return null;\n}, \"AddMergeRedoSelectionsOperationFactory\"), AddMergeUndoSelectionsOperationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const selectionsBeforeMutation = accessor.get(SheetsSelectionsService).getCurrentSelections(), { unitId, subUnitId } = params;\n  if (selectionsBeforeMutation && selectionsBeforeMutation[(selectionsBeforeMutation == null ? void 0 : selectionsBeforeMutation.length) - 1].primary) {\n    const setSelectionsParamByUndo = {\n      unitId,\n      subUnitId,\n      selections: [...selectionsBeforeMutation]\n    };\n    return {\n      id: SetSelectionsOperation.id,\n      params: setSelectionsParamByUndo\n    };\n  }\n  return null;\n}, \"AddMergeUndoSelectionsOperationFactory\");\nfunction cellHasValue(cell) {\n  return cell == null ? !1 : cell.v !== void 0 && cell.v !== null && cell.v !== \"\" || cell.p !== void 0;\n}\n__name(cellHasValue, \"cellHasValue\");\nfunction hasValueFromMatrixWithSpanInfo(cell, matrix) {\n  return cell && cell.spanAnchor ? cellHasValue(matrix.getValue(cell.spanAnchor.startRow, cell.spanAnchor.startColumn)) : cellHasValue(cell);\n}\n__name(hasValueFromMatrixWithSpanInfo, \"hasValueFromMatrixWithSpanInfo\");\nfunction getMatrixWithSpanInfo(worksheet, startRow, startColumn, endRow, endColumn) {\n  const matrix = worksheet.getCellMatrix(), mergedCellsInRange = worksheet.getSpanModel().getMergedCellRange(startRow, startColumn, endRow, endColumn), returnCellMatrix = new ObjectMatrix();\n  return matrix.forValue((row, col) => {\n    const v = matrix.getValue(row, col);\n    v && returnCellMatrix.setValue(row, col, v);\n  }), mergedCellsInRange.forEach((mergedCell) => {\n    const { startColumn: startColumn2, startRow: startRow2, endColumn: endColumn2, endRow: endRow2 } = mergedCell;\n    createRowColIter(startRow2, endRow2, startColumn2, endColumn2).forEach((row, col) => {\n      row === startRow2 && col === startColumn2 && returnCellMatrix.setValue(row, col, {\n        ...matrix.getValue(row, col),\n        spanAnchor: { startRow: startRow2, endRow: endRow2, startColumn: startColumn2, endColumn: endColumn2 }\n      }), (row !== startRow2 || col !== startColumn2) && (returnCellMatrix.realDeleteValue(row, col), returnCellMatrix.setValue(row, col, {\n        spanAnchor: { startRow: startRow2, endRow: endRow2, startColumn: startColumn2, endColumn: endColumn2 }\n      }));\n    });\n  }), returnCellMatrix;\n}\n__name(getMatrixWithSpanInfo, \"getMatrixWithSpanInfo\");\nfunction getExpandedRangeLeft(range, allMatrixWithSpan, leftOffset, isWorksheetHasSpan) {\n  const { startRow, startColumn, endRow } = range;\n  let spanAnchor = null, hasValue = !1;\n  for (let i = startRow; i <= endRow; i++) {\n    const cell = allMatrixWithSpan.getValue(i, startColumn - leftOffset);\n    if (hasValue = hasValue || hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue)\n      break;\n    cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n      startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n      startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n      endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n      endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n    } : spanAnchor = {\n      startRow: cell.spanAnchor.startRow,\n      startColumn: cell.spanAnchor.startColumn,\n      endRow: cell.spanAnchor.endRow,\n      endColumn: cell.spanAnchor.endColumn\n    });\n  }\n  return hasValue ? (range.startColumn = range.startColumn - leftOffset, {\n    spanAnchor,\n    hasValue: !0,\n    range\n  }) : {\n    spanAnchor: null,\n    hasValue: !1,\n    range\n  };\n}\n__name(getExpandedRangeLeft, \"getExpandedRangeLeft\");\nfunction getExpandedRangeRight(range, allMatrixWithSpan, rightOffset, isWorksheetHasSpan) {\n  const { startRow, endColumn, endRow } = range;\n  let spanAnchor = null, hasValue = !1;\n  for (let i = startRow; i <= endRow; i++) {\n    const cell = allMatrixWithSpan.getValue(i, endColumn + rightOffset);\n    if (hasValue = hasValue || hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue)\n      break;\n    cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n      startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n      startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n      endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n      endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n    } : spanAnchor = {\n      startRow: cell.spanAnchor.startRow,\n      startColumn: cell.spanAnchor.startColumn,\n      endRow: cell.spanAnchor.endRow,\n      endColumn: cell.spanAnchor.endColumn\n    });\n  }\n  return hasValue ? (range.endColumn = range.endColumn + rightOffset, {\n    spanAnchor,\n    hasValue: !0,\n    range\n  }) : {\n    spanAnchor: null,\n    hasValue: !1,\n    range\n  };\n}\n__name(getExpandedRangeRight, \"getExpandedRangeRight\");\nfunction getExpandedRangeUp(range, allMatrixWithSpan, upOffset, isWorksheetHasSpan) {\n  const { startRow, startColumn, endColumn } = range;\n  let spanAnchor = null, hasValue = !1;\n  for (let i = startColumn; i <= endColumn; i++) {\n    const cell = allMatrixWithSpan.getValue(startRow - upOffset, i);\n    if (hasValue = hasValue || hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue)\n      break;\n    cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n      startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n      startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n      endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n      endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n    } : spanAnchor = {\n      startRow: cell.spanAnchor.startRow,\n      startColumn: cell.spanAnchor.startColumn,\n      endRow: cell.spanAnchor.endRow,\n      endColumn: cell.spanAnchor.endColumn\n    });\n  }\n  return hasValue ? (range.startRow = range.startRow - upOffset, {\n    spanAnchor,\n    hasValue: !0,\n    range\n  }) : {\n    spanAnchor: null,\n    hasValue: !1,\n    range\n  };\n}\n__name(getExpandedRangeUp, \"getExpandedRangeUp\");\nfunction getExpandedRangeDown(range, allMatrixWithSpan, downOffset, isWorksheetHasSpan) {\n  const { startColumn, endColumn, endRow } = range;\n  let spanAnchor = null, hasValue = !1;\n  for (let i = startColumn; i <= endColumn; i++) {\n    const cell = allMatrixWithSpan.getValue(endRow + downOffset, i);\n    if (hasValue = hasValue || hasValueFromMatrixWithSpanInfo(cell, allMatrixWithSpan), !isWorksheetHasSpan && hasValue)\n      break;\n    cell && cell.spanAnchor && (spanAnchor ? spanAnchor = {\n      startRow: Math.min(cell.spanAnchor.startRow, spanAnchor.startRow),\n      startColumn: Math.min(cell.spanAnchor.startColumn, spanAnchor.startColumn),\n      endRow: Math.max(cell.spanAnchor.endRow, spanAnchor.endRow),\n      endColumn: Math.max(cell.spanAnchor.endColumn, spanAnchor.endColumn)\n    } : spanAnchor = {\n      startRow: cell.spanAnchor.startRow,\n      startColumn: cell.spanAnchor.startColumn,\n      endRow: cell.spanAnchor.endRow,\n      endColumn: cell.spanAnchor.endColumn\n    });\n  }\n  return hasValue ? (range.endRow = range.endRow + downOffset, {\n    spanAnchor,\n    hasValue: !0,\n    range\n  }) : {\n    spanAnchor: null,\n    hasValue: !1,\n    range\n  };\n}\n__name(getExpandedRangeDown, \"getExpandedRangeDown\");\nfunction expandToContinuousRange(startRange, directions, worksheet) {\n  const maxRow = worksheet.getMaxRows(), maxColumn = worksheet.getMaxColumns(), allMatrixWithSpan = getMatrixWithSpanInfo(worksheet, 0, 0, maxRow - 1, maxColumn - 1), worksheetHasSpan = worksheet.getSnapshot().mergeData.length > 0, { left, right, up, down } = directions;\n  let changed = !0, destRange = { ...startRange };\n  const spanAnchors = [];\n  for (; changed; ) {\n    if (changed = !1, up && destRange.startRow !== 0) {\n      const { hasValue, range, spanAnchor } = getExpandedRangeUp(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n      if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n        destRange = range, changed = !0;\n        continue;\n      }\n    }\n    if (down && destRange.endRow !== maxRow - 1) {\n      const { hasValue, range, spanAnchor } = getExpandedRangeDown(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n      if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n        destRange = range, changed = !0;\n        continue;\n      }\n    }\n    if (left && destRange.startColumn !== 0) {\n      const { hasValue, range, spanAnchor } = getExpandedRangeLeft(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n      if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n        destRange = range, changed = !0;\n        continue;\n      }\n    }\n    if (right && destRange.endColumn !== maxColumn - 1) {\n      const { hasValue, range, spanAnchor } = getExpandedRangeRight(destRange, allMatrixWithSpan, 1, worksheetHasSpan);\n      if (spanAnchor && spanAnchors.push(spanAnchor), hasValue) {\n        destRange = range, changed = !0;\n        continue;\n      }\n    }\n  }\n  return spanAnchors.length > 0 && (destRange = Rectangle.union(destRange, ...spanAnchors)), destRange;\n}\n__name(expandToContinuousRange, \"expandToContinuousRange\");\nconst checkRangesEditablePermission = /* @__PURE__ */ __name((accessor, unitId, subUnitId, ranges) => {\n  const permissionService = accessor.get(IPermissionService), rangeProtectionRuleModel = accessor.get(RangeProtectionRuleModel$1), workbookEditablePermission = permissionService.getPermissionPoint(new WorkbookEditablePermission$1(unitId).id);\n  if (!(workbookEditablePermission != null && workbookEditablePermission.value))\n    return !1;\n  const worksheetEditPermission = permissionService.getPermissionPoint(new WorksheetEditPermission$1(unitId, subUnitId).id);\n  if (!(worksheetEditPermission != null && worksheetEditPermission.value))\n    return !1;\n  const ruleList = rangeProtectionRuleModel.getSubunitRuleList(unitId, subUnitId).filter((rule) => rule.ranges.some((ruleRange) => ranges.some((range) => Rectangle.intersects(ruleRange, range))));\n  return ruleList.length ? ruleList.every((rule) => {\n    const permissionId = rule.permissionId, permissionPoint = permissionService.getPermissionPoint(new RangeProtectionPermissionEditPoint$1(unitId, subUnitId, permissionId).id);\n    return !!(permissionPoint != null && permissionPoint.value);\n  }) : !0;\n}, \"checkRangesEditablePermission\");\nfunction checkCellContentInRanges(worksheet, ranges) {\n  return ranges.some((range) => checkCellContentInRange(worksheet, range));\n}\n__name(checkCellContentInRanges, \"checkCellContentInRanges\");\nfunction checkCellContentInRange(worksheet, range) {\n  const { startRow, startColumn, endColumn, endRow } = range, cellMatrix = worksheet.getMatrixWithMergedCells(startRow, startColumn, endRow, endColumn);\n  let someCellGoingToBeRemoved = !1;\n  return cellMatrix.forValue((row, col, cellData) => {\n    if (cellData && (row !== startRow || col !== startColumn) && worksheet.cellHasValue(cellData))\n      return someCellGoingToBeRemoved = !0, !1;\n  }), someCellGoingToBeRemoved;\n}\n__name(checkCellContentInRange, \"checkCellContentInRange\");\nfunction getClearContentMutationParamsForRanges(accessor, unitId, worksheet, ranges) {\n  const undos = [], redos = [], subUnitId = worksheet.getSheetId();\n  return ranges.forEach((range) => {\n    const redoMatrix = getClearContentMutationParamForRange(worksheet, range), redoMutationParams = {\n      unitId,\n      subUnitId,\n      cellValue: redoMatrix.getData()\n    }, undoMutationParams = SetRangeValuesUndoMutationFactory(\n      accessor,\n      redoMutationParams\n    );\n    undos.push({ id: SetRangeValuesMutation.id, params: undoMutationParams }), redos.push({ id: SetRangeValuesMutation.id, params: redoMutationParams });\n  }), {\n    undos,\n    redos\n  };\n}\n__name(getClearContentMutationParamsForRanges, \"getClearContentMutationParamsForRanges\");\nfunction getClearContentMutationParamForRange(worksheet, range) {\n  const { startRow, startColumn, endColumn, endRow } = range, cellMatrix = worksheet.getMatrixWithMergedCells(startRow, startColumn, endRow, endColumn, !0), redoMatrix = new ObjectMatrix();\n  return cellMatrix.forValue((row, col, cellData) => {\n    cellData && (row !== startRow || col !== startColumn) && redoMatrix.setValue(row, col, null);\n  }), redoMatrix;\n}\n__name(getClearContentMutationParamForRange, \"getClearContentMutationParamForRange\");\nconst AddWorksheetMergeCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.add-worksheet-merge\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), unitId = params.unitId, subUnitId = params.subUnitId, selections = params.selections, ranges = getAddMergeMutationRangeByType(selections, params.value), worksheet = univerInstanceService.getUniverSheetInstance(unitId).getSheetBySheetId(subUnitId), redoMutations = [], undoMutations = [], willRemoveSomeCell = checkCellContentInRanges(worksheet, ranges), removeMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges\n    }, addMergeMutationParams = {\n      unitId,\n      subUnitId,\n      ranges\n    };\n    redoMutations.push({ id: RemoveWorksheetMergeMutation.id, params: removeMergeMutationParams }), redoMutations.push({ id: AddWorksheetMergeMutation.id, params: addMergeMutationParams });\n    const undoRemoveMergeMutationParams = RemoveMergeUndoMutationFactory(accessor, removeMergeMutationParams), undoMutationParams = AddMergeUndoMutationFactory(accessor, addMergeMutationParams);\n    if (undoMutations.push({ id: RemoveWorksheetMergeMutation.id, params: undoMutationParams }), undoMutations.push({ id: AddWorksheetMergeMutation.id, params: undoRemoveMergeMutationParams }), willRemoveSomeCell) {\n      const data = getClearContentMutationParamsForRanges(accessor, unitId, worksheet, ranges);\n      redoMutations.unshift(...data.redos), undoMutations.push(...data.undos);\n    }\n    return sequenceExecute(redoMutations, commandService).result ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations,\n      redoMutations\n    }), !0) : !1;\n  }, \"handler\")\n}, AddWorksheetMergeAllCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.add-worksheet-merge-all\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), selections = (_a20 = accessor.get(SheetsSelectionsService).getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const workSheet = workbook.getActiveSheet();\n    if (!workSheet) return !1;\n    const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n    return commandService.executeCommand(AddWorksheetMergeCommand.id, {\n      selections,\n      unitId,\n      subUnitId\n    });\n  }, \"handler\")\n}, AddWorksheetMergeVerticalCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.add-worksheet-merge-vertical\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), selections = (_a20 = accessor.get(SheetsSelectionsService).getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const workSheet = workbook.getActiveSheet();\n    if (!workSheet) return !1;\n    const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n    return commandService.executeCommand(AddWorksheetMergeCommand.id, {\n      value: Dimension.COLUMNS,\n      selections,\n      unitId,\n      subUnitId\n    });\n  }, \"handler\")\n}, AddWorksheetMergeHorizontalCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.add-worksheet-merge-horizontal\",\n  handler: /* @__PURE__ */ __name(async (accessor) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), selections = (_a20 = accessor.get(SheetsSelectionsService).getCurrentSelections()) == null ? void 0 : _a20.map((s) => s.range);\n    if (!(selections != null && selections.length))\n      return !1;\n    const workbook = accessor.get(IUniverInstanceService).getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET);\n    if (!workbook) return !1;\n    const workSheet = workbook.getActiveSheet();\n    if (!workSheet) return !1;\n    const unitId = workbook.getUnitId(), subUnitId = workSheet.getSheetId();\n    return commandService.executeCommand(AddWorksheetMergeCommand.id, {\n      value: Dimension.ROWS,\n      selections,\n      unitId,\n      subUnitId\n    });\n  }, \"handler\")\n};\nasync function addMergeCellsUtil(injector, unitId, subUnitId, ranges) {\n  const univerInstanceService = injector.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService, { unitId, subUnitId });\n  if (!target) return;\n  const { worksheet } = target;\n  if (worksheet.getMergeData().some((mergeRange) => ranges.some((range) => Rectangle.intersects(range, mergeRange))))\n    throw new Error(\"The ranges to be merged overlap with the existing merged cells\");\n  await injector.get(ICommandService).executeCommand(AddWorksheetMergeCommand.id, {\n    unitId,\n    subUnitId,\n    selections: ranges\n  });\n}\n__name(addMergeCellsUtil, \"addMergeCellsUtil\");\nconst SetHideGridlinesUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const oldStatus = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().showGridlines;\n  return {\n    ...Tools.deepClone(params),\n    hideGridlines: oldStatus\n  };\n}, \"SetHideGridlinesUndoMutationFactory\"), SetHideGridlinesMutation = {\n  id: \"sheet.mutation.set-hide-gridlines\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!workbook) return !1;\n    const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const config = worksheet.getConfig();\n    return config.showGridlines = params.hideGridlines, !0;\n  }, \"handler\")\n}, SetHideGridlinesCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-hide-gridlines\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), univerInstanceService = accessor.get(IUniverInstanceService), target = getSheetCommandTarget(univerInstanceService);\n    if (!target) return !1;\n    const { unitId, subUnitId } = target;\n    let hideGridlines = BooleanNumber.FALSE;\n    params && (hideGridlines = (_a20 = params.hideGridlines) != null ? _a20 : BooleanNumber.FALSE);\n    const workbook = univerInstanceService.getUniverSheetInstance(unitId);\n    if (!workbook || !workbook.getSheetBySheetId(subUnitId)) return !1;\n    const setHideGridlinesMutationParams = {\n      hideGridlines,\n      unitId,\n      subUnitId\n    }, undoMutationParams = SetHideGridlinesUndoMutationFactory(accessor, setHideGridlinesMutationParams);\n    return commandService.syncExecuteCommand(SetHideGridlinesMutation.id, setHideGridlinesMutationParams) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetHideGridlinesMutation.id, params: undoMutationParams }],\n      redoMutations: [{ id: SetHideGridlinesMutation.id, params: setHideGridlinesMutationParams }]\n    }), !0) : !1;\n  }, \"handler\")\n}, SetWorksheetRightToLeftUndoMutationFactory = /* @__PURE__ */ __name((accessor, params) => {\n  const oldState = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId).getSheetBySheetId(params.subUnitId).getConfig().rightToLeft;\n  return {\n    ...Tools.deepClone(params),\n    rightToLeft: oldState\n  };\n}, \"SetWorksheetRightToLeftUndoMutationFactory\"), SetWorksheetRightToLeftMutation = {\n  id: \"sheet.mutation.set-worksheet-right-to-left\",\n  type: CommandType.MUTATION,\n  handler: /* @__PURE__ */ __name((accessor, params) => {\n    const workbook = accessor.get(IUniverInstanceService).getUniverSheetInstance(params.unitId);\n    if (!workbook) return !1;\n    const worksheet = workbook.getSheetBySheetId(params.subUnitId);\n    if (!worksheet) return !1;\n    const config = worksheet.getConfig();\n    return config.rightToLeft = params.rightToLeft, !0;\n  }, \"handler\")\n}, SetWorksheetRightToLeftCommand = {\n  type: CommandType.COMMAND,\n  id: \"sheet.command.set-worksheet-right-to-left\",\n  handler: /* @__PURE__ */ __name(async (accessor, params) => {\n    var _a20;\n    const commandService = accessor.get(ICommandService), undoRedoService = accessor.get(IUndoRedoService), target = getSheetCommandTarget(accessor.get(IUniverInstanceService), params);\n    if (!target) return !1;\n    const { unitId, subUnitId } = target;\n    let rightToLeft = BooleanNumber.FALSE;\n    params && (rightToLeft = (_a20 = params.rightToLeft) != null ? _a20 : BooleanNumber.FALSE);\n    const setWorksheetRightToLeftMutationParams = {\n      rightToLeft,\n      unitId,\n      subUnitId\n    }, undoMutationParams = SetWorksheetRightToLeftUndoMutationFactory(\n      accessor,\n      setWorksheetRightToLeftMutationParams\n    );\n    return commandService.syncExecuteCommand(\n      SetWorksheetRightToLeftMutation.id,\n      setWorksheetRightToLeftMutationParams\n    ) ? (undoRedoService.pushUndoRedo({\n      unitID: unitId,\n      undoMutations: [{ id: SetWorksheetRightToLeftMutation.id, params: undoMutationParams }],\n      redoMutations: [\n        { id: SetWorksheetRightToLeftMutation.id, params: setWorksheetRightToLeftMutationParams }\n      ]\n    }), !0) : !1;\n  }, \"handler\")\n};\nexport {\n  AddMergeRedoSelectionsOperationFactory,\n  AddMergeUndoMutationFactory,\n  AddMergeUndoSelectionsOperationFactory,\n  AddRangeProtectionCommand,\n  AddRangeProtectionMutation,\n  AddWorksheetMergeAllCommand,\n  AddWorksheetMergeCommand,\n  AddWorksheetMergeHorizontalCommand,\n  AddWorksheetMergeMutation,\n  AddWorksheetMergeVerticalCommand,\n  AddWorksheetProtectionMutation,\n  BorderStyleManagerService,\n  COMMAND_LISTENER_SKELETON_CHANGE,\n  COMMAND_LISTENER_VALUE_CHANGE,\n  ClearSelectionAllCommand,\n  ClearSelectionContentCommand,\n  ClearSelectionFormatCommand,\n  CopySheetCommand,\n  DISABLE_NORMAL_SELECTIONS,\n  DefinedNameDataController,\n  DeleteRangeMoveLeftCommand,\n  DeleteRangeMoveUpCommand,\n  DeleteRangeProtectionCommand,\n  DeleteRangeProtectionMutation,\n  DeleteWorksheetProtectionMutation,\n  DeltaColumnWidthCommand,\n  DeltaRowHeightCommand,\n  EffectRefRangId,\n  EmptyMutation,\n  ExclusiveRangeService,\n  FactoryAddRangeProtectionMutation,\n  FactoryDeleteRangeProtectionMutation,\n  FactorySetRangeProtectionMutation,\n  IExclusiveRangeService,\n  INTERCEPTOR_POINT,\n  INumfmtService,\n  IRefSelectionsService,\n  InsertColAfterCommand,\n  InsertColBeforeCommand,\n  InsertColCommand,\n  InsertColMutation,\n  InsertColMutationUndoFactory,\n  InsertDefinedNameCommand,\n  InsertRangeMoveDownCommand,\n  InsertRangeMoveRightCommand,\n  InsertRowAfterCommand,\n  InsertRowBeforeCommand,\n  InsertRowCommand,\n  InsertRowMutation,\n  InsertRowMutationUndoFactory,\n  InsertSheetCommand,\n  InsertSheetMutation,\n  InsertSheetUndoMutationFactory,\n  InterceptCellContentPriority,\n  MAX_CELL_PER_SHEET_KEY,\n  MERGE_CELL_INTERCEPTOR_CHECK,\n  MergeCellController,\n  MoveColsCommand,\n  MoveColsMutation,\n  MoveColsMutationUndoFactory,\n  MoveRangeCommand,\n  MoveRangeMutation,\n  MoveRowsCommand,\n  MoveRowsMutation,\n  MoveRowsMutationUndoFactory,\n  NumfmtService,\n  OperatorType,\n  RangeMergeUtil,\n  RangeProtectionPermissionEditPoint,\n  RangeProtectionPermissionViewPoint,\n  RangeProtectionRefRangeService,\n  RangeProtectionRenderModel,\n  RangeProtectionRuleModel,\n  RangeProtectionService,\n  RefRangeService,\n  RefSelectionsService,\n  RemoveColCommand,\n  RemoveColMutation,\n  RemoveDefinedNameCommand,\n  RemoveMergeUndoMutationFactory,\n  RemoveNumfmtMutation,\n  RemoveRowCommand,\n  RemoveRowMutation,\n  RemoveSheetCommand,\n  RemoveSheetMutation,\n  RemoveSheetUndoMutationFactory,\n  RemoveWorksheetMergeCommand,\n  RemoveWorksheetMergeMutation,\n  ReorderRangeCommand,\n  ReorderRangeMutation,\n  ReorderRangeUndoMutationFactory,\n  ResetBackgroundColorCommand,\n  ResetTextColorCommand,\n  SELECTION_CONTROL_BORDER_BUFFER_COLOR,\n  SELECTION_CONTROL_BORDER_BUFFER_WIDTH,\n  ScrollToCellOperation,\n  SelectionMoveType,\n  SetBackgroundColorCommand,\n  SetBoldCommand,\n  SetBorderBasicCommand,\n  SetBorderColorCommand,\n  SetBorderCommand,\n  SetBorderPositionCommand,\n  SetBorderStyleCommand,\n  SetColHiddenCommand,\n  SetColHiddenMutation,\n  SetColVisibleMutation,\n  SetColWidthCommand,\n  SetDefinedNameCommand,\n  SetFontFamilyCommand,\n  SetFontSizeCommand,\n  SetFrozenCancelCommand,\n  SetFrozenCommand,\n  SetFrozenMutation,\n  SetFrozenMutationFactory,\n  SetHideGridlinesCommand,\n  SetHideGridlinesMutation,\n  SetHorizontalTextAlignCommand,\n  SetItalicCommand,\n  SetNumfmtMutation,\n  SetOverlineCommand,\n  SetRangeProtectionCommand,\n  SetRangeProtectionMutation,\n  SetRangeValuesCommand,\n  SetRangeValuesMutation,\n  SetRangeValuesUndoMutationFactory,\n  SetRowHeightCommand,\n  SetRowHiddenCommand,\n  SetRowHiddenMutation,\n  SetRowVisibleMutation,\n  SetSelectedColsVisibleCommand,\n  SetSelectedRowsVisibleCommand,\n  SetSelectionsOperation,\n  SetSpecificColsVisibleCommand,\n  SetSpecificRowsVisibleCommand,\n  SetStrikeThroughCommand,\n  SetStyleCommand,\n  SetTabColorCommand,\n  SetTabColorMutation,\n  SetTextColorCommand,\n  SetTextRotationCommand,\n  SetTextWrapCommand,\n  SetUnderlineCommand,\n  SetVerticalTextAlignCommand,\n  SetWorkbookNameCommand,\n  SetWorkbookNameMutation,\n  SetWorksheetActivateCommand,\n  SetWorksheetActiveOperation,\n  SetWorksheetColWidthMutation,\n  SetWorksheetColWidthMutationFactory,\n  SetWorksheetHideCommand,\n  SetWorksheetHideMutation,\n  SetWorksheetNameCommand,\n  SetWorksheetNameMutation,\n  SetWorksheetOrderCommand,\n  SetWorksheetOrderMutation,\n  SetWorksheetPermissionPointsCommand,\n  SetWorksheetPermissionPointsMutation,\n  SetWorksheetProtectionMutation,\n  SetWorksheetRightToLeftCommand,\n  SetWorksheetRightToLeftMutation,\n  SetWorksheetRowAutoHeightMutation,\n  SetWorksheetRowAutoHeightMutationFactory,\n  SetWorksheetRowHeightMutation,\n  SetWorksheetRowIsAutoHeightCommand,\n  SetWorksheetRowIsAutoHeightMutation,\n  SetWorksheetShowCommand,\n  SheetInterceptorService,\n  SheetsSelectionsService,\n  M as UnitObject,\n  UniverSheetsPlugin,\n  WorkbookCommentPermission,\n  WorkbookCopyPermission,\n  WorkbookCopySheetPermission,\n  WorkbookCreateSheetPermission,\n  WorkbookDeleteSheetPermission,\n  WorkbookDuplicatePermission,\n  WorkbookEditablePermission,\n  WorkbookExportPermission,\n  WorkbookHideSheetPermission,\n  WorkbookHistoryPermission,\n  WorkbookManageCollaboratorPermission,\n  WorkbookMoveSheetPermission,\n  WorkbookPermissionService,\n  WorkbookPrintPermission,\n  WorkbookRecoverHistoryPermission,\n  WorkbookRenameSheetPermission,\n  WorkbookSelections,\n  WorkbookSharePermission,\n  WorkbookViewHistoryPermission,\n  WorkbookViewPermission,\n  WorksheetCopyPermission,\n  WorksheetDeleteColumnPermission,\n  WorksheetDeleteRowPermission,\n  WorksheetEditExtraObjectPermission,\n  WorksheetEditPermission,\n  WorksheetFilterPermission,\n  WorksheetInsertColumnPermission,\n  WorksheetInsertHyperlinkPermission,\n  WorksheetInsertRowPermission,\n  WorksheetManageCollaboratorPermission,\n  WorksheetPermissionService,\n  WorksheetPivotTablePermission,\n  WorksheetProtectionPointModel,\n  WorksheetProtectionRuleModel,\n  WorksheetSelectProtectedCellsPermission,\n  WorksheetSelectUnProtectedCellsPermission,\n  WorksheetSetCellStylePermission,\n  WorksheetSetCellValuePermission,\n  WorksheetSetColumnStylePermission,\n  WorksheetSetRowStylePermission,\n  WorksheetSortPermission,\n  WorksheetViewPermission,\n  addMergeCellsUtil,\n  alignToMergedCellsBorders,\n  checkRangesEditablePermission,\n  convertPrimaryWithCoordToPrimary,\n  convertSelectionDataToRange,\n  copyRangeStyles,\n  createTopMatrixFromMatrix,\n  createTopMatrixFromRanges,\n  defaultWorkbookPermissionPoints,\n  defaultWorksheetPermissionPoint,\n  expandToContinuousRange,\n  factoryRemoveNumfmtUndoMutation,\n  factorySetNumfmtUndoMutation,\n  findAllRectangle,\n  followSelectionOperation,\n  generateNullCell,\n  generateNullCellValue,\n  getAddMergeMutationRangeByType,\n  getAllRangePermissionPoint,\n  getAllWorkbookPermissionPoint,\n  getAllWorksheetPermissionPoint,\n  getAllWorksheetPermissionPointByPointPanel,\n  getCellAtRowCol,\n  getDefaultRangePermission,\n  getInsertRangeMutations,\n  getMoveRangeUndoRedoMutations,\n  getNormalSelectionStyle,\n  getPrimaryForRange,\n  getRemoveRangeMutations,\n  getSelectionsService,\n  getSheetCommandTarget,\n  getSheetCommandTargetWorkbook,\n  getSheetMutationTarget,\n  handleBaseInsertRange,\n  handleBaseMoveRowsCols,\n  handleBaseRemoveRange,\n  handleCommonDefaultRangeChangeWithEffectRefCommands,\n  handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests,\n  handleDefaultRangeChangeWithEffectRefCommands,\n  handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests,\n  handleDeleteRangeMoveLeft,\n  handleDeleteRangeMoveUp,\n  handleDeleteRangeMutation,\n  handleIRemoveCol,\n  handleIRemoveRow,\n  handleInsertCol,\n  handleInsertRangeMoveDown,\n  handleInsertRangeMoveRight,\n  handleInsertRangeMutation,\n  handleInsertRow,\n  handleMoveCols,\n  handleMoveRange,\n  handleMoveRows,\n  isSingleCellSelection,\n  rangeMerge,\n  rotateRange,\n  runRefRangeMutations,\n  setEndForRange,\n  transformCellDataToSelectionData,\n  transformCellsToRange\n};\n","import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate(function (source, subscriber) {\n        var innerSubscriber = null;\n        var index = 0;\n        var isComplete = false;\n        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            var innerIndex = 0;\n            var outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = createOperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, function () {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n//# sourceMappingURL=switchMap.js.map","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","const DEFAULT_TEXT_FORMAT = \"@@@\";\nexport {\n  DEFAULT_TEXT_FORMAT\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","SelectionMoveType2","InterceptCellContentPriority2","E","OperatorType2","$a6ab01cd18fda354$export$92a0623308d4909f","$a6ab01cd18fda354$export$c93d00f3ceba73b5","$a6ab01cd18fda354$export$cfd9b1f2e3fa6690","$a6ab01cd18fda354$export$35a9432a9b2d0ac0","$a6ab01cd18fda354$export$68bffb1b2e2dd0aa","$a6ab01cd18fda354$export$80833ae4acf64dfd","$a6ab01cd18fda354$export$8414704275a3cbbf","$a6ab01cd18fda354$export$ce2b970bc67fd9bc","$a6ab01cd18fda354$export$560d2d45d438b4e4","$a6ab01cd18fda354$export$2f4ff18eff30d407","$a6ab01cd18fda354$export$ab26cf116e0b60e6","$a6ab01cd18fda354$export$863f42bb4d58d9e4","$a6ab01cd18fda354$export$759ebfd45fe6d2e7","$a6ab01cd18fda354$export$7172ac1f96d9c125","$a6ab01cd18fda354$export$f14a5300764a7508","$a6ab01cd18fda354$export$8c73367803b79193","$a6ab01cd18fda354$export$5535d7f795e5bded","$a6ab01cd18fda354$export$121f25ca6629b386","$a6ab01cd18fda354$export$f5ec0ae35ff550d6","$a6ab01cd18fda354$export$15b225d040510155","$a6ab01cd18fda354$export$9fe459fc1a6ecb2d","$a6ab01cd18fda354$export$f2ae5969eaf8e0d4","$a6ab01cd18fda354$export$99c774ff550a0c6f","$a6ab01cd18fda354$export$e15f5fa13f6603f9","$a6ab01cd18fda354$export$d262ae8015daf961","$a6ab01cd18fda354$export$d6cc45b9b04ea7df","$a6ab01cd18fda354$export$e08f9f7e26e9aff5","$a6ab01cd18fda354$export$6d3ee8ffacf894af","$a6ab01cd18fda354$export$31f289fd4edee7cf","$a6ab01cd18fda354$export$dcca5189dd6ecd0d","$a6ab01cd18fda354$export$697f71110b473051","$a6ab01cd18fda354$export$62237981a6ddf9bf","$a6ab01cd18fda354$export$4c018ba9f520a234","$a6ab01cd18fda354$export$bfa2be4307a4639","$a6ab01cd18fda354$export$b0be44a318a01991","$a6ab01cd18fda354$export$eede24696cb63f83","$a6ab01cd18fda354$export$2fc68d49285b9fd8","$a6ab01cd18fda354$export$fbfad14902d4c5bc","$a6ab01cd18fda354$export$2994e7444a54b0e0","$a6ab01cd18fda354$export$85c23d61fb055e0b","$a6ab01cd18fda354$export$a0d4889d2ebb3dda","$a6ab01cd18fda354$export$d9c4797b23318374","$a6ab01cd18fda354$export$e954801e3efd9751","$a6ab01cd18fda354$export$f9b2f3564b55cfea","$a6ab01cd18fda354$export$1d2b8eef79a2c4b3","$a6ab01cd18fda354$export$fc69a7d19430eba1","$a6ab01cd18fda354$export$6598f0c4b2045039","$a6ab01cd18fda354$export$59ee3b0f12f751e0","$a6ab01cd18fda354$export$d9e9375ef577608a","$a6ab01cd18fda354$export$e4dfc7ee612de8ae","$a6ab01cd18fda354$export$5f9719a2213742db","$a6ab01cd18fda354$export$633ee836a7adfb56","$a6ab01cd18fda354$export$71b84bcd22831dcf","$a6ab01cd18fda354$export$3e56ea536ebb655d","$a6ab01cd18fda354$export$695df81ccb7da4eb","$a6ab01cd18fda354$export$40e354a17cc79f7f","$a6ab01cd18fda354$export$d3997a5569b0810f","$a6ab01cd18fda354$export$823dff2590c7c5ff","$a6ab01cd18fda354$export$2e1cbe0a40f11cd4","$a6ab01cd18fda354$export$9642f6b705de590b","$a6ab01cd18fda354$export$1b784c21f081e76a","$a6ab01cd18fda354$export$41564dd5272a2ef3","$a6ab01cd18fda354$export$732636db5bcc0e5f","$a6ab01cd18fda354$export$59824d5e29c20d3b","$a6ab01cd18fda354$export$3681714e8ba8df82","$a6ab01cd18fda354$export$9faff810cbea30da","$a6ab01cd18fda354$export$e8353cee7bda512a","$a6ab01cd18fda354$export$7ddbe0547809d4f2","$a6ab01cd18fda354$export$3c7a525148882f97","$a6ab01cd18fda354$export$c4bd043fecdc01b8","$a6ab01cd18fda354$export$63ddef9080d565c8","$a6ab01cd18fda354$export$b98040a300ab6f6e","$a6ab01cd18fda354$export$a28b199505e3f35b","$a6ab01cd18fda354$export$5effa9283a7d9d05","$a6ab01cd18fda354$export$d6b85d28467bc6ff","$a6ab01cd18fda354$export$177b3716bfce6b2d","$a6ab01cd18fda354$export$6fc693400eb160ca","$a6ab01cd18fda354$export$28cf35492035648a","$a6ab01cd18fda354$export$2cd10fd9284040fa","$a6ab01cd18fda354$export$328feb80d2f892b2","$a6ab01cd18fda354$export$9bbe8f9ee2bc5646","$a6ab01cd18fda354$export$d0aeb9f05b4c1c1b","$a6ab01cd18fda354$export$3717d01cc8329f85","$a6ab01cd18fda354$export$48d954126b6d7141","$a6ab01cd18fda354$export$87ae154ca64a9764","$a6ab01cd18fda354$export$7257073ee36b52d2","$a6ab01cd18fda354$export$e2c06a117868669c","$a6ab01cd18fda354$export$c9b3ccfe26533e7d","$a6ab01cd18fda354$export$588522b1d30ed11e","$a6ab01cd18fda354$export$8c690f2688578a18","$a6ab01cd18fda354$export$5322fc24b9ed099c","$a6ab01cd18fda354$export$53938c3f10334ebe","$a6ab01cd18fda354$export$5d48dadd73d65542","$a6ab01cd18fda354$export$cd9a5b2737870ea6","$a6ab01cd18fda354$export$3c29e82821fa0859","$a6ab01cd18fda354$export$cd6eb72fd660fbe5","$a6ab01cd18fda354$export$f9d8ad03a7b6f57d","$a6ab01cd18fda354$export$43c65aeb5025fc3d","$a6ab01cd18fda354$export$9cffecb7e319b589","$a6ab01cd18fda354$export$fcd4779b7d44992e","$a6ab01cd18fda354$export$62cc81ebc1adf0c0","$a6ab01cd18fda354$export$d73220315f6006b0","$a6ab01cd18fda354$export$b47ba15c2325965","$a6ab01cd18fda354$export$ccba6435a44dd342","$a6ab01cd18fda354$export$6c990a7fddcbc14","$a6ab01cd18fda354$export$c56b7ba3eac73a9a","$a6ab01cd18fda354$export$505a7a28d0b2a05f","$a6ab01cd18fda354$export$b9eaa6f3442e5c9","$a6ab01cd18fda354$export$ac505b0e9caa44ae","$a6ab01cd18fda354$export$be9c36d6210442d6","$a6ab01cd18fda354$export$d38e4b7aa167ef86","$a6ab01cd18fda354$export$e7dec73a8fd68842","$a6ab01cd18fda354$export$4da426d8a922db92","$a6ab01cd18fda354$export$6960e50bd58ae80b","$a6ab01cd18fda354$export$f72721d432fc9567","$a6ab01cd18fda354$export$501905adef850859","$a6ab01cd18fda354$export$142e5a7a79066467","$a6ab01cd18fda354$export$7067bfb95d30a5c3","$a6ab01cd18fda354$export$1cd66c761d533521","$a6ab01cd18fda354$export$9b7975fb84f597d5","$a6ab01cd18fda354$export$b76d76b975841359","$a6ab01cd18fda354$export$8d71c14db4ec832e","$a6ab01cd18fda354$export$762d92ef19bd482a","$a6ab01cd18fda354$export$e4b39c021c550afa","$a6ab01cd18fda354$export$a7f050925a81e492","$a6ab01cd18fda354$export$cd24df42925f927","$a6ab01cd18fda354$export$32c91805fe2ce11a","$a6ab01cd18fda354$export$d7b494254bbf476f","$a6ab01cd18fda354$export$784e15c60e3adf6c","$a6ab01cd18fda354$export$92a6672d4df31cfb","$a6ab01cd18fda354$export$697e2e139da9fb66","$a6ab01cd18fda354$export$64cc91dade2db478","$a6ab01cd18fda354$export$dabde38fe174e661","$a6ab01cd18fda354$export$5ff56b48d076a99","$a6ab01cd18fda354$export$63533e2fd9408d74","$a6ab01cd18fda354$export$6b26f3da37fc66b","$a6ab01cd18fda354$export$c3197ad17fb285b8","$a6ab01cd18fda354$export$10465aad21b068c6","$a6ab01cd18fda354$export$2c6679f6ed39715b","$a6ab01cd18fda354$export$c64e537472e00620","$a6ab01cd18fda354$export$ad722be3eb6dacf","$a6ab01cd18fda354$export$61dcf9a1529f32fa","$a6ab01cd18fda354$export$e90d872a06962b4e","$a6ab01cd18fda354$export$6ed48c4ca74c384d","$a6ab01cd18fda354$export$ee68545baad45289","$a6ab01cd18fda354$export$e82d59a730eac89c","$a6ab01cd18fda354$export$4cd4e23c2b7dde1d","$a6ab01cd18fda354$export$629d2153b207af21","$a6ab01cd18fda354$export$afd9d63d1a03ab75","$a6ab01cd18fda354$export$9372059621b24e72","$a6ab01cd18fda354$export$a1277938b074bee3","$a6ab01cd18fda354$export$40327ff0e60d0a4a","$a6ab01cd18fda354$export$b32db826e0669cf8","$a6ab01cd18fda354$export$5b8cbe97d6c75b92","$a6ab01cd18fda354$export$dfaa28bb509787c1","$a6ab01cd18fda354$export$a2a2a04437dd1e57","$a6ab01cd18fda354$export$f2ad0bf0273e0229","$a6ab01cd18fda354$export$b457d93c336efe6a","$a6ab01cd18fda354$export$bb4004004a1431ff","$a6ab01cd18fda354$export$2edc47174b2de509","$a6ab01cd18fda354$export$154632b354a236eb","$a6ab01cd18fda354$export$e583b3721377d199","$a6ab01cd18fda354$export$65ebcfb8bac77328","$a6ab01cd18fda354$export$19a34a018dc3d795","$a6ab01cd18fda354$export$dfcf24e5214872cf","$a6ab01cd18fda354$export$c4fbbd897b45946d","$a6ab01cd18fda354$export$ecdf3f3bda4dc820","$a6ab01cd18fda354$export$fb42dcd01ff39140","$a6ab01cd18fda354$export$18cf6b538c63f0ed","$a6ab01cd18fda354$export$601c242ecf0fd772","$a6ab01cd18fda354$export$34feed632626a125","$a6ab01cd18fda354$export$a42813264eacd066","$a6ab01cd18fda354$export$f0b5efa122f7b5ec","$a6ab01cd18fda354$export$1611d9e0bc977436","$a6ab01cd18fda354$export$fce8207daaebcfe4","$a6ab01cd18fda354$export$6e576466ae7d2afb","$a6ab01cd18fda354$export$9580c9267dc89e66","$a6ab01cd18fda354$export$6d802dc783a8fe04","$a6ab01cd18fda354$export$3d1dddb133eee9fb","$a6ab01cd18fda354$export$e97bd40cc606f733","$a6ab01cd18fda354$export$9c9d0dbacf6b589e","$a6ab01cd18fda354$export$7dd3f8a552d30610","$a6ab01cd18fda354$export$905d574af45cae88","$a6ab01cd18fda354$export$bef537c190ad4a94","$a6ab01cd18fda354$export$634975f236ef0829","$a6ab01cd18fda354$export$1d76bc5eb946e943","$a6ab01cd18fda354$export$d78cad71acf986b9","$a6ab01cd18fda354$export$ff6acb0e8081cbe3","$a6ab01cd18fda354$export$6898a18180f3219","$a6ab01cd18fda354$export$e6fdaa2df602be0f","$a6ab01cd18fda354$export$9b1e05f88a2cd27b","$a6ab01cd18fda354$export$30f0a6c2c92d64f5","$a6ab01cd18fda354$export$b7a28ca33510185e","$a6ab01cd18fda354$export$1a55b7f08fc0eb8c","$a6ab01cd18fda354$export$f9f44c52c4a3c2aa","$a6ab01cd18fda354$export$fa3823819a78529f","$a6ab01cd18fda354$export$6e0275a6f772a899","$a6ab01cd18fda354$export$3df564390c983961","$a6ab01cd18fda354$export$524a51095d4bc057","$a6ab01cd18fda354$export$195ef1b6b0ee9b53","$a6ab01cd18fda354$export$8513f6f00a6f17","$a6ab01cd18fda354$export$6308c73384741c53","$a6ab01cd18fda354$export$8c43ba6ae41f68ca","$a6ab01cd18fda354$export$43ee41af5024abda","$a6ab01cd18fda354$export$d964723ec7a30fd7","$a6ab01cd18fda354$export$b5b2c55d7bbb1a20","$a6ab01cd18fda354$var$_a19","$a6ab01cd18fda354$var$_a","$7yNYd","$86b1c","$k2g5B","$5LPkb","$hciHF","$i54iF","$3yupB","$c3hg1","$1mjSk","$23cfA","$2jrJe","$2BOVU","$lMvMU","$a6ab01cd18fda354$var$__defProp","$a6ab01cd18fda354$var$__defNormalProp","obj","key","value","writable","$a6ab01cd18fda354$var$__name","target","$a6ab01cd18fda354$var$__publicField","$a6ab01cd18fda354$var$__defProp$i","$a6ab01cd18fda354$var$__getOwnPropDesc$i","getOwnPropertyDescriptor","$a6ab01cd18fda354$var$__decorateClass$i","decorators","kind","decorator","result","i","length","$a6ab01cd18fda354$var$__decorateParam$f","index","MOVE_START","MOVING","MOVE_END","RxDisposable","constructor","_instanceSrv","Map","_init","_currentSelectionPos","workbook","getCurrentUnitForType","UniverInstanceType","UNIVER_SHEET","worksheet","getActiveSheet","unitId","getUnitId","sheetId","getSheetId","currentSelectionParam","c$","getCurrentTypeOfUnit$","pipe","shareReplay","takeUntil","dispose$","selectionMoveStart$","switchMap","_ensureWorkbookSelection","of","selectionMoving$","selectionMoveEnd$","getTypeOfUnitDisposed$","subscribe","_removeWorkbookSelection","clear","_workbookSelections","forEach","wbSelection","getCurrentSelections","_getCurrentSelections","getCurrentLastSelection","selectionData","addSelections","unitIdOrSelections","worksheetId","selectionDatas","current","Error","setSelections","worksheetIdOrType","type","clearCurrentSelections","splice","isOverlapping","selectionDataList","some","range","range2","index2","startRow","endRow","startColumn","endColumn","getSelectionOfWorksheet","getWorkbookSelections","getUnit","$a6ab01cd18fda354$export$fa5546bc990001f7","delete","IUniverInstanceService","$a6ab01cd18fda354$var$_WorkbookSelections","Disposable","_workbook","Subject","_selectionMoveStart$","asObservable","_selectionMoving$","BehaviorSubject","_selectionMoveEnd$","_beforeSelectionMoveEnd$","dispose","complete","_worksheetSelections","_emitOnEnd","selections","_ensureSheetSelection","push","next","has","worksheetSelection","CELL_CONTENT","createInterceptorKey","ROW_FILTERED","$a6ab01cd18fda354$var$_a2","DATA_VALIDATION","NUMFMT","$a6ab01cd18fda354$var$__defProp$h","$a6ab01cd18fda354$var$__getOwnPropDesc$h","$a6ab01cd18fda354$var$__decorateClass$h","$a6ab01cd18fda354$var$__decorateParam$e","_univerInstanceService","disposeWithMe","getTypeOfUnitAdded$","_interceptWorkbook","_disposeWorkbookInterceptor","intercept","priority","handler","context","rawData","getCellRaw","row","col","_workbookDisposables","disposable","_worksheetDisposables","interceptCommand","interceptor","_commandInterceptors","includes","sort","a","b","_a20","_b","toDisposable","remove","interceptBeforeCommand","_beforeCommandInterceptor","beforeCommandExecute","info","Promise","all","map","performCheck","every","perform","interceptRanges","_rangeInterceptors","onCommandExecute","infos","getMutations","preUndos","flat","undos","preRedos","redos","generateMutationsByRanges","name","_interceptorsByName","interceptors","fetchThroughInterceptors","composeInterceptors","disposables","DisposableCollection","sheetInterceptorService","interceptViewModel","subUnitId","__interceptViewModel","viewModel","sheetDisposables","$a6ab01cd18fda354$var$getWorksheetDisposableID","add","registerCellContentInterceptor","getCell","registerRowFilteredInterceptor","getRowFiltered","getSheets","sheetCreated$","_disposeSheetInterceptor","sheetDisposed$","disposableId","$a6ab01cd18fda354$var$handleStyle","styles","oldVal","newVal","oldStyle","getStyleByCell","merge2","$a6ab01cd18fda354$var$mergeStyle","Tools","removeNull","isEmptyObject","setValue","newValueStream","p","body","dataStream","$a6ab01cd18fda354$var$mergeRichTextStyle","$a6ab01cd18fda354$var$transformStyle","newStyle","keys","backupStyle","k","$a6ab01cd18fda354$var$transformBorders","oldBorders","newBorders","isRichText","deepClone","assign","ul","cl","ol","st","$a6ab01cd18fda354$var$skipParagraphs","paragraphs","offset","startIndex","Array","isArray","textRuns","newTextRuns","textRun","ed","ts","tr","merge22","endIndex","endsWith","normalizeTextRuns","$a6ab01cd18fda354$var$getCellType","t","CellValueType","FORCE_STRING","$a6ab01cd18fda354$var$isTextFormat","isRealNum","NUMBER","isBooleanString","BOOLEAN","$a6ab01cd18fda354$var$hasNumberFormat","STRING","$a6ab01cd18fda354$var$checkCellValueTypeByValue","$a6ab01cd18fda354$var$checkCellValueType","style","pattern","DEFAULT_TEXT_FORMAT","$a6ab01cd18fda354$var$getCellTypeByPattern","cell","$a6ab01cd18fda354$var$getCellValue","Number","$a6ab01cd18fda354$var$extractBooleanValue","toUpperCase","isSafeNumeric","$a6ab01cd18fda354$var$setNull","f","si","custom","accessor","params","cellValue","getUniverSheetInstance","getSheetBySheetId","cellMatrix","getCellMatrix","getStyles","undoData","ObjectMatrix","forValue","getValue","options","getMatrix","id","CommandType","MUTATION","$a6ab01cd18fda354$var$groupByKey","arr","blankKey","reduce","console","warn","$a6ab01cd18fda354$var$createUniqueKey","initValue","_initValue","$a6ab01cd18fda354$export$125e36a5e3690dd2","j","clone","$a6ab01cd18fda354$var$generateNullCellStyle","ranges","COMMAND","univerInstanceService","commandService","ICommandService","selectionManagerService","undoRedoService","IUndoRedoService","sequenceExecuteList","sequenceExecuteUndoList","clearMutationParams","undoClearMutationParams","intercepted","unshift","sequenceExecute","pushUndoRedo","unitID","undoMutations","redoMutations","$a6ab01cd18fda354$export$d74793cdb77aea60","_accessor","sheet","subUnitName","addWorksheet","$a6ab01cd18fda354$export$59d57457bf2b83c0","$a6ab01cd18fda354$export$2d3c286eac9e190d","$a6ab01cd18fda354$export$99c49b2d1c0ac200","getConfig","sheetOrder","findIndex","removeSheet","localeService","LocaleService","config","$a6ab01cd18fda354$var$getCopyUniqueSheetName","generateRandomId","insertSheetMutationParams","getSheetIndex","removeSheetMutationParams","syncExecuteCommand","output","count","checkSheetName","from","to","fromWorksheet","toWorksheet","fromCellMatrix","toCellMatrix","$a6ab01cd18fda354$var$__defProp$g","$a6ab01cd18fda354$var$__getOwnPropDesc$g","$a6ab01cd18fda354$var$__decorateClass$g","$a6ab01cd18fda354$var$__decorateParam$d","createIdentifier","$a6ab01cd18fda354$var$_a3","$","_getAliveWorkbooks$","ss","merge","aliveWorkbooks","getAllUnitsForType","workbooks$","filter","unit","workbooks","w","disabledNormalSelections","IContextService","getContextValue","OPERATION","startRange","shouldRecursive","coveredMergedCells","getMatrixWithMergedCells","selectionToArray","exceededMergedCells","colSpan","rowSpan","mergedCellRange","Rectangle","contains","union","destRange","row2","col2","actualRow","actualColumn","isMerged","isMergedMainCell","rangeType","RANGE_TYPE","NORMAL","rowCount","columnCount","isNaN","mergedRange","getMergedCell","$a6ab01cd18fda354$export$487f185ae1bde256","primary","selection","equals","$a6ab01cd18fda354$var$createRangeIteratorWithSkipFilteredRows","forOperableEach","operator","iterate","r","c","isRow","styleRowOrColumn","column","$a6ab01cd18fda354$var$MoveRangeCommandId","errorService","ErrorService","moveRangeMutations","$a6ab01cd18fda354$export$f32df911e9cdbdd0","fromRange","toRange","emit","interceptorCommands","ignoreMerge","fromSubUnitId","toSubUnitId","alignedRangeWithToRange","fromCellValue","newFromCellValue","Range","foreach","toCellValue","newToCellValue","cellRange","cellToRange","relativeRange","getRelativeRange","getPositionRange","doMoveRangeMutation","undoMoveRangeMutation","$a6ab01cd18fda354$var$I","UNIVER_UNKNOWN","UNIVER_DOC","UNIVER_SLIDE","UNIVER_PROJECT","UNRECOGNIZED","$a6ab01cd18fda354$var$P","View","Edit","ManageCollaborator","Print","Duplicate","Comment","Copy","Share","Export","MoveWorksheet","DeleteWorksheet","HideWorksheet","RenameWorksheet","CreateWorksheet","SetWorksheetStyle","EditWorksheetCell","InsertHyperlink","Sort","Filter","PivotTable","FloatImg","History","RwHgtClWdt","ViemRwHgtClWdt","ViewFilter","MoveSheet","DeleteSheet","HideSheet","CopySheet","RenameSheet","CreateSheet","SelectProtectedCells","SelectUnProtectedCells","SetCellStyle","SetCellValue","SetRowStyle","SetColumnStyle","InsertRow","InsertColumn","DeleteRow","DeleteColumn","EditExtraObject","Delete","RecoverHistory","ViewHistory","Unkonwn","Workbook","Worksheet","SelectRange","Document","Slide","$a6ab01cd18fda354$var$_WorksheetCopyPermission","PermissionStatus","INIT","$a6ab01cd18fda354$var$_WorksheetSetCellStylePermission","$a6ab01cd18fda354$var$_WorksheetSetCellValuePermission","$a6ab01cd18fda354$var$_WorksheetViewPermission","$a6ab01cd18fda354$var$_WorksheetSetRowStylePermission","$a6ab01cd18fda354$var$_WorksheetSetColumnStylePermission","$a6ab01cd18fda354$var$_WorksheetInsertRowPermission","$a6ab01cd18fda354$var$_WorksheetInsertColumnPermission","$a6ab01cd18fda354$var$_WorksheetInsertHyperlinkPermission","$a6ab01cd18fda354$var$_WorksheetDeleteRowPermission","$a6ab01cd18fda354$var$_WorksheetDeleteColumnPermission","$a6ab01cd18fda354$var$_WorksheetSortPermission","$a6ab01cd18fda354$var$_WorksheetFilterPermission","$a6ab01cd18fda354$var$_WorksheetPivotTablePermission","$a6ab01cd18fda354$var$_WorksheetEditExtraObjectPermission","$a6ab01cd18fda354$var$_WorksheetEditPermission","$a6ab01cd18fda354$var$_WorkbookCommentPermission","$a6ab01cd18fda354$var$_WorkbookEditablePermission","$a6ab01cd18fda354$var$_WorkbookDuplicatePermission","$a6ab01cd18fda354$var$_WorkbookPrintPermission","$a6ab01cd18fda354$var$_WorkbookExportPermission","$a6ab01cd18fda354$var$_WorkbookMoveSheetPermission","$a6ab01cd18fda354$var$_WorkbookDeleteSheetPermission","$a6ab01cd18fda354$var$_WorkbookHideSheetPermission","$a6ab01cd18fda354$var$_WorkbookRenameSheetPermission","$a6ab01cd18fda354$var$_WorkbookCreateSheetPermission","$a6ab01cd18fda354$var$_WorkbookViewPermission","$a6ab01cd18fda354$var$_WorkbookSharePermission","$a6ab01cd18fda354$var$_WorkbookCopyPermission","$a6ab01cd18fda354$var$_WorkbookCopySheetPermission","$a6ab01cd18fda354$var$_WorkbookManageCollaboratorPermission","$a6ab01cd18fda354$var$_WorkbookViewHistoryPermission","$a6ab01cd18fda354$var$_WorkbookRecoverHistoryPermission","$a6ab01cd18fda354$var$_RangeProtectionPermissionEditPoint","permissionId","$a6ab01cd18fda354$var$_RangeProtectionPermissionViewPoint","realCellValue","permissionService","IPermissionService","currentSelections","getPermissionPoint","isICellData","setRangeValuesMutationParams","undoSetRangeValuesMutationParams","setValueMutationResult","$a6ab01cd18fda354$export$674c6acc9012e72b","redo","undo","shiftDimension","instanceService","dataRange","getDataRange","moveFromRange","moveToRange","Dimension","COLUMNS","Math","min","rowData","getRow","max","getArrayLength","shift","entries","interceptorUndos","interceptorRedos","$a6ab01cd18fda354$export$c489da2cdb7bdf82","ROWS","lastEndRow","lastEndColumn","rows","realDeleteValue","columns","$a6ab01cd18fda354$var$DeleteRangeMoveLeftCommandId","_c","deleteRangeMutationParams","sheetInterceptor","removeRangeRedo","removeRangeUndo","reverse","$a6ab01cd18fda354$var$DeleteRangeMoveUpCommandId","$a6ab01cd18fda354$export$592ddab41edb4587","rowInfo","universheet","rowWrapper","getRowManager","getRowData","defaultRowInfo","h","defaultRowHeight","hd","rowIndex","insertMatrixArray","setRowCount","getRowCount","insertRows","$a6ab01cd18fda354$export$87756881d16abcd","manager","getColumnManager","colInfo","columnWrapper","getColumnData","colIndex","colCount","defaultColWidth","defaultColumnWidth","defaultColInfo","setColumnCount","getColumnCount","insertColumns","$a6ab01cd18fda354$var$RemoveRowsUndoMutationFactory","slice","sliceMatrixArray","_rowInfo","concatMatrixArray","rowPrimitive","spliceArray","removeRows","$a6ab01cd18fda354$var$RemoveColMutationFactory","_colInfo","colPrimitive","removeColumns","insertRowCount","sliceMaxRow","getSlice","anchorRow","height","getRowHeight","insertRowParams","fill","BooleanNumber","FALSE","undoRowInsertionParams","insertRangeRedo","insertRangeUndo","$a6ab01cd18fda354$var$InsertRangeMoveRightCommandId","insertColCount","sliceMaxCol","anchorCol","width","getColumnWidth","insertColParams","undoColInsertionParams","$a6ab01cd18fda354$var$InsertRowCommandId","_d","direction","Direction","UP","executeCommand","DOWN","ROW","$a6ab01cd18fda354$var$InsertColCommandId","LEFT","Boolean","COLUMN","RIGHT","sheetConfig","mergeWorksheetSnapshotWithDefault","generateNewSheetName","$a6ab01cd18fda354$export$2049e3375a7bc621","sourceRange","targetRange","movingBackward","univerSheet","fromRow","toRow","moveMatrixArray","moveRows","$a6ab01cd18fda354$export$32a98797666e66a0","fromCol","toCol","moveColumns","$a6ab01cd18fda354$var$rowAcrossMergedCell","getMergeData","mergedCell","$a6ab01cd18fda354$var$columnAcrossMergedCell","$a6ab01cd18fda354$var$MoveRowsCommandId","$a6ab01cd18fda354$var$covertRangeToSelection","filteredSelections","rangeToMove","beforePrimary","alignedRange","destinationRange","moveRowsParams","undoMoveRowsParams","moveBackward","destSelection","setSelectionsParam","$a6ab01cd18fda354$var$MoveColsCommandId","moveColsParams","undoMoveColsParams","$a6ab01cd18fda354$var$RemoveRowCommandId","totalRange","getMaxColumns","filterOutRowsInRemove","starts","ends","removeRowsParams","undoSetRangeValuesParams","removedRows","undoRemoveRowsParams","$a6ab01cd18fda354$var$RemoveColCommandId","removeColParams","getMaxRows","undoRemoveColParams","removedCols","RemoveSheetMutationParams","getName","InsertSheetMutationParams","mergeConfigData","mergeData","mergeAppendData","getSpanModel","rebuild","mergeRemoveData","configMerge","removeMerge","intersects","intersectsMerges","undoredoMutationParams","nowSelections","undoSelections","redoSelections","redoLastSelection","getSetRangeValuesParams","$a6ab01cd18fda354$var$getSetRangeStyleParamsForRemoveMerge","redoSetRangeValueParams","redoParams","undoSetRangeValueParams","undoParams","styleRedoMatrix","styleUndoMatrix","$a6ab01cd18fda354$var$_BorderStyleManagerService","BorderType","ALL","color","BorderStyleTypes","THIN","activeBorderType","_borderInfo","_borderInfo$","setType","setActiveBorderType","refresh","setColor","setStyle","status","getBorderInfo","$a6ab01cd18fda354$var$forEach","action","borderManager","$a6ab01cd18fda354$export$a8e6e4eb9efe7ab3","$a6ab01cd18fda354$export$4be8c70e09ec7414","$a6ab01cd18fda354$export$217a1eef55f6af13","borderStyleManagerService","top","TOP","OUTSIDE","left","bottom","BOTTOM","right","vertical","VERTICAL","INSIDE","horizontal","HORIZONTAL","tl_br","indexOf","tl_bc","tl_mr","bl_tr","ml_tr","bc_tr","topRangeOut","leftRangeOut","bottomRangeOut","rightRangeOut","topRange","leftRange","bottomRange","rightRange","mr","border","rgb","setBorderStyle","defaultStyle","reserve","_a21","rectangle","bdStyle","style2","bd","l","_e","_f","_g","_h","getData","$a6ab01cd18fda354$var$SetColHiddenUndoMutationFactory","getColumnOrCreate","TRUE","$a6ab01cd18fda354$var$SetColVisibleUndoMutationFactory","redoMutationParams","setSelectionOperationParams","reveal","undoMutationParams","undoSetSelectionsOperationParams","$a6ab01cd18fda354$var$getSelectionsAfterHiding$1","interceptedResult","hiddenRanges","getHiddenCols","$a6ab01cd18fda354$var$divideRangesByHiddenCols","hiddenCols","divided","hiddenColsInSelection","hiddenRange","$a6ab01cd18fda354$var$mergeSelections$1","merged","freeze","ySplit","xSplit","$a6ab01cd18fda354$export$9ef6401fd7f94002","$a6ab01cd18fda354$var$SetRowVisibleUndoMutationFactory","getRowOrCreate","$a6ab01cd18fda354$var$SetRowHiddenUndoMutationFactory","$a6ab01cd18fda354$var$getSelectionsAfterHiding","getHiddenRows","$a6ab01cd18fda354$var$divideRangesByHiddenRows","endCol","hiddenRows","hiddenRowsInThisRange","$a6ab01cd18fda354$var$mergeSelections","iterator","styleObj","setRangeValuesResult","setStyleParams","getRange","getFontWeight","FontWeight","BOLD","currentlyItalic","getFontStyle","FontItalic","ITALIC","currentlyUnderline","getUnderline","currentlyStrokeThrough","getStrikeThrough","$a6ab01cd18fda354$var$SetTabColorUndoMutationFactory","oldTabColor","tabColor","setTabColorMutationParams","getWorksheets","setActiveSheet","resolve","setTimeout","$a6ab01cd18fda354$export$503c2e26f8f4a02a","colWidth","deltaX","destColumnWidth","isAllSheetRange","colSelections","_","setColWidthResult","$a6ab01cd18fda354$var$SetWorksheetHideMutationFactory","hidden","isSheetHidden","$a6ab01cd18fda354$var$SetWorksheetNameMutationFactory","$a6ab01cd18fda354$var$SetWorksheetOrderUndoMutationFactory","toOrder","fromOrder","setWorksheetOrderMutationParams","order","$a6ab01cd18fda354$var$SetWorksheetRowHeightMutationFactory","rowHeight","$a6ab01cd18fda354$var$SetWorksheetRowIsAutoHeightMutationFactory","autoHeightHash","ia","autoHeightInfo","rowsAutoHeightInfo","results","ah","autoHeight","rowManager","curRow","deltaY","destRowHeight","rowSelections","redoSetIsAutoHeightParams","undoSetIsAutoHeightParams","sheetInterceptorResult","setIsAutoHeightResult","activeResult","$a6ab01cd18fda354$export$d5d7a51306afc4cd","matrix","theLastRowValue","$a6ab01cd18fda354$export$b9565e21fc0540ee","_matrix","$a6ab01cd18fda354$var$findMaximalRectangle","topMatrix","res","area","checkArea","lineArea","cols","_range","$a6ab01cd18fda354$var$filterLeftMatrix","nextRow","$a6ab01cd18fda354$export$5cfa489dfdaba902","resultList","subtract","runOnLifecycle","LifecycleStages","Ready","option","numfmtService","values","cells","removeCells","oldNumfmt","refMap","setValues","deleteValues","group","getKey","groupItem","item","$a6ab01cd18fda354$export$18df70d41ccf159a","SetDefinedNameMutation","RemoveDefinedNameMutation","newDefinedName","oldDefinedName","$a6ab01cd18fda354$export$f937a14ed9d9ffd1","setName","$a6ab01cd18fda354$export$f15c7c16704985d4","interceptedCommands","$a6ab01cd18fda354$var$_a4","$a6ab01cd18fda354$var$__defProp$f","$a6ab01cd18fda354$var$__getOwnPropDesc$f","$a6ab01cd18fda354$var$__decorateClass$f","_ruleChange","_ruleRefresh","_resetOrder","_worksheetRuleInitStateChange","changeRuleInitState","state","getSheetRuleInitState","addRule","rule","_ensureSubUnitMap","deleteRule","_model","setRule","oldRule","getRule","toObject","subUnitMap","size","fromObject","subUnitList","deleteUnitModel","ruleRefresh","resetOrder","random","getTargetByPermissionId","OnLifecycle","Starting","$a6ab01cd18fda354$var$_a5","$a6ab01cd18fda354$var$__defProp$e","$a6ab01cd18fda354$var$__getOwnPropDesc$e","$a6ab01cd18fda354$var$__decorateClass$e","_rangeRuleInitStateChange","getRangeRuleInitState","_ensureRuleMap","getSubunitRuleList","ruleMap","submitMap","subUnitKeys","subunitId","subUnitObj","map2","result2","cur","createRuleId","$a6ab01cd18fda354$var$_a6","$a6ab01cd18fda354$var$__defProp$d","$a6ab01cd18fda354$var$__getOwnPropDesc$d","$a6ab01cd18fda354$var$__decorateClass$d","_pointChange","$a6ab01cd18fda354$var$__defProp$c","$a6ab01cd18fda354$var$__getOwnPropDesc$c","$a6ab01cd18fda354$var$__decorateClass$c","$a6ab01cd18fda354$var$__decorateParam$c","$a6ab01cd18fda354$export$f9f5265b129298d6","$a6ab01cd18fda354$var$_a7","_permissionService","_injector","_worksheetProtectionRuleModel","_worksheetProtectionPointRuleModel","_resourceManagerService","_rangeProtectionRuleModel","_initRuleChange","_initRuleSnapshot","_initPointSnapshot","handleWorkbook","handleWorksheet","F","instance","addPermissionPoint","deletePermissionPoint","ruleChange$","updatePermissionPoint","toJson","JSON","stringify","parseJson","json","parse","registerPluginResource","pluginName","businesses","onLoad","resources","onUnLoad","Inject","Injector","IResourceManagerService","param","selectionProtectionRuleModel","rules","ruleIds","deleteParams","selectionProtectionModel","description","unitType","rule2","redoMutationParam","ruleId","$a6ab01cd18fda354$export$9681e4336e20689b","$a6ab01cd18fda354$export$196d4041ffcb71ca","newOrder","cellDataMatrix","hasOwnProperty","targetRow","cloneCell","worksheetCellDataMatrix","cellData","$a6ab01cd18fda354$var$ReorderRangeCommandId","$a6ab01cd18fda354$export$c83d426b9c3b0bcf","reorderMutation","undoReorderMutation","$a6ab01cd18fda354$var$ONLY_REGISTER_FORMULA_RELATED_MUTATIONS_KEY","$a6ab01cd18fda354$var$_a8","$a6ab01cd18fda354$var$__defProp$b","$a6ab01cd18fda354$var$__getOwnPropDesc$b","$a6ab01cd18fda354$var$__decorateClass$b","$a6ab01cd18fda354$var$__decorateParam$b","$a6ab01cd18fda354$var$BasicWorksheetController","_commandService","_configService","_dataSyncPrimaryController","mutation","registerCommand","registerSyncingMutations","command","setConfig","IConfigService","Optional","DataSyncPrimaryController","$a6ab01cd18fda354$var$_a9","$a6ab01cd18fda354$var$__defProp$a","$a6ab01cd18fda354$var$__getOwnPropDesc$a","$a6ab01cd18fda354$var$__decorateClass$a","$a6ab01cd18fda354$var$__decorateParam$a","$a6ab01cd18fda354$var$CalculateResultApplyController","_initialize","onCommandExecuted","SetFormulaCalculationResultMutation","unitData","unitIds","redoMutationsInfo","sheetData","_getMergedCellData","m","onlyLocal","oldCellDataMatrix","oldCell","newCell","handleNumfmtInCell","MoveRangeCommandId","InsertRowCommandId","InsertColCommandId","RemoveColCommandId","RemoveRowCommandId","DeleteRangeMoveLeftCommandId","DeleteRangeMoveUpCommandId","InsertRangeMoveDownCommandId","InsertRangeMoveRightCommandId","MoveColsCommandId","MoveRowsCommandId","ReorderRangeCommandId","$a6ab01cd18fda354$export$c18bb9d3f9b808b3","Set","HorizontalMove","VerticalMove","Unknown","$a6ab01cd18fda354$var$MAX_SAFE_INTEGER","MAX_SAFE_INTEGER","$a6ab01cd18fda354$var$handleRangeTypeInput","isColumn","$a6ab01cd18fda354$export$ebe19320acddb45b","$a6ab01cd18fda354$export$3e70ac2d62a91254","effectRange","_effectRange","_toRange","getIntersects","line1","line2","start","end","getLength","line","getRelative","origin","getAbsolute","isToLargeFrom","step","fromRangeStep","fromRangeIntersectsEffectRange","isFromRangeContainEffectRange","fromRangeIntersectsEffectRangeStep","newLine","toRangeIntersectsEffectRange","_fromRange","_targetRange","$a6ab01cd18fda354$var$handleMoveRowsCommon","queryObjectMatrix","$a6ab01cd18fda354$var$handleReorderRangeCommon","cacheMatrix","$a6ab01cd18fda354$var$handleMoveColsCommon","operators","positionRange","$a6ab01cd18fda354$var$handleMoveRangeCommon","fromMatrix","loopFromRange","columnOffset","rowOffset","loopToRange","targetCol","$a6ab01cd18fda354$export$5f8c3d0acd7decf6","_removeRange","removeRange","getRowLength","intersectedRange","$a6ab01cd18fda354$var$handleReorderRange","$a6ab01cd18fda354$export$2557155be7715fa2","_insertRange","insertRange","$a6ab01cd18fda354$var$handleBaseMoveRange","$a6ab01cd18fda354$var$handleInsertRangeMoveDownCommon","moveCount","POSITIVE_INFINITY","noMoveRanges","targetMoveRange","noMoveRange","$a6ab01cd18fda354$var$handleInsertRangeMoveRightCommon","$a6ab01cd18fda354$var$handleDeleteRangeMoveLeftCommon","targetDeleteRange","$a6ab01cd18fda354$var$handleDeleteRangeMoveUpCommon","$a6ab01cd18fda354$var$handleRemoveRowCommon","commandInfo","deps","$a6ab01cd18fda354$var$getEffectedRangesOnCommand","$a6ab01cd18fda354$var$adjustRangeOnMutation","baseRangeOperator","effectRanges","$a6ab01cd18fda354$var$getEffectedRangesOnMutation","$a6ab01cd18fda354$var$__defProp$9","$a6ab01cd18fda354$var$__getOwnPropDesc$9","$a6ab01cd18fda354$var$__decorateClass$9","$a6ab01cd18fda354$var$__decorateParam$9","$a6ab01cd18fda354$var$MERGE_REDO","$a6ab01cd18fda354$var$MERGE_UNDO","$a6ab01cd18fda354$var$MAX_ROW_COL","floor","$a6ab01cd18fda354$var$_WatchRange","_unitId","_subUnitId","_callback","_skipIntersects","onMutation","afterRange","beforeChange","$a6ab01cd18fda354$var$_a10","_sheetInterceptorService","_selectionManagerService","InterceptorManager","MERGE_REDO","MERGE_UNDO","$a6ab01cd18fda354$var$createRangeSerializer","$a6ab01cd18fda354$var$getUnitId","$a6ab01cd18fda354$var$getSubUnitId","_checkRange","colStart","$a6ab01cd18fda354$var$getSelectionRanges","currentFn","currentValue","getInterceptPoints","managerId","$a6ab01cd18fda354$var$getRefRangId","_refRangeManagerMap","callbackSet","cbList","_serializer","deserialize","realRange","callback","refRangeManagerId","rangeString","serialize","refRangeCallbackList","refRangeCallbackList2","_onRefRangeChange","list","watchRange","skipIntersects","watchRangesListener","_watchRanges","watchRange2","teardownWatching","registerToService","keyList","preValue","String","split","_index","$a6ab01cd18fda354$var$__defProp$8","$a6ab01cd18fda354$var$__getOwnPropDesc$8","$a6ab01cd18fda354$var$__decorateClass$8","$a6ab01cd18fda354$var$__decorateParam$8","$a6ab01cd18fda354$var$mutationIdByRowCol$1","$a6ab01cd18fda354$var$mutationIdArrByMove$1","rectangles","data","$a6ab01cd18fda354$var$_a11","_refRangeService","MERGE_CELL_INTERCEPTOR_CHECK","_initCommandInterceptor","_commandExecutedListener","removeMergeParams","undoRemoveMergeParams","emptyInterceptorArr","overlapRanges","refRangeHandle","_handleMoveColsCommand","_handleMoveRowsCommand","_handleInsertRowCommand","_handleInsertColCommand","_handleRemoveColCommand","_handleRemoveRowCommand","_handleMoveRangeCommand","_handleInsertRangeMoveRightCommand","_handleInsertRangeMoveDownCommand","_handleDeleteRangeMoveUpCommand","_handleDeleteRangeMoveLeftCommand","registerRefRange","workbook2","workSheet","disposableCollection","$a6ab01cd18fda354$var$getWorkbook","_handleNull","$a6ab01cd18fda354$var$getWorksheet","removeParams","addParams","sourceStart","sourceEnd","removeUndo","addUndo","fromMergeRanges","toMergeRanges","addMergeCellRanges","mergeRange","oldMergeCells","mergeCellsHasLapping","newMergeCells","_checkIsMergeCell","addMergeParams","undoAddMergeParams","removeMergeMutationParams","undoRemoveMergeMutationParams","addMergeMutationParams","maxCol","removeMergeData","addMergeData","rect","currentColumnsCount","maxRow","moveVertical","isRowMove","moveLength","targetStart","adjustedMergedCells","setMergeData","isRowOperation","isAddOperation","operationStart","operationEnd","operationCount","Steady","$a6ab01cd18fda354$var$_a12","$a6ab01cd18fda354$var$__defProp$7","$a6ab01cd18fda354$var$__getOwnPropDesc$7","$a6ab01cd18fda354$var$__decorateClass$7","$a6ab01cd18fda354$var$__decorateParam$7","$a6ab01cd18fda354$export$ad982eb150538b20","_logService","oldStyleId","newStyleId","styleId","ILogService","$a6ab01cd18fda354$var$_a13","$a6ab01cd18fda354$var$__defProp$6","$a6ab01cd18fda354$var$__getOwnPropDesc$6","$a6ab01cd18fda354$var$__decorateClass$6","$a6ab01cd18fda354$var$__decorateParam$6","$a6ab01cd18fda354$export$7f2b141f94d7608f","$a6ab01cd18fda354$var$__defProp$5","$a6ab01cd18fda354$var$__getOwnPropDesc$5","$a6ab01cd18fda354$var$__decorateClass$5","$a6ab01cd18fda354$var$__decorateParam$5","$a6ab01cd18fda354$export$dbb912bdd067f353","$a6ab01cd18fda354$var$_a14","_definedNamesService","_initSnapshot","getDefinedNameMap","removeUnitDefinedName","registerDefinedNames","IDefinedNamesService","$a6ab01cd18fda354$var$_a15","$a6ab01cd18fda354$var$__defProp$4","$a6ab01cd18fda354$var$__getOwnPropDesc$4","$a6ab01cd18fda354$var$__decorateClass$4","$a6ab01cd18fda354$var$__decorateParam$4","_selectionProtectionRuleModel","LRUMap","permissionPointUpdate$","permission","_createKey","_cache","getCellInfo","cacheValue","permissionMap","subType","$a6ab01cd18fda354$var$__defProp$3","$a6ab01cd18fda354$var$__getOwnPropDesc$3","$a6ab01cd18fda354$var$__decorateClass$3","$a6ab01cd18fda354$var$__decorateParam$3","$a6ab01cd18fda354$var$mutationIdByRowCol","$a6ab01cd18fda354$var$mutationIdArrByMove","$a6ab01cd18fda354$export$5678530e7d08deeb","$a6ab01cd18fda354$var$_a16","_selectionProtectionRenderModel","_correctPermissionRange","_getRefRangeMutationsByMoveRows","_getRefRangeMutationsByMoveCols","_getRefRangeMutationsByInsertRows","_getRefRangeMutationsByInsertCols","_getRefRangeMutationsByDeleteCols","_getRefRangeMutationsByDeleteRows","permissionRangeLapRules","cloneRule","rangesByRemove","cloneRange","_checkIsRightRange","insertStart","insertLength","hasLap","moveToStartRow","moveFromStartRow","moveToStartCol","moveFromStartCol","$a6ab01cd18fda354$var$__defProp$2","$a6ab01cd18fda354$var$__getOwnPropDesc$2","$a6ab01cd18fda354$var$__decorateClass$2","$a6ab01cd18fda354$var$__decorateParam$2","$a6ab01cd18fda354$export$6c91eef2b3ff9a08","$a6ab01cd18fda354$var$_a17","oldPermissionPoint","newPermissionPoint","allAllowedParams","objectID","objectType","actions","Factor","$a6ab01cd18fda354$var$_a18","$a6ab01cd18fda354$var$__defProp$1","$a6ab01cd18fda354$var$__getOwnPropDesc$1","$a6ab01cd18fda354$var$__decorateClass$1","$a6ab01cd18fda354$var$__decorateParam$1","$a6ab01cd18fda354$var$NumberCellDisplayController","_initInterceptorCellContent","location","stripErrorMargin","$a6ab01cd18fda354$var$_ExclusiveRangeService","arguments","_ensureUnitMap","_exclusiveRanges","_ensureSubunitMap","unitMap","_ensureFeature","feature","subunitMap","addExclusiveRange","getExclusiveRanges","clearExclusiveRanges","clearExclusiveRangesByGroupId","groupId","featureMap","newFeatureMap","getInterestGroupId","interestGroupId","featureMapRanges","featureMapRange","$a6ab01cd18fda354$var$defaultPluginConfig","$a6ab01cd18fda354$var$__defProp2","$a6ab01cd18fda354$var$__getOwnPropDesc","$a6ab01cd18fda354$var$__defNormalProp2","$a6ab01cd18fda354$var$__decorateClass","$a6ab01cd18fda354$var$__decorateParam","$a6ab01cd18fda354$var$__publicField2","Plugin","_config","rest","_initConfig","_initDependencies","onRendered","onlyRegisterFormulaRelatedMutations","sheetInjector","dependencies","useClass","notExecuteFormula","mergeOverrideWithDependencies","override","d","DependentOn","UniverFormulaEnginePlugin","themeService","styleSheet","getCurrentTheme","ColorKit","primaryColor","setAlpha","toRgbString","strokeWidth","stroke","widgets","widgetSize","widgetStrokeWidth","widgetStroke","colorWhite","hasAutoFill","AutofillSize","AutofillStrokeWidth","AutofillStroke","hasRowHeader","rowHeaderFill","rowHeaderStroke","rowHeaderStrokeWidth","hasColumnHeader","columnHeaderFill","columnHeaderStroke","columnHeaderStrokeWidth","expandCornerSize","selectionWithCoordAndStyle","rangeWithCoord","primaryWithCoord","$a6ab01cd18fda354$export$dcdb281620f47c11","mergeInfo","newCellRange","getCellInfoInMergeData","newSelectionData","makeCellRangeToRangeData","selectionsBeforeMutation","primaryBeforeMutation","rangeByColumn","find","rangeByRow","selectionsByRedo","selections2","setSelectionsParamByUndo","$a6ab01cd18fda354$var$cellHasValue","$a6ab01cd18fda354$var$hasValueFromMatrixWithSpanInfo","spanAnchor","$a6ab01cd18fda354$var$getMatrixWithSpanInfo","mergedCellsInRange","getMergedCellRange","returnCellMatrix","startColumn2","startRow2","endColumn2","endRow2","createRowColIter","$a6ab01cd18fda354$var$getExpandedRangeLeft","allMatrixWithSpan","leftOffset","isWorksheetHasSpan","hasValue","$a6ab01cd18fda354$var$getExpandedRangeRight","rightOffset","$a6ab01cd18fda354$var$getExpandedRangeUp","upOffset","$a6ab01cd18fda354$var$getExpandedRangeDown","downOffset","directions","maxColumn","worksheetHasSpan","getSnapshot","up","down","changed","spanAnchors","rangeProtectionRuleModel","workbookEditablePermission","worksheetEditPermission","ruleList","ruleRange","permissionPoint","$a6ab01cd18fda354$var$checkCellContentInRanges","$a6ab01cd18fda354$var$checkCellContentInRange","someCellGoingToBeRemoved","cellHasValue","$a6ab01cd18fda354$var$getClearContentMutationParamsForRanges","redoMatrix","$a6ab01cd18fda354$var$getClearContentMutationParamForRange","willRemoveSomeCell","injector","$a6ab01cd18fda354$var$SetHideGridlinesUndoMutationFactory","oldStatus","showGridlines","hideGridlines","$a6ab01cd18fda354$export$ded5baff375d10f","$a6ab01cd18fda354$var$SetWorksheetRightToLeftUndoMutationFactory","oldState","rightToLeft","$a6ab01cd18fda354$export$ec74e7dca9d497c3","setWorksheetRightToLeftMutationParams","$17e55d3dbb81e39c$export$9f6ea8e48bc26eab","$b7gpN","$jSzwf","$iNetn","project","resultSelector","operate","source","subscriber","innerSubscriber","isComplete","checkComplete","createOperatorSubscriber","unsubscribe","innerIndex","outerIndex","innerFrom","innerValue","$1e668bb1143ccf68$export$2c6e686c0c450ac0"],"version":3,"file":"es.9d442354.js.map"}